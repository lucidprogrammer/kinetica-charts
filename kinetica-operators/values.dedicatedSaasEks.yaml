
# environment refers to either of "onPrem" "saas" "marketPlace"
# "saas" "marketPlace" are used by Kinetica only
# for a customer trying to install the chart on his own wherever, it should be onPrem
environment: "saas"
# onPrem Providers: "k3s" "kind" "eks" "aks" 
# saas Providers: eks
# marketPlace Providers: aks eks
provider: eks

# clusterName and clusterRegion are used only when environment is marketPlace and provider is eks
# its used in the monitoring related configmaps
clusterName: "cluster-001"
clusterRegion: ""

kubeRbacProxy:
    image:
      repository: "quay.io/brancz/kube-rbac-proxy"
      tag: "v0.14.2"

kubeStateMetrics:
  install: true
  image:
    repository: "registry.k8s.io/kube-state-metrics/kube-state-metrics"
    tag: "v2.10.1"

otelCollector:
  install: true
  image:
    repository: "otel/opentelemetry-collector-contrib"
    tag: "0.95.0"

fluentBit:
  image:
    repository: "docker.io/fluent/fluent-bit"
    tag: "2.2"


nodeSelector:
  app.kinetica.com/pool: infra
tolerations: []
affinity: {}

certManager:
  install: true
"cert-manager":
  installCRDs: 'true'
  namespace: kinetica-system
  nodeSelector:
    'app.kinetica.com/pool': 'infra'
  webhook:
    nodeSelector:
      'app.kinetica.com/pool': 'infra'
  cainjector:
    nodeSelector:
      'app.kinetica.com/pool': 'infra'
  startupapicheck:
    nodeSelector:
      'app.kinetica.com/pool': 'infra'
  
ingressNginx:
  install: true
"ingress-nginx":
  defaultBackend:
    enabled: true
    image:
      repository: docker.io/kineticadevcloud/kinetica-default-backend
      tag: v0.0.1
      digest: ""
    extraEnvs:
      - name: DEBUG
        value: "false"
  controller:
    allowSnippetAnnotations: true
    service:
      annotations:
        'service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout': 3600
        'service.beta.kubernetes.io/aws-load-balancer-backend-protocol': tcp
        'service.beta.kubernetes.io/aws-load-balancer-type': nlb
gpuOperator:
  install: false
  "gpu-operator":
    mig:
      strategy: single
    driver:
      enabled: true
      version: "535.54.03"

    toolkit:
      enabled: true
openldap:
  namespace: "gpudb"
  fullnameOverride: "openldap"
  global:
    ldapPort: 1389
  initContainers:
      - name: openldap-create-directory-structure
        image: busybox
        command:
          [
            "sh",
            "-c",
            "mkdir -p /bitnami/openldap/data && chown -R 1001:1001 /bitnami",
          ]
        volumeMounts:
        - name: data
          mountPath: /bitnami
  env:
    LDAP_BACKEND: "mdb"
    LDAP_ORGANISATION: "Kinetica DB Inc."
    LDAP_DOMAIN: "kinetica.com"
    LDAP_LOG_LEVEL: "128"
    LDAP_ENABLE_TLS: "no"
  affinity: {}
  podAntiAffinity: {}
  nodeSelector:
    'app.kinetica.com/pool': 'infra'
  persistence:
    enabled: true
    existingClaim: ""
    accessMode: "ReadWriteOnce"
    size: "1Gi"
    storageClass: "cluster-001-storageclass"

