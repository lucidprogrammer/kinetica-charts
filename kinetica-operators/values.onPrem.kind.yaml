
# environment refers to either of "onPrem" "saas" "marketPlace"
# "saas" "marketPlace" are used by Kinetica only
# for a customer trying to install the chart on his own wherever, it should be onPrem
environment: "onPrem"
# onPrem Providers: "k3s" "kind" "eks" "aks" "other"
# saas Providers: eks
# marketPlace Providers: aks eks
provider: kind


nodeSelector: {}
tolerations: []
affinity: {}


ingressNginx:
  install: true
"ingress-nginx":  
  tcp:
    1389: "gpudb/openldap:1389"
    4317: "kinetica-system/otel-collector:4317"
    5432: "gpudb/kinetica-sample-rank0-service:5432"
    9002: "gpudb/kinetica-sample-rank0-service:9002"
    9191: "gpudb/kinetica-sample-rank0-service:9191"
    9300: "gpudb/kinetica-sample-rank0-service:9300"
  controller:
    hostPort:
      enabled: true
    allowSnippetAnnotations: true
    hostNetwork: true
    terminationGracePeriodSeconds: 0
    service:
      type: "NodePort"            
    extraArgs:
      publish-status-address: "localhost"
    publishService:
      enabled: false
    nodeSelector:
      ingress-ready: "true"
    tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Equal"
        effect: "NoSchedule"
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
    admissionWebhooks:
      enabled: true
      patch:
        enabled: true  
        image:
          repository: k8s.gcr.io/ingress-nginx/kube-webhook-certgen
          tag: v1.1.1
          digest: ""
openldap:
  namespace: "gpudb"
  fullnameOverride: "openldap"
  global:
    ldapPort: 1389
  env:
    LDAP_BACKEND: "mdb"
    LDAP_ORGANISATION: "Kinetica DB Inc."
    LDAP_DOMAIN: "kinetica.com"
    LDAP_LOG_LEVEL: "128"
    LDAP_ENABLE_TLS: "no"
  affinity: {}
  podAntiAffinity: {}
  livenessProbe:
    enabled: true
  readinessProbe:
    enabled: true
  startupProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 30
  
db:
  # do you want to provision a database
  create: true
  name: kinetica-kind-sample
  
  gpudbCluster:
    config:
      tieredStorage:
        globalTier:
          colocateDisks: true
        persistTier:
          default:
            limit: ""
            provisioner: "rancher.io/local-path"
            volumeClaim:
              spec:
                storageClassName: "standard"
        

dbAdminUser:
    create: true
   
dbWorkbench:
  create: true
  

  