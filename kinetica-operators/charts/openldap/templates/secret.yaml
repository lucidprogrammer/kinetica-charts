{{ if not .Values.existingSecret }}
{{- $namespace := .Values.openldapNamespace | default "gpudb" -}}
{{- $config_password := (randAlphaNum 32) | quote -}}
{{- $admin_password := default (randAlphaNum 32) .Values.adminPassword  | quote -}}
{{- $existingSecret := (lookup "v1" "Secret" $namespace "openldap") }}
{{- if $existingSecret }}
  {{- $config_password = index $existingSecret.data "LDAP_CONFIG_PASSWORD" | b64dec | quote -}}
  {{- $admin_password = index $existingSecret.data "LDAP_ADMIN_PASSWORD" | b64dec | quote -}}
{{- end }}
{{- $values := merge (dict "configPassword" $config_password) (dict "adminPasswordCalculated" $admin_password) .Values -}}


apiVersion: v1
kind: Secret
metadata:
  namespace: {{ $namespace }}
  name: {{ template "openldap.fullname" . }}
  labels:
    app: {{ template "openldap.name" . }}
    chart: {{ template "openldap.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.extraLabels }}
{{ toYaml .Values.extraLabels | indent 4 }}
{{- end }}
type: Opaque
stringData:
  LDAP_ADMIN_USERNAME: "{{ .Values.global.configUser }}"
  LDAP_ADMIN_PASSWORD: {{ $values.adminPasswordCalculated }}
  LDAP_CONFIG_PASSWORD: {{ $values.configPassword }}
  {{/* LDAP_CONFIG_ADMIN_PASSWORD is the variable required by the bitnami image, keeping both for backward compatibility */}}  
  LDAP_CONFIG_ADMIN_PASSWORD: {{ $values.configPassword  }}
 
  
{{ end }}