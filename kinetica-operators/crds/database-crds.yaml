
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaclusteradmins.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaClusterAdmin
    listKind: KineticaClusterAdminList
    plural: kineticaclusteradmins
    shortNames:
    - kca
    singular: kineticaclusteradmin
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.offline.offline
      name: Offline
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.processed
      name: Processed
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaClusterAdmin is the Schema for the kineticaclusteradmins
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaClusterAdminSpec defines the desired state of KineticaClusterAdmin
            properties:
              forceDbStatus:
                description: ForceDBStatus - Force a Status of the DB.
                type: string
              kineticaClusterName:
                description: Name - The name of the cluster to target.
                minLength: 5
                type: string
              offline:
                description: Offline - Pause/Resume of the DB.
                properties:
                  offline:
                    default: false
                    description: 'Set to true if desired state is offline. The supported
                      values are:    true    false'
                    type: boolean
                  options:
                    additionalProperties:
                      type: string
                    description: "Optional parameters. The default value is an empty
                      map ( {} ). Supported Parameters:   \tflush_to_disk\tFlush to
                      disk when going offline The supported values are:    \t\t\t\t\
                      \ttrue    \t\t\t\t\tfalse"
                    type: object
                required:
                - offline
                type: object
              rebalance:
                description: Rebalance of the DB.
                properties:
                  options:
                    additionalProperties:
                      type: string
                    description: "Optional parameters. The default value is an empty
                      map ( {} ). Supported Parameters: \t\trebalance_sharded_data\t
                      \tIf true, sharded data will be rebalanced approximately equally
                      across the                                 \tcluster. Note that
                      for clusters with large amounts of sharded data, this data \
                      \                                \ttransfer could be time-consuming
                      and result in delayed query responses.                     \
                      \            \tThe default value is true. The supported values
                      are:                                  true                 \
                      \                 false \n \t\trebalance_unsharded_data\tIf
                      true, unsharded data (a.k.a. randomly-sharded) will be rebalanced
                      \t\t                           \tapproximately equally across
                      the cluster. Note that for clusters with large \t\t        \
                      \                   \tamounts of unsharded data, this data transfer
                      could be time-consuming and \t\t                           \t
                      result in delayed query responses. \t\t                    \
                      \       \tThe default value is true. The supported values are:\
                      \                                  true                    \
                      \              false \n \t\ttable_includes\t\t\t\tComma-separated
                      list of unsharded table names to rebalance. Not applicable \t
                      \t\t\t\t\t\t\t\tto sharded tables because they are always rebalanced.
                      Cannot be used \t\t\t\t\t\t\t\t\tsimultaneously with table_excludes.
                      \t\t\t\t\t\t\t\t\tThis parameter is ignored if rebalance_unsharded_data
                      is false. \n \t\ttable_excludes\t\t\t\tComma-separated list
                      of unsharded table names to not rebalance. Not applicable \t
                      \t\t\t\t\t\t\t\tto sharded tables because they are always rebalanced.
                      Cannot be used \t\t\t\t\t\t\t\t\tsimultaneously with table_includes.
                      This parameter is ignored if rebalance_ \t\t\t\t\t\t\t\t\tunsharded_data
                      is false. \n \t\taggressiveness\t\t\t\tInfluences how much data
                      is moved at a time during rebalance. A higher \t\t\t\t\t\t\t
                      \t\taggressiveness will complete the rebalance faster. A lower
                      aggressiveness \t\t\t\t\t\t\t\t\twill take longer but allow
                      for better interleaving between the rebalance \t\t\t\t\t\t\t
                      \t\tand other queries. Valid values are constants from 1 (lowest)
                      to 10 (highest). \t\t\t\t\t\t\t\t\tThe default value is '1'.
                      \n \t\tcompact_after_rebalance \tPerform compaction of deleted
                      records once the rebalance completes to \t\t\t\t\t\t\t\t\treclaim
                      memory and disk space. Default is true, unless \t\t\t\t\t\t\t
                      \t\trepair_incorrectly_sharded_data is set to true. \t\t\t\t
                      \t\t\t\t\tThe default value is true. The supported values are:\
                      \                                  true                    \
                      \              false \n \t\tcompact_only \t\t\t\tIf set to true,
                      ignore rebalance options and attempt to perform compaction \t
                      \t\t\t\t\t\t\t\tof deleted records to reclaim memory and disk
                      space without rebalancing first. \t\t\t\t\t\t\t\t\tThe default
                      value is false. The supported values are:                  \
                      \                true                                  false
                      \n \t\trepair_incorrectly_sharded_data\t\tScans for any data
                      sharded incorrectly and re-routes the data to \t\t\t\t\t\t\t
                      \t\t\t\tthe correct location. Only necessary if /admin/verifydb
                      reports an \t\t\t\t\t\t\t\t\t\t\terror in sharding alignment.
                      This can be done as part of a typical \t\t\t\t\t\t\t\t\t\t\t
                      rebalance after expanding the cluster or in a standalone fashion
                      \t\t\t\t\t\t\t\t\t\t\twhen it is believed that data is sharded
                      incorrectly somewhere in \t\t\t\t\t\t\t\t\t\t\tthe cluster.
                      Compaction will not be performed by default when this \t\t\t
                      \t\t\t\t\t\t\t\tis enabled. If this option is set to true, the
                      time necessary to \t\t\t\t\t\t\t\t\t\t\trebalance and the memory
                      used by the rebalance may increase. \t\t\t\t\t\t\t\t\t\t\tThe
                      default value is false. The supported values are:          \
                      \                        \t\ttrue                          \
                      \        \t\tfalse"
                    type: object
                type: object
              regenerateDBConfig:
                description: RegenerateDBConfig - Force regenerate of DB ConfigMap.   true
                  - restarts DB Pods after config generation   false - writes new
                  configuration without restarting the DB Pods
                properties:
                  restart:
                    default: false
                    description: Restart - Scales down the DB STS and back up once
                      the DB Configuration has been regenerated.
                    type: boolean
                required:
                - restart
                type: object
            required:
            - kineticaClusterName
            type: object
          status:
            description: KineticaClusterAdminStatus defines the observed state of
              KineticaClusterAdmin
            properties:
              phase:
                description: Phase - The current phase/state of the Admin request
                type: string
              processed:
                default: false
                description: Processed - Indicates if the admin request has already
                  been processed. Avoids the request being rerun in the case the Operator
                  gets restarted.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaclusterbackups.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaClusterBackup
    listKind: KineticaClusterBackupList
    plural: kineticaclusterbackups
    shortNames:
    - kcb
    singular: kineticaclusterbackup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .status.progress.itemsBackedUp
      name: ITEMS
      type: string
    - jsonPath: .status.progress.totalItems
      name: TOTAL
      type: string
    - jsonPath: .status.volumeSnapshotsAttempted
      name: A/SNAP
      type: string
    - jsonPath: .status.volumeSnapshotsCompleted
      name: C/SNAP
      type: string
    - jsonPath: .status.errors
      name: ERRORS
      type: integer
    - jsonPath: .status.warnings
      name: WARNINGS
      type: integer
    - jsonPath: .status.startTimestamp
      name: CREATED
      type: string
    - jsonPath: .status.expiration
      name: EXPIRES
      type: string
    - jsonPath: .status.coldTierBackup
      name: COLDTIER
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaClusterBackup KineticaClusterBackup is the Schema for
          the kineticaclusterbackups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          provider:
            default:
              backupProvider: velero
              linkedItemName: ''
            description: Fields specific to the linked backup engine
            properties:
              backupProvider:
                default: velero
                description: Name of the backup/restore provider. FOR INTERNAL USE
                  ONLY.
                type: string
              linkedItemName:
                default: ''
                description: Name of the backup in the linked BackupProvider. FOR
                  INTERNAL USE ONLY.
                type: string
            type: object
          spec:
            description: BackupSpec defines the specification for a Velero backup.
            properties:
              csiSnapshotTimeout:
                description: CSISnapshotTimeout specifies the time used to wait for
                  CSI VolumeSnapshot status turns to ReadyToUse during creation, before
                  returning error as timeout. The default value is 10 minute.
                type: string
              datamover:
                description: DataMover specifies the data mover to be used by the
                  backup. If DataMover is "" or "velero", the built-in data mover
                  will be used.
                type: string
              defaultVolumesToFsBackup:
                description: DefaultVolumesToFsBackup specifies whether pod volume
                  file system backup should be used for all volumes by default.
                nullable: true
                type: boolean
              defaultVolumesToRestic:
                description: "DefaultVolumesToRestic specifies whether restic should
                  be used to take a backup of all pod volumes by default. \n Deprecated:
                  this field is no longer used and will be removed entirely in future.
                  Use DefaultVolumesToFsBackup instead."
                nullable: true
                type: boolean
              excludedClusterScopedResources:
                description: ExcludedClusterScopedResources is a slice of cluster-scoped
                  resource type names to exclude from the backup. If set to "*", all
                  cluster-scoped resource types are excluded. The default value is
                  empty.
                items:
                  type: string
                nullable: true
                type: array
              excludedNamespaceScopedResources:
                description: ExcludedNamespaceScopedResources is a slice of namespace-scoped
                  resource type names to exclude from the backup. If set to "*", all
                  namespace-scoped resource types are excluded. The default value
                  is empty.
                items:
                  type: string
                nullable: true
                type: array
              excludedNamespaces:
                description: ExcludedNamespaces contains a list of namespaces that
                  are not included in the backup.
                items:
                  type: string
                nullable: true
                type: array
              excludedResources:
                description: ExcludedResources is a slice of resource names that are
                  not included in the backup.
                items:
                  type: string
                nullable: true
                type: array
              hooks:
                description: Hooks represent custom behaviors that should be executed
                  at different phases of the backup.
                properties:
                  resources:
                    description: Resources are hooks that should be executed when
                      backing up individual instances of a resource.
                    items:
                      description: BackupResourceHookSpec defines one or more BackupResourceHooks
                        that should be executed based on the rules defined for namespaces,
                        resources, and label selector.
                      properties:
                        excludedNamespaces:
                          description: ExcludedNamespaces specifies the namespaces
                            to which this hook spec does not apply.
                          items:
                            type: string
                          nullable: true
                          type: array
                        excludedResources:
                          description: ExcludedResources specifies the resources to
                            which this hook spec does not apply.
                          items:
                            type: string
                          nullable: true
                          type: array
                        includedNamespaces:
                          description: IncludedNamespaces specifies the namespaces
                            to which this hook spec applies. If empty, it applies
                            to all namespaces.
                          items:
                            type: string
                          nullable: true
                          type: array
                        includedResources:
                          description: IncludedResources specifies the resources to
                            which this hook spec applies. If empty, it applies to
                            all resources.
                          items:
                            type: string
                          nullable: true
                          type: array
                        labelSelector:
                          description: LabelSelector, if specified, filters the resources
                            to which this hook spec applies.
                          nullable: true
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        name:
                          description: Name is the name of this hook.
                          type: string
                        post:
                          description: PostHooks is a list of BackupResourceHooks
                            to execute after storing the item in the backup. These
                            are executed after all "additional items" from item actions
                            are processed.
                          items:
                            description: BackupResourceHook defines a hook for a resource.
                            properties:
                              exec:
                                description: Exec defines an exec hook.
                                properties:
                                  command:
                                    description: Command is the command and arguments
                                      to execute.
                                    items:
                                      type: string
                                    minItems: 1
                                    type: array
                                  container:
                                    description: Container is the container in the
                                      pod where the command should be executed. If
                                      not specified, the pod's first container is
                                      used.
                                    type: string
                                  onError:
                                    description: OnError specifies how Velero should
                                      behave if it encounters an error executing this
                                      hook.
                                    enum:
                                    - Continue
                                    - Fail
                                    type: string
                                  timeout:
                                    description: Timeout defines the maximum amount
                                      of time Velero should wait for the hook to complete
                                      before considering the execution a failure.
                                    type: string
                                required:
                                - command
                                type: object
                            required:
                            - exec
                            type: object
                          type: array
                        pre:
                          description: PreHooks is a list of BackupResourceHooks to
                            execute prior to storing the item in the backup. These
                            are executed before any "additional items" from item actions
                            are processed.
                          items:
                            description: BackupResourceHook defines a hook for a resource.
                            properties:
                              exec:
                                description: Exec defines an exec hook.
                                properties:
                                  command:
                                    description: Command is the command and arguments
                                      to execute.
                                    items:
                                      type: string
                                    minItems: 1
                                    type: array
                                  container:
                                    description: Container is the container in the
                                      pod where the command should be executed. If
                                      not specified, the pod's first container is
                                      used.
                                    type: string
                                  onError:
                                    description: OnError specifies how Velero should
                                      behave if it encounters an error executing this
                                      hook.
                                    enum:
                                    - Continue
                                    - Fail
                                    type: string
                                  timeout:
                                    description: Timeout defines the maximum amount
                                      of time Velero should wait for the hook to complete
                                      before considering the execution a failure.
                                    type: string
                                required:
                                - command
                                type: object
                            required:
                            - exec
                            type: object
                          type: array
                      required:
                      - name
                      type: object
                    nullable: true
                    type: array
                type: object
              includeClusterResources:
                description: IncludeClusterResources specifies whether cluster-scoped
                  resources should be included for consideration in the backup.
                nullable: true
                type: boolean
              includedClusterScopedResources:
                description: IncludedClusterScopedResources is a slice of cluster-scoped
                  resource type names to include in the backup. If set to "*", all
                  cluster-scoped resource types are included. The default value is
                  empty, which means only related cluster-scoped resources are included.
                items:
                  type: string
                nullable: true
                type: array
              includedNamespaceScopedResources:
                description: IncludedNamespaceScopedResources is a slice of namespace-scoped
                  resource type names to include in the backup. The default value
                  is "*".
                items:
                  type: string
                nullable: true
                type: array
              includedNamespaces:
                description: IncludedNamespaces is a slice of namespace names to include
                  objects from. If empty, all namespaces are included.
                items:
                  type: string
                nullable: true
                type: array
              includedResources:
                description: IncludedResources is a slice of resource names to include
                  in the backup. If empty, all resources are included.
                items:
                  type: string
                nullable: true
                type: array
              itemOperationTimeout:
                description: ItemOperationTimeout specifies the time used to wait
                  for asynchronous BackupItemAction operations The default value is
                  1 hour.
                type: string
              labelSelector:
                description: LabelSelector is a metav1.LabelSelector to filter with
                  when adding individual objects to the backup. If empty or nil, all
                  objects are included. Optional.
                nullable: true
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              metadata:
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              orLabelSelectors:
                description: OrLabelSelectors is list of metav1.LabelSelector to filter
                  with when adding individual objects to the backup. If multiple provided
                  they will be joined by the OR operator. LabelSelector as well as
                  OrLabelSelectors cannot co-exist in backup request, only one of
                  them can be used.
                items:
                  description: A label selector is a label query over a set of resources.
                    The result of matchLabels and matchExpressions are ANDed. An empty
                    label selector matches all objects. A null label selector matches
                    no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                nullable: true
                type: array
              orderedResources:
                additionalProperties:
                  type: string
                description: OrderedResources specifies the backup order of resources
                  of specific Kind. The map key is the resource name and value is
                  a list of object names separated by commas. Each resource name has
                  format "namespace/objectname".  For cluster resources, simply use
                  "objectname".
                nullable: true
                type: object
              resourcePolicy:
                description: ResourcePolicy specifies the referenced resource policies
                  that backup should follow
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                required:
                - kind
                - name
                type: object
              snapshotMoveData:
                description: SnapshotMoveData specifies whether snapshot data should
                  be moved
                nullable: true
                type: boolean
              snapshotVolumes:
                description: SnapshotVolumes specifies whether to take snapshots of
                  any PV's referenced in the set of objects included in the Backup.
                nullable: true
                type: boolean
              storageLocation:
                description: StorageLocation is a string containing the name of a
                  BackupStorageLocation where the backup should be stored.
                type: string
              ttl:
                description: TTL is a time.Duration-parseable string describing how
                  long the Backup should be retained for.
                type: string
              uploaderConfig:
                description: UploaderConfig specifies the configuration for the uploader.
                nullable: true
                properties:
                  parallelFilesUpload:
                    description: ParallelFilesUpload is the number of files parallel
                      uploads to perform when using the uploader.
                    type: integer
                type: object
              volumeSnapshotLocations:
                description: VolumeSnapshotLocations is a list containing names of
                  VolumeSnapshotLocations associated with this backup.
                items:
                  type: string
                type: array
            type: object
          status:
            properties:
              backupItemOperationsAttempted:
                description: BackupItemOperationsAttempted is the total number of
                  attempted async BackupItemAction operations for this backup.
                type: integer
              backupItemOperationsCompleted:
                description: BackupItemOperationsCompleted is the total number of
                  successfully completed async BackupItemAction operations for this
                  backup.
                type: integer
              backupItemOperationsFailed:
                description: BackupItemOperationsFailed is the total number of async
                  BackupItemAction operations for this backup which ended with an
                  error.
                type: integer
              clusterSize:
                description: ClusterSize the current number of ranks & type i.e. CPU
                  or GPU of the cluster when the backup took place.
                properties:
                  tshirtSize:
                    description: "ClusterSizeEnum - T-Shirt size of the Kinetica DB
                      Cluster i.e. a representation of the number of nodes in a simple
                      to understand T-Short size scheme. This indicates the size of
                      the cluster i.e. the number of nodes. It does not identify the
                      size of the cloud provider nodes. For node size see ClusterTypeEnum.
                      \n Supported Values are: - \n \tXS \tS \tM \tL \tXL \tXXL \t\
                      XXXL"
                    enum:
                    - XS
                    - S
                    - M
                    - L
                    - XL
                    - XXL
                    - XXXL
                    type: string
                  tshirtType:
                    description: ClusterTypeEnum - An Enum of the node types of a
                      KineticaCluster e.g. CPU, GPU along with the Cloud Provider
                      node size e.g. size of the VM.
                    enum:
                    - SmallCPU
                    - LargeCPU
                    - SmallGPU
                    - LargeGPU
                    type: string
                required:
                - tshirtSize
                - tshirtType
                type: object
              coldTierBackup:
                type: string
              completionTimestamp:
                description: CompletionTimestamp records the time a backup was completed.
                  Completion time is recorded even on failed backups. Completion time
                  is recorded before uploading the backup object. The server's time
                  is used for CompletionTimestamps
                format: date-time
                nullable: true
                type: string
              csiVolumeSnapshotsAttempted:
                description: CSIVolumeSnapshotsAttempted is the total number of attempted
                  CSI VolumeSnapshots for this backup.
                type: integer
              csiVolumeSnapshotsCompleted:
                description: CSIVolumeSnapshotsCompleted is the total number of successfully
                  completed CSI VolumeSnapshots for this backup.
                type: integer
              errors:
                description: Errors is a count of all error messages that were generated
                  during execution of the backup.  The actual errors are in the backup's
                  log file in object storage.
                type: integer
              expiration:
                description: Expiration is when this Backup is eligible for garbage-collection.
                format: date-time
                nullable: true
                type: string
              failureReason:
                description: FailureReason is an error that caused the entire backup
                  to fail.
                type: string
              formatVersion:
                description: FormatVersion is the backup format version, including
                  major, minor, and patch version.
                type: string
              hookStatus:
                description: HookStatus contains information about the status of the
                  hooks.
                nullable: true
                properties:
                  hooksAttempted:
                    description: HooksAttempted is the total number of attempted hooks
                      Specifically, HooksAttempted represents the number of hooks
                      that failed to execute and the number of hooks that executed
                      successfully.
                    type: integer
                  hooksFailed:
                    description: HooksFailed is the total number of hooks which ended
                      with an error
                    type: integer
                type: object
              phase:
                description: Phase is the current state of the Backup.
                enum:
                - New
                - FailedValidation
                - InProgress
                - WaitingForPluginOperations
                - WaitingForPluginOperationsPartiallyFailed
                - Finalizing
                - FinalizingPartiallyFailed
                - Completed
                - PartiallyFailed
                - Failed
                - Deleting
                type: string
              progress:
                description: Progress contains information about the backup's execution
                  progress. Note that this information is best-effort only -- if Velero
                  fails to update it during a backup for any reason, it may be inaccurate/stale.
                nullable: true
                properties:
                  itemsBackedUp:
                    description: ItemsBackedUp is the number of items that have actually
                      been written to the backup tarball so far.
                    type: integer
                  totalItems:
                    description: TotalItems is the total number of items to be backed
                      up. This number may change throughout the execution of the backup
                      due to plugins that return additional related items to back
                      up, the velero.io/exclude-from-backup label, and various other
                      filters that happen as items are processed.
                    type: integer
                type: object
              startTimestamp:
                description: StartTimestamp records the time a backup was started.
                  Separate from CreationTimestamp, since that value changes on restores.
                  The server's time is used for StartTimestamps
                format: date-time
                nullable: true
                type: string
              validationErrors:
                description: ValidationErrors is a slice of all validation errors
                  (if applicable).
                items:
                  type: string
                nullable: true
                type: array
              version:
                description: 'Version is the backup format major version. Deprecated:
                  Please see FormatVersion'
                type: integer
              volumeSnapshotsAttempted:
                description: VolumeSnapshotsAttempted is the total number of attempted
                  volume snapshots for this backup.
                type: integer
              volumeSnapshotsCompleted:
                description: VolumeSnapshotsCompleted is the total number of successfully
                  completed volume snapshots for this backup.
                type: integer
              warnings:
                description: Warnings is a count of all warning messages that were
                  generated during execution of the backup. The actual warnings are
                  in the backup's log file in object storage.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaclusterelasticities.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaClusterElasticity
    listKind: KineticaClusterElasticityList
    plural: kineticaclusterelasticities
    shortNames:
    - kce
    singular: kineticaclusterelasticity
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.fromClusterSize.tshirtSize
      name: From-TShirt-Size
      type: string
    - jsonPath: .status.fromClusterSize.tshirtType
      name: From-TShirt-Type
      type: string
    - jsonPath: .status.toClusterSize.tshirtSize
      name: To-TShirt-Size
      type: string
    - jsonPath: .status.toClusterSize.tshirtType
      name: To-TShirt-Type
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.processed
      name: Processed
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaClusterElasticity is the Schema for the kineticaclusterelasticities
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaClusterElasticitySpec defines the desired state of
              KineticaClusterElasticity
            properties:
              clusterName:
                type: string
              scaling:
                description: Scaling - Target scale to scale up/down the cluster
                properties:
                  clusterSize:
                    description: ClusterSize - Combination of TShirtSize & TShirtType
                    properties:
                      tshirtSize:
                        description: "ClusterSizeEnum - T-Shirt size of the Kinetica
                          DB Cluster i.e. a representation of the number of nodes
                          in a simple to understand T-Short size scheme. This indicates
                          the size of the cluster i.e. the number of nodes. It does
                          not identify the size of the cloud provider nodes. For node
                          size see ClusterTypeEnum. \n Supported Values are: - \n
                          \tXS \tS \tM \tL \tXL \tXXL \tXXXL"
                        enum:
                        - XS
                        - S
                        - M
                        - L
                        - XL
                        - XXL
                        - XXXL
                        type: string
                      tshirtType:
                        description: ClusterTypeEnum - An Enum of the node types of
                          a KineticaCluster e.g. CPU, GPU along with the Cloud Provider
                          node size e.g. size of the VM.
                        enum:
                        - SmallCPU
                        - LargeCPU
                        - SmallGPU
                        - LargeGPU
                        type: string
                    required:
                    - tshirtSize
                    - tshirtType
                    type: object
                type: object
            type: object
          status:
            description: KineticaClusterElasticityStatus defines the observed state
              of KineticaClusterElasticity
            properties:
              fromClusterSize:
                description: FromClusterSize - original cluster size
                properties:
                  tshirtSize:
                    description: "ClusterSizeEnum - T-Shirt size of the Kinetica DB
                      Cluster i.e. a representation of the number of nodes in a simple
                      to understand T-Short size scheme. This indicates the size of
                      the cluster i.e. the number of nodes. It does not identify the
                      size of the cloud provider nodes. For node size see ClusterTypeEnum.
                      \n Supported Values are: - \n \tXS \tS \tM \tL \tXL \tXXL \t\
                      XXXL"
                    enum:
                    - XS
                    - S
                    - M
                    - L
                    - XL
                    - XXL
                    - XXXL
                    type: string
                  tshirtType:
                    description: ClusterTypeEnum - An Enum of the node types of a
                      KineticaCluster e.g. CPU, GPU along with the Cloud Provider
                      node size e.g. size of the VM.
                    enum:
                    - SmallCPU
                    - LargeCPU
                    - SmallGPU
                    - LargeGPU
                    type: string
                required:
                - tshirtSize
                - tshirtType
                type: object
              phase:
                description: Phase - The current phase/state of the Elasticity request
                type: string
              processed:
                default: false
                description: Processed - Indicates if the elasticity request has already
                  been processed. Avoids the request being rerun in the case the Operator
                  gets restarted.
                type: boolean
              toClusterSize:
                description: ToClusterSize - new target cluster size
                properties:
                  tshirtSize:
                    description: "ClusterSizeEnum - T-Shirt size of the Kinetica DB
                      Cluster i.e. a representation of the number of nodes in a simple
                      to understand T-Short size scheme. This indicates the size of
                      the cluster i.e. the number of nodes. It does not identify the
                      size of the cloud provider nodes. For node size see ClusterTypeEnum.
                      \n Supported Values are: - \n \tXS \tS \tM \tL \tXL \tXXL \t\
                      XXXL"
                    enum:
                    - XS
                    - S
                    - M
                    - L
                    - XL
                    - XXL
                    - XXXL
                    type: string
                  tshirtType:
                    description: ClusterTypeEnum - An Enum of the node types of a
                      KineticaCluster e.g. CPU, GPU along with the Cloud Provider
                      node size e.g. size of the VM.
                    enum:
                    - SmallCPU
                    - LargeCPU
                    - SmallGPU
                    - LargeGPU
                    type: string
                required:
                - tshirtSize
                - tshirtType
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaclusterresourcegroups.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaClusterResourceGroup
    listKind: KineticaClusterResourceGroupList
    plural: kineticaclusterresourcegroups
    shortNames:
    - kcrg
    singular: kineticaclusterresourcegroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaClusterResourceGroup is the Schema for the kineticaclusterresourcegroups
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaClusterResourceGroupSpec defines the desired state
              of KineticaClusterResourceGroup
            properties:
              db_create_resource_group_request:
                properties:
                  adjoining_resource_group:
                    default: ''
                    description: AdjoiningResourceGroup -
                    type: string
                  name:
                    description: Name - name of the DB ResourceGroup 
                      https://docs.kinetica.com/7.1/azure/sql/resource_group/?search-highlight=resource+group#id-baea5b60-769c-5373-bff1-53f4f1ca5c21
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: Options - DB Options used when creating the ResourceGroup
                    type: object
                  ranking:
                    default: ''
                    description: "Ranking - Indicates the relative ranking among existing
                      resource groups where this new resource group will be placed.
                      When using before or after, specify which resource group this
                      one will be inserted before or after in input parameter adjoining_resource_group.
                      \n The supported values are: \n first last before after"
                    type: string
                required:
                - adjoining_resource_group
                - options
                - ranking
                type: object
              ringName:
                description: RingName is the name of the kinetica ring that this user
                  belongs to.
                type: string
            required:
            - ringName
            type: object
          status:
            description: KineticaClusterResourceGroupStatus defines the observed state
              of KineticaClusterResourceGroup
            properties:
              provisioned:
                type: string
            required:
            - provisioned
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaclusterrestores.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaClusterRestore
    listKind: KineticaClusterRestoreList
    plural: kineticaclusterrestores
    shortNames:
    - kcr
    singular: kineticaclusterrestore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .status.progress.itemsRestored
      name: ITEMS
      type: string
    - jsonPath: .status.progress.totalItems
      name: TOTAL
      type: string
    - jsonPath: .status.errors
      name: ERRORS
      type: integer
    - jsonPath: .status.warnings
      name: WARNINGS
      type: integer
    - jsonPath: .status.failureReason
      name: FAILREASON
      type: integer
    - jsonPath: .status.startTimestamp
      name: CREATED
      type: string
    - jsonPath: .status.completionTimestamp
      name: COMPLETED
      type: string
    - jsonPath: .status.coldTierRestore
      name: COLDTIER
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaClusterRestore KineticaClusterRestore is the Schema for
          the kineticaclusterrestores API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RestoreSpec defines the specification for a Velero restore.
            properties:
              backupName:
                description: BackupName is the unique name of the Velero backup to
                  restore from.
                type: string
              excludedNamespaces:
                description: ExcludedNamespaces contains a list of namespaces that
                  are not included in the restore.
                items:
                  type: string
                nullable: true
                type: array
              excludedResources:
                description: ExcludedResources is a slice of resource names that are
                  not included in the restore.
                items:
                  type: string
                nullable: true
                type: array
              includeClusterResources:
                description: IncludeClusterResources specifies whether cluster-scoped
                  resources should be included for consideration in the restore. If
                  null, defaults to true.
                nullable: true
                type: boolean
              includedNamespaces:
                description: IncludedNamespaces is a slice of namespace names to include
                  objects from. If empty, all namespaces are included.
                items:
                  type: string
                nullable: true
                type: array
              includedResources:
                description: IncludedResources is a slice of resource names to include
                  in the restore. If empty, all resources in the backup are included.
                items:
                  type: string
                nullable: true
                type: array
              labelSelector:
                description: LabelSelector is a metav1.LabelSelector to filter with
                  when restoring individual objects from the backup. If empty or nil,
                  all objects are included. Optional.
                nullable: true
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              namespaceMapping:
                additionalProperties:
                  type: string
                description: NamespaceMapping is a map of source namespace names to
                  target namespace names to restore into. Any source namespaces not
                  included in the map will be restored into namespaces of the same
                  name.
                type: object
              restorePVs:
                description: RestorePVs specifies whether to restore all included
                  PVs from snapshot (via the cloudprovider).
                nullable: true
                type: boolean
              scheduleName:
                description: ScheduleName is the unique name of the Velero schedule
                  to restore from. If specified, and BackupName is empty, Velero will
                  restore from the most recent successful backup created from this
                  schedule.
                type: string
            required:
            - backupName
            type: object
          status:
            properties:
              coldTierRestore:
                default: ''
                type: string
              completionTimestamp:
                description: CompletionTimestamp records the time the restore operation
                  was completed. Completion time is recorded even on failed restore.
                  The server's time is used for StartTimestamps
                format: date-time
                nullable: true
                type: string
              errors:
                description: Errors is a count of all error messages that were generated
                  during execution of the restore. The actual errors are stored in
                  object storage.
                type: integer
              failureReason:
                description: FailureReason is an error that caused the entire restore
                  to fail.
                type: string
              hookStatus:
                description: HookStatus contains information about the status of the
                  hooks.
                nullable: true
                properties:
                  hooksAttempted:
                    description: HooksAttempted is the total number of attempted hooks
                      Specifically, HooksAttempted represents the number of hooks
                      that failed to execute and the number of hooks that executed
                      successfully.
                    type: integer
                  hooksFailed:
                    description: HooksFailed is the total number of hooks which ended
                      with an error
                    type: integer
                type: object
              phase:
                description: Phase is the current state of the Restore
                enum:
                - New
                - FailedValidation
                - InProgress
                - WaitingForPluginOperations
                - WaitingForPluginOperationsPartiallyFailed
                - Completed
                - PartiallyFailed
                - Failed
                type: string
              progress:
                description: Progress contains information about the restore's execution
                  progress. Note that this information is best-effort only -- if Velero
                  fails to update it during a restore for any reason, it may be inaccurate/stale.
                nullable: true
                properties:
                  itemsRestored:
                    description: ItemsRestored is the number of items that have actually
                      been restored so far
                    type: integer
                  totalItems:
                    description: TotalItems is the total number of items to be restored.
                      This number may change throughout the execution of the restore
                      due to plugins that return additional related items to restore
                    type: integer
                type: object
              restoreItemOperationsAttempted:
                description: RestoreItemOperationsAttempted is the total number of
                  attempted async RestoreItemAction operations for this restore.
                type: integer
              restoreItemOperationsCompleted:
                description: RestoreItemOperationsCompleted is the total number of
                  successfully completed async RestoreItemAction operations for this
                  restore.
                type: integer
              restoreItemOperationsFailed:
                description: RestoreItemOperationsFailed is the total number of async
                  RestoreItemAction operations for this restore which ended with an
                  error.
                type: integer
              startTimestamp:
                description: StartTimestamp records the time the restore operation
                  was started. The server's time is used for StartTimestamps
                format: date-time
                nullable: true
                type: string
              validationErrors:
                description: ValidationErrors is a slice of all validation errors
                  (if applicable)
                items:
                  type: string
                nullable: true
                type: array
              warnings:
                description: Warnings is a count of all warning messages that were
                  generated during execution of the restore. The actual warnings are
                  stored in object storage.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaclusters.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaCluster
    listKind: KineticaClusterList
    plural: kineticaclusters
    shortNames:
    - kc
    singular: kineticacluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.gpudbCluster.replicas
      name: Ranks
      type: integer
    - jsonPath: .status.hmStatus.version
      name: Version
      type: string
    - jsonPath: .status.hmStatus.system_status
      name: System
      type: string
    - jsonPath: .status.hmStatus.license_status
      name: License
      type: string
    - jsonPath: .spec.payAsYouGo
      name: PayGo
      type: boolean
    - jsonPath: .status.hmStatus.host_httpd_status
      name: HTTPD
      type: string
    - jsonPath: .status.hmStatus.query_planner_status
      name: Query
      type: string
    - jsonPath: .status.hmStatus.ml_status
      name: ML
      type: string
    - jsonPath: .status.hmStatus.reveal_status
      name: Reveal
      type: string
    - jsonPath: .status.hmStatus.host_stats_status
      name: Stats
      priority: 1
      type: string
    - jsonPath: .status.hmStatus.host_num_gpus
      name: GPU
      priority: 1
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.clusterSize.tshirtSize
      name: Size
      priority: 1
      type: string
    - jsonPath: .status.clusterSize.tshirtType
      name: Type
      priority: 1
      type: string
    - jsonPath: .status.hmStatus.license_expiration
      name: Expiration
      type: string
    - jsonPath: .status.hmStatus.cluster_leader
      name: Cluster Leader
      priority: 1
      type: string
    - jsonPath: .status.hmStatus.cluster_operation
      name: Cluster Operation
      priority: 1
      type: string
    - jsonPath: .status.hmStatus.system_rebalancing
      name: System Rebalancing
      priority: 1
      type: integer
    - jsonPath: .status.hmStatus.host_mode
      name: Host Mode
      priority: 1
      type: string
    - jsonPath: .status.hmStatus.host_pid
      name: Host PID
      priority: 1
      type: integer
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaCluster is the Schema for the kineticaclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaClusterSpec defines the configuration for KineticaCluster
              DB
            properties:
              autoSuspend:
                default:
                  enabled: false
                  inactivityDuration: 1h
                description: An optional duration after which the database is stopped
                  and DB resources are freed
                properties:
                  enabled:
                    default: false
                    type: boolean
                  inactivityDuration:
                    default: 1h
                    description: InactivityDuration - the duration which the cluster
                      should be idle before auto-pausing the DB Cluster.
                    type: string
                required:
                - enabled
                type: object
              awsConfig:
                description: The platform infrastructure provider e.g. azure, aws,
                  gcp, on-prem etc.
                properties:
                  clusterName:
                    description: "ClusterName - AWS name of the EKS Cluster. \n NOTE:
                      Marked as optional but is mandatory"
                    type: string
                  marketplaceApp:
                    description: MarketplaceAppConfig - Amazon AWS specific DB Cluster
                      information.
                    properties:
                      kmsKeyId:
                        description: KmsKeyId - Key for disk encryption. The full
                          Amazon Resource Name of the key to use when encrypting the
                          volume. If none is supplied but encrypted is true, a key
                          is generated by AWS. See AWS docs for valid ARN value.
                        type: string
                      productCode:
                        default: 1cmucncoyp9pi8xjdwqjimlf8
                        description: ProductCode - used to uniquely identify a product
                          in AWS Marketplace. The product code should be the same
                          as the one used during the publishing of a new product.
                        type: string
                      publicKeyVersion:
                        default: 1
                        description: PublicKeyVersion - Public Key Version provided
                          by AWS Marketplace
                        type: integer
                      resourceId:
                        description: ParentResourceGroup - The resource group of the
                          ManagedApp itself ParentResourceGroup     string  `json:"parentResourceGroup"`
                          ResourceId - Identifier of the resource against which usage
                          is emitted              Format is GUID (UUID)              
                          https://github.com/microsoft/commercial-marketplace-openapi/blob/main/Microsoft.Marketplace.Metering/2018-08-31/meteringapi.v1.json              Optional
                          only if that exactly of  ResourceId or ResourceUri is specified.
                        type: string
                    required:
                    - productCode
                    - publicKeyVersion
                    type: object
                  nodeGroups:
                    additionalProperties:
                      type: string
                    description: "NodeGroups - List of NodeGroups for this cluster
                      MUST contain at least the following keys * none * infra * infra_public
                      * compute * compute-gpu * aaw_cpu \n NOTE: Marked as optional
                      but is mandatory"
                    type: object
                  otelTracing:
                    description: OTELTracing - OpenTelemetry Tracing Specifics
                    properties:
                      endpoint:
                        default: ''
                        description: Endpoint - Set the OpenTelemetry reporting Endpoint
                        type: string
                      key:
                        description: Key - KineticaCluster specific Key required to
                          send Telemetry information to the Cloud
                        type: string
                      maxBatchInterval:
                        default: 10
                        description: MaxBatchSize - Telemetry Reporting Interval to
                          use in seconds.
                        type: integer
                      maxBatchSize:
                        default: 1024
                        description: MaxBatchSize - Telemetry Maximum Batch Size to
                          send.
                        type: integer
                    required:
                    - key
                    type: object
                type: object
              azureConfig:
                description: The platform infrastructure provider e.g. azure, aws,
                  gcp, on-prem etc.
                properties:
                  appInsights:
                    description: App Insights Specifics
                    properties:
                      endpoint:
                        default: ''
                        description: Endpoint - Override the default AppInsights reporting
                          Endpoint
                        type: string
                      key:
                        description: Key - KineticaCluster specific Application Insights
                          Key required to send Telemetry information to the Azure
                          Portal
                        type: string
                      maxBatchInterval:
                        default: 10
                        description: MaxBatchSize - Telemetry Reporting Interval to
                          use in seconds.
                        type: integer
                      maxBatchSize:
                        default: 1024
                        description: MaxBatchSize - Telemetry Maximum Batch Size to
                          send.
                        type: integer
                    required:
                    - key
                    type: object
                  managedApp:
                    description: AzureManagedAppConfig - Microsoft Azure specific
                      DB Cluster information.
                    properties:
                      diskEncryptionSetId:
                        description: DiskEncryptionSetID - By default, managed disks
                          use platform-managed encryption keys. All managed disks,
                          snapshots, images, and data written to existing managed
                          disks are automatically encrypted-at-rest with platform-managed
                          keys. You can choose to manage encryption at the level of
                          each managed disk, with your own keys. When you specify
                          a customer-managed key, that key is used to protect and
                          control access to the key that encrypts your data. Customer-managed
                          keys offer greater flexibility to manage access controls.
                        type: string
                      planId:
                        description: PlanId - The Azure Marketplace Plan/Offer identifier
                          selected by the customer for this DB cluster e.g. BYOL,
                          Pay-As-You-Go etc.
                        type: string
                      resourceId:
                        description: ParentResourceGroup - The resource group of the
                          ManagedApp itself ParentResourceGroup     string  `json:"parentResourceGroup"`
                          ResourceId - Identifier of the resource against which usage
                          is emitted              Format is GUID (UUID)              
                          https://github.com/microsoft/commercial-marketplace-openapi/blob/main/Microsoft.Marketplace.Metering/2018-08-31/meteringapi.v1.json              Optional
                          only if that exactly of  ResourceId or ResourceUri is specified.
                        type: string
                      resourceUri:
                        description: ResourceUri - Identifier of the managed app resource
                          against which usage is emitted               
                          https://github.com/microsoft/commercial-marketplace-openapi/blob/main/Microsoft.Marketplace.Metering/2018-08-31/meteringapi.v1.json              Optional
                          only if that exactly of  ResourceId or ResourceUri is specified.
                        type: string
                    required:
                    - planId
                    type: object
                type: object
              debug:
                default: false
                description: Tells the operator we want to run in Debug mode.
                type: boolean
              deploymentType:
                default:
                  region: aws_useast_1
                  type: managed_app
                description: Identifies the type of Kubernetes deployment.
                properties:
                  region:
                    description: "CloudRegionEnum - The target Kubernetes type to
                      deploy to. \n Supported Values are: - \n \taws_useast_1 \taws_useast_2
                      \taws_uswest_1 \taz_useast_1 \taz_uswest_1"
                    enum:
                    - aws_useast_1
                    - aws_useast_2
                    - aws_uswest_2
                    - aws_euwest_1
                    - az_useast_1
                    - az_uswest_1
                    - on_prem_local
                    type: string
                  type:
                    description: "DeploymentTypeEnum - The type of the Deployment.
                      \n Supported Values are: - \n \tManaged \tFreeSaaS \tDedicatedSaaS
                      \tOnPrem"
                    enum:
                    - managed_app
                    - free_saas
                    - dedicated_saas
                    - on_prem
                    type: string
                required:
                - region
                - type
                type: object
              devEditionConfig:
                description: The platform infrastructure provider e.g. azure, aws,
                  gcp, on-prem etc.
                properties:
                  hostIpAddress:
                    default: ''
                    description: Host IPv4 address. Used by KiND based Developer Edition
                      where ingress paths set to *. Provides qualified, routable URLs
                      to workbench.
                    type: string
                type: object
              gadmin:
                default:
                  containerPort:
                    containerPort: 8080
                    name: gadmin
                    protocol: TCP
                  isEnabled: true
                description: The GAdmin Dashboard Configuration for the Kinetica Cluster.
                properties:
                  containerPort:
                    default:
                      containerPort: 8080
                      name: gadmin
                      protocol: TCP
                    description: 'The port that GAdmin will be running on. It runs
                      only on the head node pod in the cluster.   Default: 8080'
                    properties:
                      containerPort:
                        description: Number of port to expose on the pod's IP address.
                          This must be a valid port number, 0 < x < 65536.
                        format: int32
                        type: integer
                      hostIP:
                        description: What host IP to bind the external port to.
                        type: string
                      hostPort:
                        description: Number of port to expose on the host. If specified,
                          this must be a valid port number, 0 < x < 65536. If HostNetwork
                          is specified, this must match ContainerPort. Most containers
                          do not need this.
                        format: int32
                        type: integer
                      name:
                        description: If specified, this must be an IANA_SVC_NAME and
                          unique within the pod. Each named port in a pod must have
                          a unique name. Name for the port that can be referred to
                          by services.
                        type: string
                      protocol:
                        default: TCP
                        description: Protocol for port. Must be UDP, TCP, or SCTP.
                          Defaults to "TCP".
                        type: string
                    required:
                    - containerPort
                    type: object
                  ingressPath:
                    description: The Ingress Endpoint that GAdmin will be running
                      on.
                    properties:
                      backend:
                        description: backend defines the referenced service endpoint
                          to which the traffic will be forwarded to.
                        properties:
                          resource:
                            description: resource is an ObjectRef to another Kubernetes
                              resource in the namespace of the Ingress object. If
                              resource is specified, serviceName and servicePort must
                              not be specified.
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          serviceName:
                            description: serviceName specifies the name of the referenced
                              service.
                            type: string
                          servicePort:
                            anyOf:
                            - type: integer
                            - type: string
                            description: servicePort Specifies the port of the referenced
                              service.
                            x-kubernetes-int-or-string: true
                        type: object
                      path:
                        description: path is matched against the path of an incoming
                          request. Currently it can contain characters disallowed
                          from the conventional "path" part of a URL as defined by
                          RFC 3986. Paths must begin with a '/' and must be present
                          when using PathType with value "Exact" or "Prefix".
                        type: string
                      pathType:
                        description: "pathType determines the interpretation of the
                          path matching. PathType can be one of the following values:
                          * Exact: Matches the URL path exactly. * Prefix: Matches
                          based on a URL path prefix split by '/'. Matching is   done
                          on a path element by element basis. A path element refers
                          is the   list of labels in the path split by the '/' separator.
                          A request is a   match for path p if every p is an element-wise
                          prefix of p of the   request path. Note that if the last
                          element of the path is a substring   of the last element
                          in request path, it is not a match (e.g. /foo/bar   matches
                          /foo/bar/baz, but does not match /foo/barbaz). * ImplementationSpecific:
                          Interpretation of the Path matching is up to   the IngressClass.
                          Implementations can treat this as a separate PathType  \
                          \ or treat it identically to Prefix or Exact path types.
                          Implementations are required to support all path types.
                          Defaults to ImplementationSpecific."
                        type: string
                    required:
                    - backend
                    type: object
                  isEnabled:
                    default: true
                    description: 'Whether to enable the GAdmin Dashboard on the Cluster.   Default:
                      true'
                    type: boolean
                type: object
              gaia:
                default:
                  admin:
                    admin_login_only_gpudb_down: true
                    admin_username: admin
                    login_animation_enabled: true
                    login_bypass_enabled: false
                    require_strong_password: true
                  demo_schema: demo
                  gpudb:
                    data_file_string_null_value: \\N
                    gpudb_ext_url: http://127.0.0.1:8082/gpudb-0
                    gpudb_url: http://127.0.0.1:9191
                    logging_log_file_name: gpudb.log
                    sample_repo_url: //s3.amazonaws.com/kinetica-ce-data
                  hm:
                    gpudb_ext_hm_url: http://127.0.0.1:8082/gpudb-host-manager
                    gpudb_hm_url: http://127.0.0.1:9300
                  http:
                    http_client_timeout: 3600
                    http_client_timeout_v2: 0
                    tomcat_path_key: tomcat
                    webapp_context: gadmin
                  is_remote: false
                  kagent_cli_path: /opt/gpudb/kagent/bin/kagent
                  kio:
                    kio_log_file_path: /opt/gpudb/kitools/kio/logs/gadmin.log
                    kio_log_level: DEBUG
                    kio_log_size_limit: 10485760
                  kisql:
                    kisql_query_results_limit: 10000
                    kisql_query_timezone: GMT
                  license:
                    status: ok
                    type: unlimited
                  max_concurrent_user_sessions: 0
                  public_schema: ki_home
                  reveal_db_info_file: /opt/gpudb/connectors/reveal/var/REVEAL_DB_DIR
                  root_schema: root
                  stats:
                    graphana_url: http://127.0.0.1:3000
                    graphite_url: http://127.0.0.1:8181
                    stats_grafana_url: http://127.0.0.1:9091
                description: Gaia - gaia.properties configuration
                properties:
                  admin:
                    default:
                      admin_login_only_gpudb_down: true
                      admin_username: admin
                      login_animation_enabled: true
                      login_bypass_enabled: false
                      require_strong_password: true
                    properties:
                      admin_login_only_gpudb_down:
                        default: true
                        description: AdminLoginOnlyGpudbDown - When GPUdb is down,
                          only allow admin user to login
                        type: boolean
                      admin_username:
                        default: admin
                        description: Username - We do check for admin username in
                          various places
                        type: string
                      login_animation_enabled:
                        default: true
                        description: LoginAnimationEnabled - Display any animation
                          in login page
                        type: boolean
                      login_bypass_enabled:
                        default: false
                        description: AdminLoginOnlyGpudbDown - Convenience settings
                          for dev mode
                        type: boolean
                      require_strong_password:
                        default: true
                        description: RequireStrongPassword - Convenience settings
                          for dev mode
                        type: boolean
                      ssl_truststore_password_script:
                        description: SSLTruststorePasswordScript - Display any animation
                          in login page
                        type: string
                    required:
                    - admin_login_only_gpudb_down
                    - admin_username
                    - login_animation_enabled
                    - login_bypass_enabled
                    - require_strong_password
                    type: object
                  demo_schema:
                    default: demo
                    description: DemoSchema - Schema-related configuration
                    type: string
                  gpudb:
                    default:
                      data_file_string_null_value: \N
                      gpudb_ext_url: http://127.0.0.1:8082/gpudb-0
                      gpudb_url: http://127.0.0.1:9191
                      logging_log_file_name: gpudb.log
                      sample_repo_url: //s3.amazonaws.com/kinetica-ce-data
                    properties:
                      data_file_string_null_value:
                        default: \N
                        description: DataFileStringNullValue - Table import/export
                          null value string
                        type: string
                      gpudb_ext_url:
                        default: http://127.0.0.1:8082/gpudb-0
                        type: string
                      gpudb_url:
                        default: http://127.0.0.1:9191
                        description: URL - Current instance of gpudb, when running
                          in HA mode change this to load balancer endpoint
                        type: string
                      logging_log_file_name:
                        default: gpudb.log
                        description: LoggingLogFileName - Which file to use when displaying
                          logging on Cluster page.
                        type: string
                      sample_repo_url:
                        default: //s3.amazonaws.com/kinetica-ce-data
                        description: SampleRepoURL - Table import/export null value
                          string
                        type: string
                    required:
                    - data_file_string_null_value
                    - gpudb_ext_url
                    - gpudb_url
                    - logging_log_file_name
                    - sample_repo_url
                    type: object
                  hm:
                    default:
                      gpudb_ext_hm_url: http://127.0.0.1:8082/gpudb-host-manager
                      gpudb_hm_url: http://127.0.0.1:9300
                    properties:
                      gpudb_ext_hm_url:
                        default: http://127.0.0.1:8082/gpudb-host-manager
                        type: string
                      gpudb_hm_url:
                        default: http://127.0.0.1:9300
                        type: string
                    required:
                    - gpudb_ext_hm_url
                    - gpudb_hm_url
                    type: object
                  http:
                    default:
                      http_client_timeout: 3600
                      http_client_timeout_v2: 0
                      tomcat_path_key: tomcat
                      webapp_context: gadmin
                    properties:
                      http_client_timeout:
                        default: 3600
                        description: ClientTimeout - Number of seconds for proxy request
                          timeout
                        type: integer
                      http_client_timeout_v2:
                        default: 0
                        description: ClientTimeoutV2 - Force override of previous
                          default with 0 as infinite timeout
                        type: integer
                      tomcat_path_key:
                        default: tomcat
                        description: TomcatPathKey - Name of folder where Tomcat apps
                          are installed
                        type: string
                      webapp_context:
                        default: gadmin
                        description: WebappContext - Web App context
                        type: string
                    required:
                    - http_client_timeout
                    - http_client_timeout_v2
                    - tomcat_path_key
                    - webapp_context
                    type: object
                  is_remote:
                    default: false
                    description: GAdminIsRemote - True if the gadmin application is
                      running on a remote machine (not on same node as gpudb). If
                      running on a remote machine the manage options will be disabled.
                    type: boolean
                  kagent_cli_path:
                    default: /opt/gpudb/kagent/bin/kagent
                    description: KAgentCLIPath - Schema-related configuration
                    type: string
                  kio:
                    default:
                      kio_log_file_path: /opt/gpudb/kitools/kio/logs/gadmin.log
                      kio_log_level: DEBUG
                      kio_log_size_limit: 10485760
                    description: KIO - KIO-related configuration
                    properties:
                      kio_log_file_path:
                        default: /opt/gpudb/kitools/kio/logs/gadmin.log
                        type: string
                      kio_log_level:
                        default: DEBUG
                        type: string
                      kio_log_size_limit:
                        default: 10485760
                        format: int64
                        type: integer
                    required:
                    - kio_log_file_path
                    - kio_log_level
                    - kio_log_size_limit
                    type: object
                  kisql:
                    default:
                      kisql_query_results_limit: 10000
                      kisql_query_timezone: GMT
                    properties:
                      kisql_query_results_limit:
                        default: 10000
                        description: QueryResultsLimit - KiSQL limit on the number
                          of results in each query
                        format: int32
                        type: integer
                      kisql_query_timezone:
                        default: GMT
                        description: QueryTimezone - KiSQL TimeZoneId setting for
                          queries (use "system" for local system time)
                        type: string
                    required:
                    - kisql_query_results_limit
                    - kisql_query_timezone
                    type: object
                  license:
                    default:
                      status: ok
                      type: unlimited
                    properties:
                      status:
                        default: ok
                        description: Status - Stub for license manager
                        type: string
                      type:
                        default: unlimited
                        description: Type - Stub for license manager
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  max_concurrent_user_sessions:
                    default: 0
                    description: MaxConcurrentUserSessions - Session management configuration
                    type: integer
                  public_schema:
                    default: ki_home
                    description: PublicSchema - Schema-related configuration
                    type: string
                  reveal_db_info_file:
                    default: /opt/gpudb/connectors/reveal/var/REVEAL_DB_DIR
                    description: RevealDBInfoFile - Path to file containing Reveal
                      DB location
                    type: string
                  root_schema:
                    default: root
                    description: RootSchema - Schema-related configuration
                    type: string
                  stats:
                    default:
                      graphana_url: http://127.0.0.1:3000
                      graphite_url: http://127.0.0.1:8181
                      stats_grafana_url: http://127.0.0.1:9091
                    properties:
                      graphana_url:
                        default: http://127.0.0.1:3000
                        description: GraphanaURL -
                        type: string
                      graphite_url:
                        default: http://127.0.0.1:8181
                        description: GraphiteURL
                        type: string
                      stats_grafana_url:
                        default: http://127.0.0.1:9091
                        description: 'StatsGrafanaURL - Port used to host the Grafana
                          user interface and embeddable metric dashboards in GAdmin.
                          Note: If this value is defaulted then it will be replaced
                          by the name of the Stats service if it is deployed & Grafana
                          is enabled e.g. cluster-1234.gpudb.svc.cluster.local'
                        type: string
                    required:
                    - graphana_url
                    - graphite_url
                    - stats_grafana_url
                    type: object
                required:
                - admin
                - demo_schema
                - gpudb
                - hm
                - http
                - is_remote
                - kagent_cli_path
                - kio
                - kisql
                - license
                - max_concurrent_user_sessions
                - public_schema
                - reveal_db_info_file
                - root_schema
                - stats
                type: object
              gpudbCluster:
                default:
                  clusterName: kinetica-sample
                  clusterSize:
                    tshirtSize: S
                    tshirtType: SmallCPU
                  config:
                    graph:
                      enable: true
                      ipAddress: ${gaia.host0.address}
                      maxMemory: 0
                      pullPort: 8100
                      pushPort: 8099
                      timeout: 1200
                    ml:
                      enable: true
                  fqdn: ''
                  haRingName: default
                  hasPools: true
                  hostManagerPort:
                    containerPort: 9300
                    name: hostmanager
                    protocol: TCP
                  imagePullPolicy: IfNotPresent
                  letsEncrypt:
                    enabled: false
                    environment: staging
                  license: ''
                  livenessProbe:
                    failureThreshold: 30
                    initialDelaySeconds: 30
                    periodSeconds: 30
                  metricsRegistryRepositoryTag:
                    registry: docker.io
                    repository: kineticadevcloud/fluent-bit
                    tag: v7.1.5.2
                  podManagementPolicy: Parallel
                  ranksPerNode: 1
                  readinessProbe:
                    failureThreshold: 10
                    initialDelaySeconds: 180
                    periodSeconds: 30
                  replicas: 3
                  startupProbe:
                    failureThreshold: 10
                    initialDelaySeconds: 10
                    periodSeconds: 60
                description: https://github.com/kubernetes-sigs/controller-tools/issues/622
                  if we want to set usePools as false, need to set defaults GPUDBCluster
                  is an instance of a Kinetica DB Cluster i.e. it's StatefulSet, Service,
                  Ingress, ConfigMap etc.
                properties:
                  affinity:
                    description: Affinity - is a group of affinity scheduling rules.
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations - Annotations labels to be applied to
                      the Statefulset DB pods.
                    type: object
                  clusterName:
                    description: The name of the cluster to form.
                    minLength: 5
                    type: string
                  clusterSize:
                    default:
                      tshirtSize: S
                      tshirtType: SmallCPU
                    description: The Ingress Endpoint that GAdmin will be running
                      on.
                    properties:
                      tshirtSize:
                        description: "ClusterSizeEnum - T-Shirt size of the Kinetica
                          DB Cluster i.e. a representation of the number of nodes
                          in a simple to understand T-Short size scheme. This indicates
                          the size of the cluster i.e. the number of nodes. It does
                          not identify the size of the cloud provider nodes. For node
                          size see ClusterTypeEnum. \n Supported Values are: - \n
                          \tXS \tS \tM \tL \tXL \tXXL \tXXXL"
                        enum:
                        - XS
                        - S
                        - M
                        - L
                        - XL
                        - XXL
                        - XXXL
                        type: string
                      tshirtType:
                        description: ClusterTypeEnum - An Enum of the node types of
                          a KineticaCluster e.g. CPU, GPU along with the Cloud Provider
                          node size e.g. size of the VM.
                        enum:
                        - SmallCPU
                        - LargeCPU
                        - SmallGPU
                        - LargeGPU
                        type: string
                    required:
                    - tshirtSize
                    - tshirtType
                    type: object
                  config:
                    default:
                      graph:
                        enable: true
                        ipAddress: ${gaia.host0.address}
                        maxMemory: 0
                        pullPort: 8100
                        pushPort: 8099
                        timeout: 1200
                      ml:
                        enable: false
                    description: Config Kinetica DB Configuration Object
                    properties:
                      ai:
                        default:
                          apiProvider: sqlgpt
                          apiUrl: https://sqlgpt.io/api/sql/suggest
                          resources:
                            limits:
                              cpu: 16000m
                              ephemeral-storage: 70Gi
                              memory: 48Gi
                              nvidia.com/gpu: '2'
                            requests:
                              cpu: 16000m
                              ephemeral-storage: 70Gi
                              memory: 48Gi
                              nvidia.com/gpu: '2'
                        properties:
                          apiKey:
                            type: string
                          apiProvider:
                            default: sqlgpt
                            description: Provider - AI API provider type. The default
                              is "sqlgpt"
                            enum:
                            - sqlgpt
                            - kineticallm
                            type: string
                          apiUrl:
                            default: https://sqlgpt.io/api/sql/suggest
                            description: APIURL - URL Endpoint for the LLM Service.
                            type: string
                          resources:
                            default:
                              limits:
                                cpu: 16000m
                                ephemeral-storage: 70Gi
                                memory: 48Gi
                                nvidia.com/gpu: '2'
                              requests:
                                cpu: 16000m
                                ephemeral-storage: 70Gi
                                memory: 48Gi
                                nvidia.com/gpu: '2'
                            description: Set the Resources for the SQLAssist Pod.
                              Must set `nvidia.com/gpu` to the numeric value of GPUs
                              required. For SQLAssist there must be a minimum of 40GB
                              of VRAM available. i.e. We need to specify "1" if using
                              A100 or "2" if using A10 GPUs.
                            properties:
                              claims:
                                description: "Claims lists the names of resources,
                                  defined in spec.resourceClaims, that are used by
                                  this container. \n This is an alpha field and requires
                                  enabling the DynamicResourceAllocation feature gate.
                                  \n This field is immutable. It can only be set for
                                  containers."
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: Name must match the name of one
                                        entry in pod.spec.resourceClaims of the Pod
                                        where this field is used. It makes that resource
                                        available inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: 
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: 
                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. Requests cannot exceed Limits. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                        required:
                        - apiProvider
                        type: object
                      alertManager:
                        default:
                          ipAddress: ${gaia.host0.address}
                          port: 9089
                        description: AlertManagerConfig
                        properties:
                          ipAddress:
                            default: ${gaia.host0.address}
                            description: AlertManager IP address (run on head node)
                              default port is "2003"
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 2003
                            x-kubernetes-int-or-string: true
                        type: object
                      alerts:
                        default:
                          alertErrorMessages: true
                          alertHostStatus: true
                          alertHostStatusFilter: fatal_init_error
                          alertMaxStoredAlerts: 100
                          alertRankCudaError: true
                          alertRankFallbackAllocator: true
                          alertRankStatus: true
                          alertRankStatusFilter:
                          - fatal_init_error
                          - not_responding
                          - terminated
                          enableAlerts: true
                          traceDirectory: /tmp
                          traceEventBufferSize: 1000000
                        description: AlertConfig
                        properties:
                          alertDiskAbsolute:
                            items:
                              type: integer
                            type: array
                          alertDiskPercentage:
                            default:
                            - 1
                            - 5
                            - 10
                            - 20
                            description: Trigger an alert if available disk space
                              on any given node falls to or below a certain threshold,
                              either absolute (number of bytes) or percentage of total
                              disk space. For multiple thresholds, use a comma-delimited
                              list of values.
                            items:
                              type: integer
                            type: array
                          alertErrorMessages:
                            default: true
                            description: Trigger generic error message alerts, in
                              cases of various significant runtime errors.
                            type: boolean
                          alertExe:
                            default: ''
                            description: Executable to run when an alert condition
                              occurs. This executable will only be run on **rank0**
                              and does not need to be present on other nodes.
                            type: string
                          alertHostStatus:
                            default: true
                            description: Trigger an alert whenever the status of a
                              host or rank changes.
                            type: boolean
                          alertHostStatusFilter:
                            default: fatal_init_error
                            description: Optionally, filter host alerts for a comma-delimited
                              list of statuses. If a filter is empty, every host status
                              change will trigger an alert.
                            type: string
                          alertMaxStoredAlerts:
                            default: 100
                            description: The maximum number of triggered alerts guaranteed
                              to be stored at any given time. When this number of
                              alerts is exceeded, older alerts may be discarded to
                              stay within the limit.
                            type: integer
                          alertMemoryAbsolute:
                            items:
                              type: integer
                            type: array
                          alertMemoryPercentage:
                            default:
                            - 1
                            - 5
                            - 10
                            - 20
                            description: Trigger an alert if available memory on any
                              given node falls to or below a certain threshold, either
                              absolute (number of bytes) or percentage of total memory.
                              For multiple thresholds, use a comma-delimited list
                              of values.
                            items:
                              type: integer
                            type: array
                          alertRankCudaError:
                            default: true
                            description: Trigger an alert if a CUDA error occurs on
                              a rank.
                            type: boolean
                          alertRankFallbackAllocator:
                            default: true
                            description: "Trigger alerts when the fallback allocator
                              is employed; e.g., host memory is allocated because
                              GPU allocation fails. \n NOTE:  To prevent a flooding
                              of alerts, if a fallback allocator is triggered in bursts,
                              not every use will generate an alert."
                            type: boolean
                          alertRankStatus:
                            default: true
                            description: Trigger an alert whenever the status of a
                              rank changes.
                            type: boolean
                          alertRankStatusFilter:
                            default:
                            - fatal_init_error
                            - not_responding
                            - terminated
                            description: Optionally, filter rank alerts for a comma-delimited
                              list of statuses. If a filter is empty, every rank status
                              change will trigger an alert.
                            items:
                              type: string
                            type: array
                          enableAlerts:
                            default: true
                            description: Enable the alerting system.
                            type: boolean
                          traceDirectory:
                            default: /tmp
                            description: Directory where the trace event and summary
                              files are stored.  Must be a fully qualified path with
                              sufficient free space for required volume of data.
                            type: string
                          traceEventBufferSize:
                            default: 1000000
                            description: The maximum number of trace events to be
                              collected
                            type: integer
                        type: object
                      audit:
                        default:
                          body: false
                          data: false
                          enable: false
                          headers: false
                          lock: false
                          response: false
                        description: Audit - This section controls the request auditor,
                          which will audit all requests received by the server in
                          full or in part based on the settings.
                        properties:
                          body:
                            default: false
                            description: "Controls whether the body of each request
                              is audited (in JSON format). If 'enable_audit' is \"\
                              false\" this setting has no effect. \n NOTE: For requests
                              that insert data records, this setting does not control
                              the auditing of the records being inserted, only the
                              rest of the request body; see 'audit_data' below to
                              control this. audit_body = false"
                            type: boolean
                          data:
                            default: false
                            description: "Controls whether records being inserted
                              are audited (in JSON format) for requests that insert
                              data records. If either 'enable_audit' or 'audit_body'
                              is \"false\", this setting has no effect. \n NOTE: Enabling
                              this setting during bulk ingestion of data will rapidly
                              produce very large audit logs and may cause disk space
                              exhaustion; use with caution. audit_data = false"
                            type: boolean
                          enable:
                            default: false
                            description: 'Controls whether request auditing is enabled.
                              If set to "true", the following information is audited
                              for every request: Job ID, URI, User, and Client Address.
                              The settings below control whether additional information
                              about each request is also audited. If set to "false",
                              all auditing is disabled. enable_audit = false'
                            type: boolean
                          headers:
                            description: Controls whether HTTP headers are audited
                              for each request. If 'enable_audit' is "false" this
                              setting has no effect. audit_headers = false
                            type: boolean
                          lock:
                            default: false
                            description: Controls whether the above audit settings
                              can be altered at runtime via the /alter/system/properties
                              endpoint. In a secure environment where auditing is
                              required at all times, this should be set to "true"
                              to lock the settings to what is set in this file. lock_audit
                              = false
                            type: boolean
                          response:
                            default: false
                            description: " Controls whether response information is
                              audited for each request.  If 'enable_audit' is \"false\"\
                              \ this setting has no effect.  audit_response = false"
                            type: boolean
                        required:
                        - body
                        - data
                        - enable
                        - headers
                        - lock
                        - response
                        type: object
                      events:
                        default:
                          internal: false
                          ipAddress: ${gaia.host0.address}
                          port: 9080
                        description: EventConfig
                        properties:
                          internal:
                            default: true
                            description: Run a statistics server to collect information
                              about Kinetica and the machines it runs on.
                            type: boolean
                          ipAddress:
                            default: ${gaia.host0.address}
                            description: Statistics server IP address (run on head
                              node) default port is "2003"
                            type: string
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 2003
                            x-kubernetes-int-or-string: true
                          statsServerNamespace:
                            default: gpudb
                            description: Statistics server namespace - should be a
                              machine identifier
                            minLength: 4
                            type: string
                        type: object
                      externalFiles:
                        default:
                          directory: /opt/gpudb/persist
                          egressParquetCompression: snappy
                          egressSingleFileMaxSize: 100
                          readerNumTasks: '-1'
                        description: ExternalFilesConfig
                        properties:
                          directory:
                            default: /opt/gpudb/persist
                            description: Defines the directory from which external
                              files can be loaded
                            type: string
                          egressParquetCompression:
                            default: snappy
                            description: '# Parquet files compression type egress_parquet_compression
                              = snappy'
                            type: string
                          egressSingleFileMaxSize:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '100'
                            description: Max file size (in MB) to allow saving to
                              a single file. May be overridden by target limitations.
                              egress_single_file_max_size = 100
                            x-kubernetes-int-or-string: true
                          readerNumTasks:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '-1'
                            description: Maximum number of simultaneous threads allocated
                              to a given external file read request, on each rank.
                              Note that thread allocation may also be limited by resource
                              group limits, the subtask_concurrency_limit setting,
                              or system load.
                            x-kubernetes-int-or-string: true
                        required:
                        - egressParquetCompression
                        - egressSingleFileMaxSize
                        type: object
                      general:
                        default:
                          clusterEventTimeoutStartupRank: 300
                          concurrentKernelExecution: true
                          defaultTTL: 20
                          disableClearAll: true
                          enableOverlappedEquiJoin: true
                          enablePredicateEquiJoin: true
                          forceHostFilterExecution: false
                          maxConcurrentKernels: 0
                          maxGetRecordsSize: 20000
                          pinnedMemoryPoolSize: 2000000000
                          requestTimeout: 20
                          timeoutShutdownRank: 300
                          timeoutShutdownSubsystem: 20
                          timeoutStartupSubsystem: 60
                        description: GeneralConfig - the root of the gpudb.conf configuration
                          in the CRD
                        properties:
                          clusterEventTimeoutStartupRank:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '300'
                            description: 'Timeout (in seconds) to wait for a rank
                              to start during a cluster event (ex: failover) event
                              is considered failed.'
                            x-kubernetes-int-or-string: true
                          concurrentKernelExecution:
                            default: true
                            description: Enable (if "true") multiple kernels to run
                              concurrently on the same GPU
                            type: boolean
                          defaultTTL:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '20'
                            description: Time-to-live in minutes of non-protected
                              tables before they are automatically deleted from the
                              database.
                            x-kubernetes-int-or-string: true
                          disableClearAll:
                            default: true
                            description: Disallow the /clear/table request to clear
                              all tables.
                            type: boolean
                          enableOverlappedEquiJoin:
                            default: true
                            description: Enable overlapped-equi-join filters
                            type: boolean
                          enablePredicateEquiJoin:
                            default: true
                            description: Enable predicate-equi-join filter plan type
                            type: boolean
                          forceHostFilterExecution:
                            default: false
                            description: If "true" then all filter execution will
                              be host-only (i.e. CPU). This can be useful for high-concurrency
                              situations and when PCIe bandwidth is a limiting factor.
                            type: boolean
                          maxConcurrentKernels:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '0'
                            description: Maximum number of kernels that can be running
                              at the same time on a given GPU. Set to "0" for no limit.
                              Only takes effect if 'concurrent_kernel_execution' is
                              "true"
                            x-kubernetes-int-or-string: true
                          maxGetRecordsSize:
                            default: 20000
                            description: Maximum number of records that data retrieval
                              requests such as /get/records and /aggregate/groupby
                              will return per request.
                            format: int64
                            type: integer
                          onStartupScript:
                            default: ''
                            description: "Set an optional executable command that
                              will be run once when Kinetica is ready for client requests.
                              This can be used to perform any initialization logic
                              that needs to be run before clients connect. It will
                              be run as the \"gpudb\" user, so you must ensure that
                              any required permissions are set on the file to allow
                              it to be executed.  If the command cannot be executed
                              or returns a non-zero error code, then Kinetica will
                              be stopped.  Output from the startup script will be
                              logged to \"/opt/gpudb/core/logs/gpudb-on-start.log\"\
                              \ (and its dated relatives).  The \"gpudb_env.sh\" script
                              is run directly before the command, so the path will
                              be set to include the supplied Python runtime. \n Example:
                              \n on_startup_script = /home/gpudb/on-start.sh param1
                              param2 ..."
                            type: string
                          pinnedMemoryPoolSize:
                            default: 2000000000
                            description: Size in bytes of the pinned memory pool per-rank
                              process to speed up copying data to the GPU.  Set to
                              "0" to disable.
                            format: int64
                            type: integer
                          protectedSets:
                            default: MASTER,_MASTER,_DATASOURCE
                            description: Tables and collections with these names will
                              not be deleted (comma separated).
                            type: string
                          requestTimeout:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '20'
                            description: Timeout (in minutes) for filter-type requests
                            x-kubernetes-int-or-string: true
                          timeoutShutdownRank:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '300'
                            description: Timeout (in seconds) to wait for a rank to
                              exit gracefully before it is force-killed. Machines
                              with slow disk drives may require longer times and data
                              may be lost if a drive is not responsive.
                            x-kubernetes-int-or-string: true
                          timeoutShutdownSubsystem:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '20'
                            description: Timeout (in seconds) to wait for each database
                              subsystem to exit gracefully before it is force-killed.
                            x-kubernetes-int-or-string: true
                          timeoutStartupSubsystem:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '60'
                            description: Timeout (in seconds) to wait for each database
                              subsystem to startup. Subsystems include the Query Planner,
                              Graph, Stats, & HTTP servers, as well as external text-search
                              ranks.
                            x-kubernetes-int-or-string: true
                        type: object
                      graph:
                        default:
                          enable: true
                          ipAddress: ${gaia.host0.address}
                          maxMemory: 0
                          pullPort: 8100
                          pushPort: 8099
                          timeout: 1200
                        description: GraphConfig
                        properties:
                          enable:
                            default: false
                            description: Enable the graph server
                            type: boolean
                          gpuList:
                            default: ''
                            description: List of GPU devices to be used by graph server
                              The server would ideally be run on a different node
                              with dedicated GPU(s)
                            type: string
                          ipAddress:
                            default: ${gaia.rank0_ip_address}
                            description: Specify where the graph server should be
                              run, defaults to head node
                            type: string
                          maxMemory:
                            default: 0
                            description: Maximum memory that can be used by the graph
                              server, set to "0" to disable memory restriction
                            type: integer
                          pullPort:
                            default: 8100
                            description: Port used for responses from the graph server
                              to the database server
                            type: integer
                          pushPort:
                            default: 8099
                            description: Port used for requests from the database
                              server to the graph server
                            type: integer
                          timeout:
                            default: 1200
                            description: Number of seconds the graph client will wait
                              for a response from the graph server
                            type: integer
                        type: object
                      hardware:
                        description: HardwareConfig
                        properties:
                          rank0:
                            description: Rank0HardwareConfig
                            properties:
                              gpu:
                                anyOf:
                                - type: integer
                                - type: string
                                default: 0
                                description: 'Specify the GPU to use for all calculations
                                  on the HTTP server node, **rank0**. NOTE: The **rank0**
                                  GPU may be shared with another rank.'
                                x-kubernetes-int-or-string: true
                              numaNode:
                                anyOf:
                                - type: integer
                                - type: string
                                description: "Set the head HTTP **rank0** numa node(s).
                                  If left empty, there will be no thread affinity
                                  or preferred memory node. The node list may be either
                                  a single node number or a range; e.g., \"1-5,7,10\"\
                                  . \n If there will be many simultaneous users, specify
                                  as many nodes as possible that won't overlap the
                                  **rank1** to **rankN** worker numa nodes that the
                                  GPUs are on. \n If there will be few simultaneous
                                  users and WMS speed is important, choose the numa
                                  node the 'rank0.gpu' is on."
                                x-kubernetes-int-or-string: true
                            type: object
                          ranks:
                            items:
                              description: RankNHardwareConfig
                              properties:
                                baseNumaNode:
                                  description: "Set each worker rank's preferred base
                                    numa node for CPU affinity and memory allocation.
                                    The 'rank<#>.base_numa_node' is the node or nodes
                                    that non-data intensive threads will run in. These
                                    nodes do not have to be the same numa nodes that
                                    the GPU specified by the corresponding 'rank<#>.taskcalc_gpu'
                                    is on for best performance, though they should
                                    be relatively near to their 'rank<#>.data_numa_node'.
                                    \n There will be no CPU thread affinity or preferred
                                    node for memory allocation if not specified or
                                    left empty. \n The node list may be a single node
                                    number or a range; e.g., \"1-5,7,10\"."
                                  type: string
                                dataNumaNode:
                                  description: "Set each worker rank's preferred data
                                    numa node for CPU affinity and memory allocation.
                                    The 'rank<#>.data_numa_node' is the node or nodes
                                    that data intensive threads will run in and should
                                    be set to the same numa node that the GPU specified
                                    by the corresponding 'rank<#>.taskcalc_gpu' is
                                    on for best performance. \n If the 'rank<#>.taskcalc_gpu'
                                    is specified the 'rank<#>.data_numa_node' will
                                    be automatically set to the node the GPU is attached
                                    to, otherwise there will be no CPU thread affinity
                                    or preferred node for memory allocation if not
                                    specified or left empty. \n The node list may
                                    be a single node number or a range; e.g., \"1-5,7,10\"\
                                    ."
                                  type: string
                                taskCalcGPU:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: "Set the GPU device for each worker
                                    rank to use. If no GPUs are specified, each rank
                                    will round-robin the available GPUs per host system.
                                    Add 'rank<#>.taskcalc_gpu' as needed for the worker
                                    ranks, where *#* ranges from \"1\" to the highest
                                    *rank #* among the 'rank<#>.host' parameters \n
                                    Example setting the GPUs to use for ranks 1 and
                                    2: \n #   rank1.taskcalc_gpu = 0 #   rank2.taskcalc_gpu
                                    = 1"
                                  x-kubernetes-int-or-string: true
                              type: object
                            type: array
                        type: object
                      kafka:
                        default:
                          batchSize: 1000
                          pollTimeout: 0
                          waitTime: 30
                        properties:
                          batchSize:
                            default: 1000
                            description: Maximum number of records to be ingested
                              in a single batch kafka.batch_size = 1000
                            type: integer
                          pollTimeout:
                            description: Maximum time (milliseconds) for each poll
                              to get records from kafka kafka.poll_timeout = 0
                            type: integer
                          waitTime:
                            default: 30
                            description: Maximum wait time (seconds) to buffer records
                              received from kafka before ingestion kafka.wait_time
                              = 30
                            type: integer
                        required:
                        - batchSize
                        - pollTimeout
                        - waitTime
                        type: object
                      kifs:
                        default:
                          dataLimit: 2000000000
                          enable: true
                          mountPoint: /gpudb/kifs
                        description: KifsConfig
                        properties:
                          dataLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 4Gi
                            description: KIFs user data size limit
                            pattern: 
                              ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          enable:
                            default: false
                            description: sudo usermod -a -G gpudb_proc <user>
                            type: boolean
                          mountPoint:
                            default: /gpudb/kifs
                            description: Parent directory of the mount point for the
                              KiFS file system. Must be a fully qualified path. The
                              actual mount point will be a subdirectory *mount* below
                              this directory. Note that this folder must have read,
                              write and execute permissions for the "gpudb" user and
                              the "gpudb_proc" group, and it cannot be a path on an
                              NFS.
                            type: string
                          useManagedCredentials:
                            default: true
                            type: boolean
                        type: object
                      ml:
                        default:
                          enable: false
                        description: "Etcd *ETCDConfig `json:\"etcd,omitempty\"` \t\
                          HA        HAConfig            `json:\"ha,omitempty\"`"
                        properties:
                          enable:
                            default: false
                            description: Enable the ML server.
                            type: boolean
                        type: object
                      network:
                        default:
                          compressNetworkData: false
                          enableHTTPDProxy: true
                          enableWorkerHTTPServers: true
                          globalManagerLocalPubPort: 5554
                          globalManagerPortOne: 5552
                          globalManagerPubPort: 5553
                          headPort: 9191
                          hostManagerHTTPPort: 9300
                          httpAllowOrigin: '*'
                          httpKeepAlive: false
                          httpdProxyPort: 8082
                          httpdProxyUseHTTPS: false
                          rank0IPAddress: ${gaia.rank0.host}
                          setMonitorPort: 9002
                          setMonitorProxyPort: 9003
                          setMonitorQueueSize: 1000
                          triggerPort: 9001
                          useHttps: false
                        description: NetworkConfig
                        properties:
                          HAAddress:
                            description: HAAddress - An optional address to allow
                              inter-cluster communication with HA when 'address' is
                              not routable between clusters.
                            type: string
                          compressNetworkData:
                            default: false
                            description: CompressNetworkData - Enables compression
                              of inter-node network data transfers.
                            type: boolean
                          enableHTTPDProxy:
                            default: true
                            description: "EnableHTTPDProxy - Start an HTTP server
                              as a proxy to handle LDAP and/or Kerberos authentication.
                              Each host will run an HTTP server and access to each
                              rank is available through http://host:8082/gpudb-1,
                              where port \"8082\" is defined by 'httpd_proxy_port'.
                              \n NOTE: HTTP external endpoints are not affected by
                              the 'use_https' parameter       above. If you wish to
                              enable HTTPS, you must edit the       \"/opt/gpudb/httpd/conf/httpd.conf\"\
                              \ and setup HTTPS as per the Apache       httpd documentation
                              at https://httpd.apache.org/docs/2.2/"
                            type: boolean
                          enableWorkerHTTPServers:
                            default: true
                            description: EnableWorkerHTTPServers - Enable worker HTTP
                              servers; each process runs its own server for multi-head
                              ingest.
                            type: boolean
                          globalManagerLocalPubPort:
                            default: 5554
                            description: GlobalManagerLocalPubPort - ?
                            format: int32
                            type: integer
                          globalManagerPortOne:
                            default: 5552
                            description: GlobalManagerPortOne - Internal communication
                              ports -  Host manager status notification channel
                            format: int32
                            type: integer
                          globalManagerPubPort:
                            default: 5553
                            description: GlobalManagerPubPort - Host manager synchronization
                              message publishing channel port
                            format: int32
                            type: integer
                          headIPAddress:
                            default: 172.20.0.10
                            description: HeadIPAddress - Head HTTP server IP address.
                              Set to the publicly accessible IP address of the first
                              process, **rank0**.
                            type: string
                          headPort:
                            default: 9191
                            description: HeadPort - Head HTTP server port to use for
                              'head_ip_address'.
                            format: int32
                            type: integer
                          hostManagerHTTPPort:
                            default: 9300
                            description: HostManagerHTTPPort - HTTP port for web portal
                              of the host manager
                            format: int32
                            type: integer
                          httpAllowOrigin:
                            default: '*'
                            description: HTTPAllowOrigin - Value to return via Access-Control-Allow-Origin
                              HTTP header (for Cross-Origin Resource Sharing). Set
                              to empty to not return the header and disallow CORS.
                            type: string
                          httpKeepAlive:
                            default: false
                            description: HTTPKeepAlive - Keep HTTP connections alive
                              between requests
                            type: boolean
                          httpdProxyPort:
                            default: 8082
                            description: HTTPDProxyPort - TCP port that the httpd
                              auth proxy server will listen on if 'enable_httpd_proxy'
                              is "true".
                            format: int32
                            type: integer
                          httpdProxyUseHTTPS:
                            default: false
                            description: HTTPDProxyUseHTTPS - Set to "true" if the
                              httpd auth proxy server is configured to use HTTPS.
                            type: boolean
                          httpsCertFile:
                            default: ''
                            description: "HTTPSCertFile - File containing the SSL
                              certificate  e.g. cert.pem If required, a self-signed
                              certificate (expires after 10 years) can be generated
                              via the command: \n e.g. cert.pem \n openssl req -newkey
                              rsa:2048 -new -nodes -x509 \\   -days 3650 -keyout key.pem
                              -out cert.pem"
                            type: string
                          httpsKeyFile:
                            default: ''
                            description: "HTTPSKeyFile - File containing the SSL private
                              Key e.g. key.pem If required, a self-signed certificate
                              (expires after 10 years) can be generated via the command:
                              \n openssl req -newkey rsa:2048 -new -nodes -x509 \\\
                              \   -days 3650 -keyout key.pem -out cert.pem"
                            type: string
                          rank0IPAddress:
                            default: ${gaia.rank0.host}
                            description: Rank0IPAddress - Internal use IP address
                              of the head HTTP server, **rank0**. Set to either a
                              second internal network accessible by all ranks or to
                              '${gaia.head_ip_address}'.
                            type: string
                          ranks:
                            items:
                              description: RankNetworkConfig
                              properties:
                                communicatorPort:
                                  description: "Specify the TCP ports each rank will
                                    use to communicate with the others. If the port
                                    for any 'rank<#>' is not specified the port will
                                    be assigned to 'rank0.communicator_port' + *rank
                                    #*."
                                  properties:
                                    containerPort:
                                      description: Number of port to expose on the
                                        pod's IP address. This must be a valid port
                                        number, 0 < x < 65536.
                                      format: int32
                                      type: integer
                                    hostIP:
                                      description: What host IP to bind the external
                                        port to.
                                      type: string
                                    hostPort:
                                      description: Number of port to expose on the
                                        host. If specified, this must be a valid port
                                        number, 0 < x < 65536. If HostNetwork is specified,
                                        this must match ContainerPort. Most containers
                                        do not need this.
                                      format: int32
                                      type: integer
                                    name:
                                      description: If specified, this must be an IANA_SVC_NAME
                                        and unique within the pod. Each named port
                                        in a pod must have a unique name. Name for
                                        the port that can be referred to by services.
                                      type: string
                                    protocol:
                                      default: TCP
                                      description: Protocol for port. Must be UDP,
                                        TCP, or SCTP. Defaults to "TCP".
                                      type: string
                                  required:
                                  - containerPort
                                  type: object
                                host:
                                  description: Specify the hosts to run each rank
                                    worker process in the cluster. For a single machine
                                    system, use "127.0.0.1", but if using two or more
                                    machines, a hostname or IP address must be specified
                                    for each rank that is accessible from the other
                                    ranks. See also 'head_ip_address' and 'rank0_ip_address'.
                                  type: string
                                httpServerPort:
                                  description: "Optionally, specify the worker HTTP
                                    server ports. \n The default is to use ('head_port'
                                    + *rank #*) for each worker process where rank
                                    number is from \"1\" to number of ranks in 'rank<#>.host'
                                    below."
                                  properties:
                                    containerPort:
                                      description: Number of port to expose on the
                                        pod's IP address. This must be a valid port
                                        number, 0 < x < 65536.
                                      format: int32
                                      type: integer
                                    hostIP:
                                      description: What host IP to bind the external
                                        port to.
                                      type: string
                                    hostPort:
                                      description: Number of port to expose on the
                                        host. If specified, this must be a valid port
                                        number, 0 < x < 65536. If HostNetwork is specified,
                                        this must match ContainerPort. Most containers
                                        do not need this.
                                      format: int32
                                      type: integer
                                    name:
                                      description: If specified, this must be an IANA_SVC_NAME
                                        and unique within the pod. Each named port
                                        in a pod must have a unique name. Name for
                                        the port that can be referred to by services.
                                      type: string
                                    protocol:
                                      default: TCP
                                      description: Protocol for port. Must be UDP,
                                        TCP, or SCTP. Defaults to "TCP".
                                      type: string
                                  required:
                                  - containerPort
                                  type: object
                                podIP:
                                  description: "This is the Kubernetes pod IP Address
                                    of the current rank which we need   to populate
                                    in the operator. \n NOTE: Internal Attribute"
                                  type: string
                                publicURL:
                                  default: https://:8082/gpudb-{{.Rank}}
                                  description: "Optionally, specify a public URL for
                                    each worker HTTP server that clients should use
                                    to connect for multi-head operations. \n NOTE:
                                    If specified for any ranks, a public URL must
                                    be specified for all ranks."
                                  type: string
                                rank:
                                  description: Define the rank number of this rank.
                                  type: integer
                              type: object
                            type: array
                          setMonitorPort:
                            default: 9002
                            description: SetMonitorPort - Set monitor ZMQ publisher
                              server port (-1 to disable), uses the 'head_ip_address'
                              interface.
                            format: int32
                            type: integer
                          setMonitorProxyPort:
                            default: 9003
                            description: "SetMonitorProxyPort - Set monitor ZMQ publisher
                              internal proxy server port (\"-1\" to disable), uses
                              the 'head_ip_address' interface. \n IMPORTANT:  Disabling
                              this port effectively prevents worker nodes from publishing
                              set monitor notifications when multi-head ingest is
                              enabled (see 'enable_worker_http_servers')."
                            format: int32
                            type: integer
                          setMonitorQueueSize:
                            default: 1000
                            description: SetMonitorQueueSize - Set monitor queue size
                            format: int32
                            type: integer
                          triggerPort:
                            default: -1
                            description: TriggerPort - Trigger ZMQ publisher server
                              port ("-1" to disable), uses the 'head_ip_address' interface.
                            format: int32
                            type: integer
                          useHttps:
                            default: false
                            description: UseHTTPS - Set to "true" to use HTTPS; if
                              "true" then 'https_key_file' and 'https_cert_file' must
                              be provided
                            type: boolean
                        type: object
                      persistence:
                        default:
                          buildMaterializedViewsOnStart: on_demand
                          buildPKIndexOnStart: on_demand
                          chunkColumnMaxMemory: 8192000000
                          chunkMaxMemory: 512000000
                          chunkSize: 8000000
                          executionMode: device
                          loadVectorsOnStart: on_demand
                          persistDirectory: /opt/gpudb/persist
                          persistSyncTime: 5
                          shadowAggSize: 100000000
                          shadowCubeEnabled: true
                          shadowFilterSize: 100000000
                          smsDirectory: /opt/gpudb/persist
                          smsMaxOpenFiles: 128
                          synchronousCompression: false
                          tempDirectory: ${gaia.persist_directory}/tmp
                          textIndexDirectory: /opt/gpudb/persist
                          walChecksum: true
                          walFlushFrequency: 60
                          walMaxSegmentSize: 500000000
                          walSegmentCount: '-1'
                          walSyncPolicy: flush
                          walTruncateCorruptTablesOnStart: true
                        description: PersistenceConfig
                        properties:
                          IndexDBFlushImmediate:
                            description: Removed in 7.2
                            type: boolean
                          buildMaterializedViewsOnStart:
                            default: on_demand
                            description: DataLoadingSchema Startup data-loading scheme
                            enum:
                            - always
                            - lazy
                            - on_demand
                            type: string
                          buildPKIndexOnStart:
                            default: on_demand
                            description: DataLoadingSchema Startup data-loading scheme
                            enum:
                            - always
                            - lazy
                            - on_demand
                            type: string
                          chunkColumnMaxMemory:
                            default: 8192000000
                            description: Target maximum data size for any one column
                              in a chunk (512 MB) (0 = disable). chunk_max_memory
                              = 8192000000
                            format: int64
                            type: integer
                          chunkMaxMemory:
                            default: 512000000
                            description: Target maximum total data size for all columns
                              in a chunk (8 GB) (0 = disable).
                            format: int64
                            type: integer
                          chunkSize:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 8000000
                            description: Number of records per chunk ("0" disables
                              chunking)
                            x-kubernetes-int-or-string: true
                          executionMode:
                            default: device
                            description: "Determines whether to execute kernels on
                              host (CPU) or device (GPU). Possible values are: \n
                              * \"default\"   : engine decides * \"host\"      : execute
                              only host * \"device\"    : execute only device * *<rows>*\
                              \    : execute on the host if chunked column contains
                              the given                number of *rows* or fewer;
                              otherwise, execute on device."
                            enum:
                            - default
                            - host
                            - device
                            type: string
                          fsyncIndexDBImmediate:
                            description: Removed in 7.2
                            type: boolean
                          fsyncInodesImmediate:
                            description: Removed in 7.2
                            type: boolean
                          fsyncMetadataImmediate:
                            description: Removed in 7.2
                            type: boolean
                          fsyncOnInterval:
                            description: Removed in 7.2
                            type: boolean
                          indexDBMaxOpenFiles:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Maximum number of open files for IndexedDb
                              object file store. Removed in 7.2
                            x-kubernetes-int-or-string: true
                          indexDBTOCSize:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Table of contents size for IndexedDb object
                              file store. Removed in 7.2
                            x-kubernetes-int-or-string: true
                          indexDBTierByFileLength:
                            default: false
                            description: Disable detection of sparse file support
                              and use the full file length which may be an over-estimate
                              of the actual usage in the persist tier. Removed in
                              7.2
                            type: boolean
                          loadVectorsOnStart:
                            default: on_demand
                            description: "Startup data-loading scheme: \n * \"always\"\
                              \    : load all the data into memory before accepting
                              requests * \"lazy\"      : load the necessary data to
                              start, but load the remainder                 lazily
                              * \"on_demand\" : only load data as requests use it"
                            enum:
                            - always
                            - lazy
                            - on_demand
                            type: string
                          metadataFlushImmediate:
                            description: Removed in 7.2
                            type: boolean
                          persistDirectory:
                            default: /opt/gpudb/persist
                            description: Specify a base directory to store persistence
                              data files.
                            type: string
                          persistSync:
                            description: Whether to use synchronous persistence file
                              writing.  If "false", files will be written asynchronously.
                              Removed in 7.2
                            type: boolean
                          persistSyncTime:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 5
                            description: "Duration in seconds, for which persistence
                              files will be force-synced if out of sync, once per
                              minute. \n NOTE: Files are always opportunistically
                              saved; this simply enforces a maximum time a file can
                              be out of date. Set to a very high number to disable."
                            x-kubernetes-int-or-string: true
                          shadowAggSize:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 100000000
                            description: The maximum number of bytes in the shadow
                              aggregate cache
                            x-kubernetes-int-or-string: true
                          shadowCubeEnabled:
                            default: true
                            description: Whether to enable chunk caching
                            type: boolean
                          shadowFilterSize:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 100000000
                            description: The maximum number of bytes in the shadow
                              filter cache
                            x-kubernetes-int-or-string: true
                          smsDirectory:
                            default: ${gaia.persist_directory}
                            description: Base directory to store hashed strings.
                            type: string
                          smsMaxOpenFiles:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 128
                            description: Maximum number of open files (per-TOM) for
                              the SMS (string) store.
                            x-kubernetes-int-or-string: true
                          synchronousCompression:
                            default: false
                            description: 'Synchronous compression: compress vectors
                              on set compression.'
                            type: boolean
                          tempDirectory:
                            default: ${gaia.persist_directory}/tmp
                            description: Directory for GPUdb to use to store temporary
                              files. Must be a fully qualified path, have at least
                              100Mb of free space, and execute permission.
                            minLength: 4
                            type: string
                          textIndexDirectory:
                            default: ${gaia.persist_directory}
                            description: Base directory to store the text search index.
                            type: string
                          walChecksum:
                            default: true
                            description: Enable checksum protection on the wal entries.
                              New in 7.2
                            type: boolean
                          walFlushFrequency:
                            default: 60
                            description: Specifies how frequently wal entries are
                              written with background sync. New in 7.2
                            type: integer
                          walMaxSegmentSize:
                            default: 500000000
                            description: Maximum size of each wal segment file New
                              in 7.2
                            format: int32
                            type: integer
                          walSegmentCount:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Approximate number of segment files to split
                              the wal across. A minimum of two is required. The size
                              of the wal is limited by segment_count * max_segment_size.
                              (per rank and per tom) Set to 0 to remove a size limit
                              on the wal itself, but still be bounded by rank tier
                              limits. Set to -1 to have the database decide automatically
                              per table. New in 7.2
                            x-kubernetes-int-or-string: true
                          walSyncPolicy:
                            default: flush
                            description: "Sync mode to use when persisting wal entries
                              to disk: \n \"none\"       : Disable the wal \"background\"\
                              \ : Wal entries are periodically written instead of
                              immediately after each operation \"flush\"      : Protects
                              entries in the event of a database crash \"fsync\" \
                              \     : Protects entries in the event of an OS crash
                              \n New in 7.2"
                            enum:
                            - none
                            - background
                            - flush
                            - fsync
                            type: string
                          walTruncateCorruptTablesOnStart:
                            default: true
                            description: "If true, any table that is found to be corrupt
                              after replaying its wal at startup will automatically
                              be truncated so that the table becomes operable. If
                              false, the user will be responsible for resolving the
                              issue via sql REPAIR TABLE or similar. \n New in 7.2"
                            type: boolean
                        type: object
                      postgresProxy:
                        default:
                          enablePostgresProxy: false
                          idleConnectionTimeout: 1200
                          maxQueuedConnections: 1
                          maxThreads: 64
                          minThreads: 2
                          port:
                            containerPort: 5432
                            name: postgresProxy
                            protocol: TCP
                          ssl: false
                        description: PostgresProxy
                        properties:
                          enablePostgresProxy:
                            default: false
                            description: Postgres Proxy Server Start an Postgres(TCP)
                              server as a proxy to handle postgres wire protocol messages.
                            type: boolean
                          idleConnectionTimeout:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 1200
                            description: 'Set idle connection  timeout in seconds.
                              (default: "1200")'
                            x-kubernetes-int-or-string: true
                          maxQueuedConnections:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 1
                            description: 'Set max number of queued server connections.
                              (default: "1")'
                            x-kubernetes-int-or-string: true
                          maxThreads:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 64
                            description: 'Set max number of server threads to spawn.
                              (default: "64")'
                            x-kubernetes-int-or-string: true
                          minThreads:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 2
                            description: 'Set min number of server threads to spawn.
                              (default: "2")'
                            x-kubernetes-int-or-string: true
                          port:
                            default:
                              containerPort: 5432
                              name: postgres_proxy
                              protocol: TCP
                            description: TCP port that the postgres  proxy server
                              will listen on if 'enable_postgres_proxy' is "true".
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          ssl:
                            default: false
                            description: Set to "true" to use SSL; if "true" then
                              'ssl_key_file' and 'ssl_cert_file' must be provided
                            type: boolean
                          sslCertFile:
                            default: ''
                            type: string
                          sslKeyFile:
                            default: ''
                            description: "Files containing the SSL private Key and
                              the SSL certificate for. If required, a self signed
                              certificate (expires after 10 years) can be generated
                              via the command: \n openssl req -newkey rsa:2048 -new
                              -nodes -x509 \\   -days 3650 -keyout key.pem -out cert.pem"
                            type: string
                        type: object
                      processes:
                        default:
                          initTablesNumThreadsPerTom: 8
                          kernelOmpThreads: 3
                          maxHttpThreads: 32
                          maxTbbThreadsPerRank: '-1'
                          minHttpThreads: 8
                          smOmpThreads: 2
                          subtaskConcurrentyLimit: '-1'
                          tcsPerTom: '-1'
                          tomsPerRank: 1
                          tpsPerTom: '-1'
                        description: ProcessesConfig
                        properties:
                          initTablesNumThreadsPerTom:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 8
                            description: Set the maximum number of threads per tom
                              for table initialization on startup
                            x-kubernetes-int-or-string: true
                          kernelOmpThreads:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 3
                            description: Set the number of parallel calculation threads
                              to use for data processing use -1 to use the max number
                              of threads (not recommended)
                            x-kubernetes-int-or-string: true
                          maxHttpThreads:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 32
                            description: The maximum number of web server threads
                              to spawn
                            x-kubernetes-int-or-string: true
                          maxTbbThreadsPerRank:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '-1'
                            description: Set the maximum number of threads (both workers
                              and masters) to be passed to TBB on initialization.  Generally
                              speaking, 'max_tbb_threads_per_rank' - "1" TBB workers
                              will be created.  Use "-1" for no limit.
                            x-kubernetes-int-or-string: true
                          minHttpThreads:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 8
                            description: The minimum number of web server threads
                              to spawn
                            x-kubernetes-int-or-string: true
                          smOmpThreads:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 2
                            description: Set the number of parallel jobs to create
                              for multi-child set calulations use "-1" to use the
                              max number of threads (not recommended)
                            x-kubernetes-int-or-string: true
                          subtaskConcurrentyLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '-1'
                            description: Maximum number of simultaneous threads allocated
                              to a given request, on each rank. Note that thread allocation
                              may also be limted by resource group limits and/or system
                              load.
                            x-kubernetes-int-or-string: true
                          tcsPerTom:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '-1'
                            description: Set the number of TaskCalculators per TOM,
                              GPU data processors.
                            x-kubernetes-int-or-string: true
                          tomsPerRank:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 1
                            description: Set the number of TOMs (data container shards)
                              per rank
                            x-kubernetes-int-or-string: true
                          tpsPerTom:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '-1'
                            description: Set the number of TaskProcessors per TOM,
                              CPU data processors.
                            x-kubernetes-int-or-string: true
                        type: object
                      procs:
                        default:
                          directory:
                            persistVolumeClaim:
                              spec:
                                accessModes:
                                - ReadWriteOnce
                            volumeMount:
                              mountPath: /opt/gpudb/user-procs
                              name: tmp-name-procs
                              readOnly: false
                          enable: true
                        description: ProcsConfig
                        properties:
                          directory:
                            default:
                              volumeMount:
                                mountPath: /opt/gpudb/user-procs
                                name: tmp-name-procs
                                readOnly: false
                            description: Directory where proc files are stored at
                              runtime. Must be a fully qualified path with execute
                              permission. If not specified, 'temp_directory' will
                              be used.
                            properties:
                              persistVolumeClaim:
                                description: PersistentVolumeClaim is a user's request
                                  for and claim to a persistent volume
                                properties:
                                  apiVersion:
                                    description: 'APIVersion defines the versioned
                                      schema of this representation of an object.
                                      Servers should convert recognized schemas to
                                      the latest internal value, and may reject unrecognized
                                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                    type: string
                                  kind:
                                    description: 'Kind is a string value representing
                                      the REST resource this object represents. Servers
                                      may infer this from the endpoint the client
                                      submits requests to. Cannot be updated. In CamelCase.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  metadata:
                                    description: "Standard object's metadata. More
                                      info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                    type: object
                                  spec:
                                    description: 'spec defines the desired characteristics
                                      of a volume requested by a pod author. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'accessModes contains the desired
                                          access modes the volume should have. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'dataSource field can be used
                                          to specify either: * An existing VolumeSnapshot
                                          object (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller
                                          can support the specified data source, it
                                          will create a new volume based on the contents
                                          of the specified data source. When the AnyVolumeDataSource
                                          feature gate is enabled, dataSource contents
                                          will be copied to dataSourceRef, and dataSourceRef
                                          contents will be copied to dataSource when
                                          dataSourceRef.namespace is not specified.
                                          If the namespace is specified, then dataSourceRef
                                          will not be copied to dataSource.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      dataSourceRef:
                                        description: "dataSourceRef specifies the
                                          object from which to populate the volume
                                          with data, if a non-empty volume is desired.
                                          This may be any object from a non-empty
                                          API group (non core object) or a PersistentVolumeClaim
                                          object. When this field is specified, volume
                                          binding will only succeed if the type of
                                          the specified object matches some installed
                                          volume populator or dynamic provisioner.
                                          This field will replace the functionality
                                          of the dataSource field and as such if both
                                          fields are non-empty, they must have the
                                          same value. For backwards compatibility,
                                          when namespace isn't specified in dataSourceRef,
                                          both fields (dataSource and dataSourceRef)
                                          will be set to the same value automatically
                                          if one of them is empty and the other is
                                          non-empty. When namespace is specified in
                                          dataSourceRef, dataSource isn't set to the
                                          same value and must be empty. There are
                                          three important differences between dataSource
                                          and dataSourceRef: * While dataSource only
                                          allows two specific types of objects, dataSourceRef\
                                          \   allows any non-core object, as well
                                          as PersistentVolumeClaim objects. * While
                                          dataSource ignores disallowed values (dropping
                                          them), dataSourceRef   preserves all values,
                                          and generates an error if a disallowed value
                                          is   specified. * While dataSource only
                                          allows local objects, dataSourceRef allows
                                          objects   in any namespaces. (Beta) Using
                                          this field requires the AnyVolumeDataSource
                                          feature gate to be enabled. (Alpha) Using
                                          the namespace field of dataSourceRef requires
                                          the CrossNamespaceVolumeDataSource feature
                                          gate to be enabled."
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for
                                              the resource being referenced. If APIGroup
                                              is not specified, the specified Kind
                                              must be in the core API group. For any
                                              other third-party types, APIGroup is
                                              required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                          namespace:
                                            description: Namespace is the namespace
                                              of resource being referenced Note that
                                              when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                              object is required in the referent namespace
                                              to allow that namespace's owner to accept
                                              the reference. See the ReferenceGrant
                                              documentation for details. (Alpha) This
                                              field requires the CrossNamespaceVolumeDataSource
                                              feature gate to be enabled.
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      resources:
                                        description: 'resources represents the minimum
                                          resources the volume should have. If RecoverVolumeExpansionFailure
                                          feature is enabled users are allowed to
                                          specify resource requirements that are lower
                                          than previous value but must still be higher
                                          than capacity recorded in the status field
                                          of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          claims:
                                            description: "Claims lists the names of
                                              resources, defined in spec.resourceClaims,
                                              that are used by this container. \n
                                              This is an alpha field and requires
                                              enabling the DynamicResourceAllocation
                                              feature gate. \n This field is immutable.
                                              It can only be set for containers."
                                            items:
                                              description: ResourceClaim references
                                                one entry in PodSpec.ResourceClaims.
                                              properties:
                                                name:
                                                  description: Name must match the
                                                    name of one entry in pod.spec.resourceClaims
                                                    of the Pod where this field is
                                                    used. It makes that resource available
                                                    inside a container.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                            x-kubernetes-list-map-keys:
                                            - name
                                            x-kubernetes-list-type: map
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                              amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                              amount of compute resources required.
                                              If Requests is omitted for a container,
                                              it defaults to Limits if that is explicitly
                                              specified, otherwise to an implementation-defined
                                              value. Requests cannot exceed Limits.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: selector is a label query over
                                          volumes to consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents
                                                    a key's relationship to a set
                                                    of values. Valid operators are
                                                    In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array
                                                    of string values. If the operator
                                                    is In or NotIn, the values array
                                                    must be non-empty. If the operator
                                                    is Exists or DoesNotExist, the
                                                    values array must be empty. This
                                                    array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'storageClassName is the name
                                          of the StorageClass required by the claim.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type
                                          of volume is required by the claim. Value
                                          of Filesystem is implied when not included
                                          in claim spec.
                                        type: string
                                      volumeName:
                                        description: volumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                  status:
                                    description: 'status represents the current information/status
                                      of a persistent volume claim. Read-only. More
                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    properties:
                                      accessModes:
                                        description: 'accessModes contains the actual
                                          access modes the volume backing the PVC
                                          has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      allocatedResources:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: 
                                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: allocatedResources is the storage
                                          resource within AllocatedResources tracks
                                          the capacity allocated to a PVC. It may
                                          be larger than the actual capacity when
                                          a volume expansion operation is requested.
                                          For storage quota, the larger value from
                                          allocatedResources and PVC.spec.resources
                                          is used. If allocatedResources is not set,
                                          PVC.spec.resources alone is used for quota
                                          calculation. If a volume expansion capacity
                                          request is lowered, allocatedResources is
                                          only lowered if there are no expansion operations
                                          in progress and if the actual volume capacity
                                          is equal or lower than the requested capacity.
                                          This is an alpha field and requires enabling
                                          RecoverVolumeExpansionFailure feature.
                                        type: object
                                      capacity:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: 
                                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: capacity represents the actual
                                          resources of the underlying volume.
                                        type: object
                                      conditions:
                                        description: conditions is the current Condition
                                          of persistent volume claim. If underlying
                                          persistent volume is being resized then
                                          the Condition will be set to 'ResizeStarted'.
                                        items:
                                          description: PersistentVolumeClaimCondition
                                            contains details about state of pvc
                                          properties:
                                            lastProbeTime:
                                              description: lastProbeTime is the time
                                                we probed the condition.
                                              format: date-time
                                              type: string
                                            lastTransitionTime:
                                              description: lastTransitionTime is the
                                                time the condition transitioned from
                                                one status to another.
                                              format: date-time
                                              type: string
                                            message:
                                              description: message is the human-readable
                                                message indicating details about last
                                                transition.
                                              type: string
                                            reason:
                                              description: reason is a unique, this
                                                should be a short, machine understandable
                                                string that gives the reason for condition's
                                                last transition. If it reports "ResizeStarted"
                                                that means the underlying persistent
                                                volume is being resized.
                                              type: string
                                            status:
                                              type: string
                                            type:
                                              description: PersistentVolumeClaimConditionType
                                                is a valid value of PersistentVolumeClaimCondition.Type
                                              type: string
                                          required:
                                          - status
                                          - type
                                          type: object
                                        type: array
                                      phase:
                                        description: phase represents the current
                                          phase of PersistentVolumeClaim.
                                        type: string
                                      resizeStatus:
                                        description: resizeStatus stores status of
                                          resize operation. ResizeStatus is not set
                                          by default but when expansion is complete
                                          resizeStatus is set to empty string by resize
                                          controller or kubelet. This is an alpha
                                          field and requires enabling RecoverVolumeExpansionFailure
                                          feature.
                                        type: string
                                    type: object
                                type: object
                              volumeMount:
                                description: VolumeMount describes a mounting of a
                                  Volume within a container.
                                properties:
                                  mountPath:
                                    description: Path within the container at which
                                      the volume should be mounted.  Must not contain
                                      ':'.
                                    type: string
                                  mountPropagation:
                                    description: mountPropagation determines how mounts
                                      are propagated from the host to container and
                                      the other way around. When not set, MountPropagationNone
                                      is used. This field is beta in 1.10.
                                    type: string
                                  name:
                                    description: This must match the Name of a Volume.
                                    type: string
                                  readOnly:
                                    description: Mounted read-only if true, read-write
                                      otherwise (false or unspecified). Defaults to
                                      false.
                                    type: boolean
                                  subPath:
                                    description: Path within the volume from which
                                      the container's volume should be mounted. Defaults
                                      to "" (volume's root).
                                    type: string
                                  subPathExpr:
                                    description: Expanded path within the volume from
                                      which the container's volume should be mounted.
                                      Behaves similarly to SubPath but environment
                                      variable references $(VAR_NAME) are expanded
                                      using the container's environment. Defaults
                                      to "" (volume's root). SubPathExpr and SubPath
                                      are mutually exclusive.
                                    type: string
                                required:
                                - mountPath
                                - name
                                type: object
                            type: object
                          enable:
                            default: true
                            description: Enable procs (UDFs)
                            type: boolean
                        type: object
                      security:
                        default:
                          autoCreateExternalUsers: false
                          autoGrantExternalRoles: true
                          autoRevokeExternalRoles: true
                          enableAuthorization: true
                          enableExternalAuthentication: true
                          externalSecurity:
                            ranger:
                              authorizerAddress: ipc://${gaia.temp_directory}/gpudb-ranger-0
                              authorizerRemoteDebugPort: 0
                              authorizerTimeout: 120
                              cacheMinutes: 60
                              name: kinetica
                          minPasswordLength: 0
                          requireAuthentication: true
                          unifiedSecurityNamespace: true
                        description: SecurityConfig
                        properties:
                          autoCreateExternalUsers:
                            default: false
                            description: Automatically create accounts for externally-authenticated
                              users. If 'enable_external_authentication' is "false",
                              this setting has no effect. Note that accounts are not
                              automatically deleted if users are removed from the
                              external authentication provider and will be orphaned.
                            type: boolean
                          autoGrantExternalRoles:
                            default: false
                            description: "Automatically add roles passed in via the
                              \"KINETICA_ROLES\" HTTP header to externally-authenticated
                              users. Specified roles that do not exist are ignored.
                              If 'enable_external_authentication' is \"false\", this
                              setting has no effect. \n IMPORTANT: DO NOT ENABLE unless
                              the authentication proxy is configured to block \"KINETICA_ROLES\"\
                              \ HTTP headers passed in from clients."
                            type: boolean
                          autoRevokeExternalRoles:
                            default: false
                            description: Comma-separated list of roles to revoke from
                              externally-authenticated users prior to granting roles
                              passed in via the "KINETICA_ROLES" HTTP header, or "*"
                              to revoke all roles. Preceding a role name with an "!"
                              overrides the revocation (e.g. "*,!foo" revokes all
                              roles except "foo"). Leave blank to disable. If either
                              'enable_external_authentication' or 'auto_grant_external_roles'
                              is "false", this setting has no effect.
                            type: boolean
                          enableAuthorization:
                            default: true
                            description: Enable authorization checks.  When disabled,
                              all requests will be treated as the administrative user.
                            type: boolean
                          enableExternalAuthentication:
                            default: true
                            description: "Enable external (LDAP, Kerberos, etc.) authentication.
                              User IDs of externally-authenticated users must be passed
                              in via the \"REMOTE_USER\" HTTP header from the authentication
                              proxy. May be used in conjuntion with the 'enable_httpd_proxy'
                              setting above for an integrated external authentication
                              solution. \n IMPORTANT: DO NOT ENABLE unless external
                              access to GPUdb ports has been blocked via firewall
                              AND the authentication proxy is configured to block
                              \"REMOTE_USER\" HTTP headers passed in from clients.
                              server."
                            type: boolean
                          externalSecurity:
                            default:
                              ranger:
                                authorizerAddress: ipc://${gaia.temp_directory}/gpudb-ranger-0
                                authorizerRemoteDebugPort: 0
                                authorizerTimeout: 120
                                cacheMinutes: 60
                                name: kinetica
                            description: ExternalSecurity
                            properties:
                              ranger:
                                description: Ranger
                                properties:
                                  authorizerAddress:
                                    default: ipc://${gaia.temp_directory}/gpudb-ranger-0
                                    description: "AuthorizerAddress - The network
                                      URI for the ranger_authorizer to start. The
                                      URI can be either TCP or IPC. TCP address is
                                      used to indicate the remote ranger_authorizer
                                      which may run at other hosts. The IPC address
                                      is for a local ranger_authorizer. \n Example
                                      addresses for remote or TCP servers: \n  tcp://127.0.0.1:9293\
                                      \  tcp://HOST_IP:9293 \n Example address for
                                      local IPC servers: \n  ipc:///tmp/gpudb-ranger-0
                                      \n security.external.ranger_authorizer.address
                                      = ipc://${gaia.temp_directory}/gpudb-ranger-0"
                                    type: string
                                  authorizerRemoteDebugPort:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 0
                                    description: "Remote debugger port used for the
                                      ranger_authorizer. Setting the port to \"0\"\
                                      \ disables remote debugging. \n NOTE:  Recommended
                                      port to use is \"5005\" security.external.ranger_authorizer.remote_debug_port
                                      = 0"
                                    x-kubernetes-int-or-string: true
                                  authorizerTimeout:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 120
                                    description: AuthorizerTimeout - Ranger Authorizer
                                      timeout in seconds security.external.ranger_authorizer.timeout
                                      = 120
                                    x-kubernetes-int-or-string: true
                                  cacheMinutes:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 60
                                    description: CacheMinutes- Maximum minutes to
                                      hold on to data from Ranger security.external.ranger.cache_minutes
                                      = 60
                                    x-kubernetes-int-or-string: true
                                  name:
                                    default: kinetica
                                    description: Name of the service created on the
                                      Ranger Server to manage this Kinetica instance
                                      security.external.ranger.service_name = kinetica
                                    type: string
                                  url:
                                    description: ExtURL - URL of Ranger REST API.  E.g.,
                                      https://localhost:6080/ Leave blank for no Ranger
                                      Server security.external.ranger.url =
                                    type: string
                                required:
                                - authorizerAddress
                                - authorizerRemoteDebugPort
                                - authorizerTimeout
                                - cacheMinutes
                                - name
                                type: object
                            required:
                            - ranger
                            type: object
                          minPasswordLength:
                            default: 4
                            description: The minimum allowable password length.
                            format: int32
                            type: integer
                          requireAuthentication:
                            default: true
                            description: Require all users to be authenticated.  Disable
                              this to allow users to access the database as the 'unauthenticated'
                              user.  Useful for situations where the public needs
                              to access the data.
                            type: boolean
                          unifiedSecurityNamespace:
                            default: true
                            description: "UnifiedSecurityNamespace - Use a single
                              namespace for internal and external user IDs and role
                              names. If false, external user IDs must be prefixed
                              with \"@\" to differentiate them from internal user
                              IDs and role names (except in the \"REMOTE_USER\" HTTP
                              header, where the \"@\" is omitted). \n unified_security_namespace
                              = true"
                            type: boolean
                        required:
                        - externalSecurity
                        - unifiedSecurityNamespace
                        type: object
                      sql:
                        default:
                          address: ipc://${gaia.temp_directory}/gpudb-query-engine-0
                          costBasedOptimization: false
                          distributedJoins: true
                          distributedOperations: true
                          enablePlanner: true
                          forceBinaryJoins: false
                          forceBinarySetOps: false
                          maxParallelSteps: 4
                          maxViewNestingLevels: 16
                          pagingTableTTL: 20
                          parallelExecution: true
                          planCacheSize: 4000
                          plannerMaxMemory: 4096
                          plannerMaxStack: 6
                          plannerTimeout: 120
                          plannerWorkers: 16
                          remoteDebugPort: 5005
                          resultsCacheTTL: 60
                          resultsCaching: true
                          ruleBasedOptimization: true
                        description: SQLConfig
                        properties:
                          address:
                            default: ipc://${gaia.temp_directory}/gpudb-query-engine-0
                            description: SQLPlannerAddress is not included as it is
                              just default always
                            type: string
                          costBasedOptimization:
                            default: false
                            description: Enable the cost-based optimizer
                            type: boolean
                          distributedJoins:
                            default: true
                            description: Enable distributed joins
                            type: boolean
                          distributedOperations:
                            default: true
                            description: Enable distributed operations
                            type: boolean
                          enablePlanner:
                            default: true
                            description: Enable Query Planner
                            type: boolean
                          forceBinaryJoins:
                            default: false
                            description: Perform joins between only 2 tables at a
                              time; default is all tables involved in the operation
                              at once
                            type: boolean
                          forceBinarySetOps:
                            default: false
                            description: Perform unions/intersections/exceptions between
                              only 2 tables at a time; default is all tables involved
                              in the operation at once
                            type: boolean
                          maxParallelSteps:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 4
                            description: Max parallel steps
                            x-kubernetes-int-or-string: true
                          maxViewNestingLevels:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 16
                            description: Max allowed view nesting levels. Valid range(1-64)
                            x-kubernetes-int-or-string: true
                          pagingTableTTL:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 20
                            description: TTL of the paging results table
                            x-kubernetes-int-or-string: true
                          parallelExecution:
                            default: true
                            description: Enable parallel query evaluation
                            type: boolean
                          planCacheSize:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 4000
                            description: The maximum number of entries in the SQL
                              plan cache.  The default is "4000" entries, but the
                              configurable range is "1" - "1000000".  Plan caching
                              will be disabled if the value is set outside of that
                              range.
                            x-kubernetes-int-or-string: true
                          plannerMaxMemory:
                            default: 4096
                            description: The maximum memory for the query planner
                              to use in Megabytes.
                            format: int64
                            type: integer
                          plannerMaxStack:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 6
                            description: The maximum stack size for the query planner
                              threads to use in Megabytes.
                            x-kubernetes-int-or-string: true
                          plannerTimeout:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 120
                            description: Query planner timeout in seconds
                            x-kubernetes-int-or-string: true
                          plannerWorkers:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 16
                            description: Max Query planner threads
                            x-kubernetes-int-or-string: true
                          remoteDebugPort:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 5005
                            description: "Remote debugger port used for the query
                              planner. Setting the port to \"0\" disables remote debugging.
                              \n NOTE:  Recommended port to use is \"5005\""
                            x-kubernetes-int-or-string: true
                          resultsCacheTTL:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 60
                            description: TTL of the query cache results table
                            x-kubernetes-int-or-string: true
                          resultsCaching:
                            default: true
                            description: Enable query results caching
                            type: boolean
                          ruleBasedOptimization:
                            default: true
                            description: Enable rule-based query rewrites
                            type: boolean
                        type: object
                      sqlEngine:
                        description: SQLEngineConfig
                        properties:
                          costBasedOptimization:
                            default: false
                            description: Enable the cost-based optimizer
                            type: boolean
                          defaultSchema:
                            default: ''
                            description: Name of default collection for user tables
                            type: string
                          distributedJoins:
                            default: true
                            description: Enable distributed joins
                            type: boolean
                          distributedOperations:
                            default: true
                            description: Enable distributed operations
                            type: boolean
                          forceBinaryJoins:
                            default: false
                            description: Perform joins between only 2 tables at a
                              time; default is all tables involved in the operation
                              at once
                            type: boolean
                          forceBinarySetOps:
                            default: false
                            description: Perform unions/intersections/exceptions between
                              only 2 tables at a time; default is all tables involved
                              in the operation at once
                            type: boolean
                          maxParallelSteps:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 4
                            description: Max parallel steps
                            x-kubernetes-int-or-string: true
                          maxViewNestingLevels:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 16
                            description: Max allowed view nesting levels. Valid range(1-64)
                            x-kubernetes-int-or-string: true
                          pagingTableTTL:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 20
                            description: TTL of the paging results table
                            x-kubernetes-int-or-string: true
                          parallelExecution:
                            default: true
                            description: Enable parallel query evaluation
                            type: boolean
                          planCacheSize:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 4000
                            description: The maximum number of entries in the SQL
                              plan cache.  The default is "4000" entries, but the
                              configurable range is "1" - "1000000".  Plan caching
                              will be disabled if the value is set outside of that
                              range.
                            x-kubernetes-int-or-string: true
                          planner:
                            description: PlannerConfig
                            properties:
                              enablePlanner:
                                default: true
                                description: Enable Query Planner
                                type: boolean
                              maxMemory:
                                default: 4096
                                description: The maximum memory for the query planner
                                  to use in Megabytes.
                                type: integer
                              maxStack:
                                default: 6
                                description: The maximum stack size for the query
                                  planner threads to use in Megabytes.
                                type: integer
                              plannerAddress:
                                default: ipc:///tmp/gpudb-query-engine-0
                                description: "The network URI for the query planner
                                  to start. The URI can be either TCP or IPC. TCP
                                  address is used to indicate the remote query planner
                                  which may run at other hosts. The IPC address is
                                  for a local query planner. \n Example for remote
                                  or TCP servers: \n #  sql.planner.address  = tcp://127.0.0.1:9293
                                  #  sql.planner.address  = tcp://HOST_IP:9293 \n
                                  Example for local IPC servers: \n #  sql.planner.address\
                                  \  = ipc:///tmp/gpudb-query-engine-0"
                                minLength: 4
                                type: string
                              remoteDebugPort:
                                default: 0
                                description: "Remote debugger port used for the query
                                  planner. Setting the port to \"0\" disables remote
                                  debugging. \n NOTE:  Recommended port to use is
                                  \"5005\""
                                type: integer
                              timeout:
                                default: 120
                                description: Query planner timeout in seconds
                                type: integer
                              workers:
                                default: 16
                                description: Max Query planner threads
                                type: integer
                            type: object
                          results:
                            properties:
                              cacheTTL:
                                default: 60
                                description: TTL of the query cache results table
                                type: integer
                              caching:
                                default: true
                                description: Enable query results caching
                                type: boolean
                            type: object
                          ruleBasedOptimization:
                            default: true
                            description: Enable rule-based query rewrites
                            type: boolean
                          tempCollection:
                            default: __SQL_TEMP
                            description: Name of collection that will be used to store
                              result tables generated as part of query execution
                            type: string
                        type: object
                      statistics:
                        default:
                          aggrRowCount: 10000
                          aggrTime: 1
                          enable: true
                          ipAddress: ${gaia.host0.address}
                          namespace: gpudb
                          port: 2003
                          retentionDays: 21
                        description: StatisticsConfig
                        properties:
                          aggrRowCount:
                            default: 10000
                            description: system_metadata.stats_aggr_rowcount = 10000
                            type: integer
                          aggrTime:
                            default: 1
                            description: system_metadata.stats_aggr_time = 1
                            type: integer
                          enable:
                            default: true
                            description: Run a statistics server to collect information
                              about Kinetica and the machines it runs on.
                            type: boolean
                          ipAddress:
                            default: ${gaia.host0.address}
                            description: Statistics server IP address (run on head
                              node) default port is "2003"
                            type: string
                          namespace:
                            default: gpudb
                            description: Statistics server namespace - should be a
                              machine identifier
                            minLength: 4
                            type: string
                          port:
                            default: 2003
                            type: integer
                          retentionDays:
                            default: 21
                            description: System metadata catalog settings system_metadata.stats_retention_days
                              = 21
                            type: integer
                        required:
                        - aggrRowCount
                        - aggrTime
                        - retentionDays
                        type: object
                      textSearch:
                        default:
                          enableTextSearch: false
                          textIndicesPerTom: 2
                          textSearcherRefreshInterval: 20
                          useExternalTextServer: true
                        description: TextSearchConfig
                        properties:
                          enableTextSearch:
                            default: false
                            description: Enable text search capability within the
                              database.
                            type: boolean
                          textIndicesPerTom:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 2
                            description: Number of text indices to start for each
                              rank
                            x-kubernetes-int-or-string: true
                          textSearcherRefreshInterval:
                            anyOf:
                            - type: integer
                            - type: string
                            default: 20
                            description: Searcher refresh intervals - specifies the
                              maximum delay (in seconds) between writing to the text
                              search index and being able to search for the value
                              just written.  A value of "0" insures that writes to
                              the index are immediately available to be searched.  A
                              more nominal value of "100" should improve ingest speed
                              at the cost of some delay in being able to text search
                              newly added values.
                            x-kubernetes-int-or-string: true
                          useExternalTextServer:
                            default: true
                            description: 'Use the production capable external text
                              server instead of a lightweight internal server which
                              should only be used for light testing. Note: The internal
                              text server is deprecated and may be removed in future
                              versions.'
                            type: boolean
                        type: object
                      tieredStorage:
                        default:
                          globalTier:
                            colocateDisks: true
                            concurrentWaitTimeout: 120
                            encryptDataAtRest: true
                        properties:
                          coldStorageTier:
                            description: "Cold Storage Tiers can be used to extend
                              the storage capacity of the Persist Tier. Assign a tier
                              strategy with cold storage to objects that will be infrequently
                              accessed since they will be moved as needed from the
                              Persist Tier. The Cold Storage Tier is typically a much
                              larger capacity physical disk or a cloud-based storage
                              system which may not be as performant as the Persist
                              Tier storage. \n A default storage limit and eviction
                              thresholds can be set across all ranks for a given Cold
                              Storage Tier, while one or more ranks within a Cold
                              Storage Tier may be configured to override those defaults.
                              \n NOTE: If an object needs to be pulled out of cold
                              storage during a query, it may need to use the local
                              persist directory as a temporary swap space. This may
                              trigger an eviction of other persisted items to cold
                              storage due to low disk space condition defined by the
                              watermark settings for the Persist Tier."
                            properties:
                              coldStorageAzure:
                                description: ColdStorageAzure
                                properties:
                                  basePath:
                                    description: "'base_path'             : A base
                                      path based on the provider type for this tier."
                                    type: string
                                  clientID:
                                    type: string
                                  clientSecret:
                                    type: string
                                  connectionTimeout:
                                    default: '30'
                                    description: "'connection_timeout'    : Timeout
                                      in seconds for connecting to this storage provider."
                                    type: string
                                  containerName:
                                    default: /gpudb/cold_storage
                                    description: "'base_path'             : A base
                                      path based on the provider type for this tier.
                                      BasePath string `json:\"basePath,omitempty\"\
                                      `"
                                    type: string
                                  highWatermark:
                                    default: 90
                                    description: "* 'high_watermark' : Percentage
                                      used eviction threshold.  Once             \
                                      \         usage exceeds this value, evictions
                                      from this tier will be                     \
                                      \ scheduled in the background and continue until
                                      the                      'low_watermark' percentage
                                      usage is reached.  Default is              \
                                      \        \"90\", signifying a 90% memory usage
                                      threshold."
                                    type: integer
                                  limit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 1Gi
                                    description: "* 'limit'          : The maximum
                                      (bytes) per rank that can be allocated     \
                                      \                 across all resource groups."
                                    pattern: 
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  lowWatermark:
                                    default: 80
                                    description: "* 'low_watermark'  : Percentage
                                      used recovery threshold.  Once             \
                                      \         usage exceeds the 'high_watermark',
                                      evictions will                      continue
                                      until usage falls below this recovery      \
                                      \                threshold. Default is \"80\"\
                                      , signifying an 80% usage                  \
                                      \    threshold."
                                    type: integer
                                  name:
                                    type: string
                                  path:
                                    default: default
                                    description: A base directory to use as a space
                                      for this tier.
                                    type: string
                                  provisioner:
                                    default: docker.io/hostpath
                                    type: string
                                  sasToken:
                                    type: string
                                  storageAccountKey:
                                    type: string
                                  storageAccountName:
                                    type: string
                                  tenantID:
                                    type: string
                                  useHttps:
                                    default: true
                                    type: boolean
                                  useManagedCredentials:
                                    default: true
                                    type: boolean
                                  volumeClaim:
                                    description: Kubernetes Persistent Volume Claim
                                      for this disk tier.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      metadata:
                                        description: "Standard object's metadata.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                        type: object
                                      spec:
                                        description: 'spec defines the desired characteristics
                                          of a volume requested by a pod author. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              desired access modes the volume should
                                              have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          dataSource:
                                            description: 'dataSource field can be
                                              used to specify either: * An existing
                                              VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                              * An existing PVC (PersistentVolumeClaim)
                                              If the provisioner or an external controller
                                              can support the specified data source,
                                              it will create a new volume based on
                                              the contents of the specified data source.
                                              When the AnyVolumeDataSource feature
                                              gate is enabled, dataSource contents
                                              will be copied to dataSourceRef, and
                                              dataSourceRef contents will be copied
                                              to dataSource when dataSourceRef.namespace
                                              is not specified. If the namespace is
                                              specified, then dataSourceRef will not
                                              be copied to dataSource.'
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          dataSourceRef:
                                            description: "dataSourceRef specifies
                                              the object from which to populate the
                                              volume with data, if a non-empty volume
                                              is desired. This may be any object from
                                              a non-empty API group (non core object)
                                              or a PersistentVolumeClaim object. When
                                              this field is specified, volume binding
                                              will only succeed if the type of the
                                              specified object matches some installed
                                              volume populator or dynamic provisioner.
                                              This field will replace the functionality
                                              of the dataSource field and as such
                                              if both fields are non-empty, they must
                                              have the same value. For backwards compatibility,
                                              when namespace isn't specified in dataSourceRef,
                                              both fields (dataSource and dataSourceRef)
                                              will be set to the same value automatically
                                              if one of them is empty and the other
                                              is non-empty. When namespace is specified
                                              in dataSourceRef, dataSource isn't set
                                              to the same value and must be empty.
                                              There are three important differences
                                              between dataSource and dataSourceRef:
                                              * While dataSource only allows two specific
                                              types of objects, dataSourceRef   allows
                                              any non-core object, as well as PersistentVolumeClaim
                                              objects. * While dataSource ignores
                                              disallowed values (dropping them), dataSourceRef\
                                              \   preserves all values, and generates
                                              an error if a disallowed value is  \
                                              \ specified. * While dataSource only
                                              allows local objects, dataSourceRef
                                              allows objects   in any namespaces.
                                              (Beta) Using this field requires the
                                              AnyVolumeDataSource feature gate to
                                              be enabled. (Alpha) Using the namespace
                                              field of dataSourceRef requires the
                                              CrossNamespaceVolumeDataSource feature
                                              gate to be enabled."
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                              namespace:
                                                description: Namespace is the namespace
                                                  of resource being referenced Note
                                                  that when a namespace is specified,
                                                  a gateway.networking.k8s.io/ReferenceGrant
                                                  object is required in the referent
                                                  namespace to allow that namespace's
                                                  owner to accept the reference. See
                                                  the ReferenceGrant documentation
                                                  for details. (Alpha) This field
                                                  requires the CrossNamespaceVolumeDataSource
                                                  feature gate to be enabled.
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          resources:
                                            description: 'resources represents the
                                              minimum resources the volume should
                                              have. If RecoverVolumeExpansionFailure
                                              feature is enabled users are allowed
                                              to specify resource requirements that
                                              are lower than previous value but must
                                              still be higher than capacity recorded
                                              in the status field of the claim. More
                                              info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                            properties:
                                              claims:
                                                description: "Claims lists the names
                                                  of resources, defined in spec.resourceClaims,
                                                  that are used by this container.
                                                  \n This is an alpha field and requires
                                                  enabling the DynamicResourceAllocation
                                                  feature gate. \n This field is immutable.
                                                  It can only be set for containers."
                                                items:
                                                  description: ResourceClaim references
                                                    one entry in PodSpec.ResourceClaims.
                                                  properties:
                                                    name:
                                                      description: Name must match
                                                        the name of one entry in pod.spec.resourceClaims
                                                        of the Pod where this field
                                                        is used. It makes that resource
                                                        available inside a container.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                                type: array
                                                x-kubernetes-list-map-keys:
                                                - name
                                                x-kubernetes-list-type: map
                                              limits:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Limits describes the
                                                  maximum amount of compute resources
                                                  allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                              requests:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Requests describes the
                                                  minimum amount of compute resources
                                                  required. If Requests is omitted
                                                  for a container, it defaults to
                                                  Limits if that is explicitly specified,
                                                  otherwise to an implementation-defined
                                                  value. Requests cannot exceed Limits.
                                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                            type: object
                                          selector:
                                            description: selector is a label query
                                              over volumes to consider for binding.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          storageClassName:
                                            description: 'storageClassName is the
                                              name of the StorageClass required by
                                              the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                            type: string
                                          volumeMode:
                                            description: volumeMode defines what type
                                              of volume is required by the claim.
                                              Value of Filesystem is implied when
                                              not included in claim spec.
                                            type: string
                                          volumeName:
                                            description: volumeName is the binding
                                              reference to the PersistentVolume backing
                                              this claim.
                                            type: string
                                        type: object
                                      status:
                                        description: 'status represents the current
                                          information/status of a persistent volume
                                          claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              actual access modes the volume backing
                                              the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          allocatedResources:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: allocatedResources is the
                                              storage resource within AllocatedResources
                                              tracks the capacity allocated to a PVC.
                                              It may be larger than the actual capacity
                                              when a volume expansion operation is
                                              requested. For storage quota, the larger
                                              value from allocatedResources and PVC.spec.resources
                                              is used. If allocatedResources is not
                                              set, PVC.spec.resources alone is used
                                              for quota calculation. If a volume expansion
                                              capacity request is lowered, allocatedResources
                                              is only lowered if there are no expansion
                                              operations in progress and if the actual
                                              volume capacity is equal or lower than
                                              the requested capacity. This is an alpha
                                              field and requires enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: object
                                          capacity:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: capacity represents the actual
                                              resources of the underlying volume.
                                            type: object
                                          conditions:
                                            description: conditions is the current
                                              Condition of persistent volume claim.
                                              If underlying persistent volume is being
                                              resized then the Condition will be set
                                              to 'ResizeStarted'.
                                            items:
                                              description: PersistentVolumeClaimCondition
                                                contains details about state of pvc
                                              properties:
                                                lastProbeTime:
                                                  description: lastProbeTime is the
                                                    time we probed the condition.
                                                  format: date-time
                                                  type: string
                                                lastTransitionTime:
                                                  description: lastTransitionTime
                                                    is the time the condition transitioned
                                                    from one status to another.
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: message is the human-readable
                                                    message indicating details about
                                                    last transition.
                                                  type: string
                                                reason:
                                                  description: reason is a unique,
                                                    this should be a short, machine
                                                    understandable string that gives
                                                    the reason for condition's last
                                                    transition. If it reports "ResizeStarted"
                                                    that means the underlying persistent
                                                    volume is being resized.
                                                  type: string
                                                status:
                                                  type: string
                                                type:
                                                  description: PersistentVolumeClaimConditionType
                                                    is a valid value of PersistentVolumeClaimCondition.Type
                                                  type: string
                                              required:
                                              - status
                                              - type
                                              type: object
                                            type: array
                                          phase:
                                            description: phase represents the current
                                              phase of PersistentVolumeClaim.
                                            type: string
                                          resizeStatus:
                                            description: resizeStatus stores status
                                              of resize operation. ResizeStatus is
                                              not set by default but when expansion
                                              is complete resizeStatus is set to empty
                                              string by resize controller or kubelet.
                                              This is an alpha field and requires
                                              enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: string
                                        type: object
                                    type: object
                                  waitTimeout:
                                    default: '90'
                                    description: "'wait_timeout'          : Timeout
                                      in seconds for reading from or writing to this\
                                      \                             storage provider."
                                    type: string
                                type: object
                              coldStorageDisk:
                                description: ColdStorageDisk
                                properties:
                                  basePath:
                                    description: "'base_path'             : A base
                                      path based on the provider type for this tier."
                                    type: string
                                  connectionTimeout:
                                    default: '30'
                                    description: "'connection_timeout'    : Timeout
                                      in seconds for connecting to this storage provider."
                                    type: string
                                  highWatermark:
                                    default: 90
                                    description: "* 'high_watermark' : Percentage
                                      used eviction threshold.  Once             \
                                      \         usage exceeds this value, evictions
                                      from this tier will be                     \
                                      \ scheduled in the background and continue until
                                      the                      'low_watermark' percentage
                                      usage is reached.  Default is              \
                                      \        \"90\", signifying a 90% memory usage
                                      threshold."
                                    type: integer
                                  limit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 1Gi
                                    description: "* 'limit'          : The maximum
                                      (bytes) per rank that can be allocated     \
                                      \                 across all resource groups."
                                    pattern: 
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  lowWatermark:
                                    default: 80
                                    description: "* 'low_watermark'  : Percentage
                                      used recovery threshold.  Once             \
                                      \         usage exceeds the 'high_watermark',
                                      evictions will                      continue
                                      until usage falls below this recovery      \
                                      \                threshold. Default is \"80\"\
                                      , signifying an 80% usage                  \
                                      \    threshold."
                                    type: integer
                                  name:
                                    type: string
                                  path:
                                    default: default
                                    description: A base directory to use as a space
                                      for this tier.
                                    type: string
                                  provisioner:
                                    default: docker.io/hostpath
                                    type: string
                                  useHttps:
                                    default: true
                                    type: boolean
                                  useManagedCredentials:
                                    default: true
                                    type: boolean
                                  volumeClaim:
                                    description: Kubernetes Persistent Volume Claim
                                      for this disk tier.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      metadata:
                                        description: "Standard object's metadata.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                        type: object
                                      spec:
                                        description: 'spec defines the desired characteristics
                                          of a volume requested by a pod author. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              desired access modes the volume should
                                              have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          dataSource:
                                            description: 'dataSource field can be
                                              used to specify either: * An existing
                                              VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                              * An existing PVC (PersistentVolumeClaim)
                                              If the provisioner or an external controller
                                              can support the specified data source,
                                              it will create a new volume based on
                                              the contents of the specified data source.
                                              When the AnyVolumeDataSource feature
                                              gate is enabled, dataSource contents
                                              will be copied to dataSourceRef, and
                                              dataSourceRef contents will be copied
                                              to dataSource when dataSourceRef.namespace
                                              is not specified. If the namespace is
                                              specified, then dataSourceRef will not
                                              be copied to dataSource.'
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          dataSourceRef:
                                            description: "dataSourceRef specifies
                                              the object from which to populate the
                                              volume with data, if a non-empty volume
                                              is desired. This may be any object from
                                              a non-empty API group (non core object)
                                              or a PersistentVolumeClaim object. When
                                              this field is specified, volume binding
                                              will only succeed if the type of the
                                              specified object matches some installed
                                              volume populator or dynamic provisioner.
                                              This field will replace the functionality
                                              of the dataSource field and as such
                                              if both fields are non-empty, they must
                                              have the same value. For backwards compatibility,
                                              when namespace isn't specified in dataSourceRef,
                                              both fields (dataSource and dataSourceRef)
                                              will be set to the same value automatically
                                              if one of them is empty and the other
                                              is non-empty. When namespace is specified
                                              in dataSourceRef, dataSource isn't set
                                              to the same value and must be empty.
                                              There are three important differences
                                              between dataSource and dataSourceRef:
                                              * While dataSource only allows two specific
                                              types of objects, dataSourceRef   allows
                                              any non-core object, as well as PersistentVolumeClaim
                                              objects. * While dataSource ignores
                                              disallowed values (dropping them), dataSourceRef\
                                              \   preserves all values, and generates
                                              an error if a disallowed value is  \
                                              \ specified. * While dataSource only
                                              allows local objects, dataSourceRef
                                              allows objects   in any namespaces.
                                              (Beta) Using this field requires the
                                              AnyVolumeDataSource feature gate to
                                              be enabled. (Alpha) Using the namespace
                                              field of dataSourceRef requires the
                                              CrossNamespaceVolumeDataSource feature
                                              gate to be enabled."
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                              namespace:
                                                description: Namespace is the namespace
                                                  of resource being referenced Note
                                                  that when a namespace is specified,
                                                  a gateway.networking.k8s.io/ReferenceGrant
                                                  object is required in the referent
                                                  namespace to allow that namespace's
                                                  owner to accept the reference. See
                                                  the ReferenceGrant documentation
                                                  for details. (Alpha) This field
                                                  requires the CrossNamespaceVolumeDataSource
                                                  feature gate to be enabled.
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          resources:
                                            description: 'resources represents the
                                              minimum resources the volume should
                                              have. If RecoverVolumeExpansionFailure
                                              feature is enabled users are allowed
                                              to specify resource requirements that
                                              are lower than previous value but must
                                              still be higher than capacity recorded
                                              in the status field of the claim. More
                                              info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                            properties:
                                              claims:
                                                description: "Claims lists the names
                                                  of resources, defined in spec.resourceClaims,
                                                  that are used by this container.
                                                  \n This is an alpha field and requires
                                                  enabling the DynamicResourceAllocation
                                                  feature gate. \n This field is immutable.
                                                  It can only be set for containers."
                                                items:
                                                  description: ResourceClaim references
                                                    one entry in PodSpec.ResourceClaims.
                                                  properties:
                                                    name:
                                                      description: Name must match
                                                        the name of one entry in pod.spec.resourceClaims
                                                        of the Pod where this field
                                                        is used. It makes that resource
                                                        available inside a container.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                                type: array
                                                x-kubernetes-list-map-keys:
                                                - name
                                                x-kubernetes-list-type: map
                                              limits:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Limits describes the
                                                  maximum amount of compute resources
                                                  allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                              requests:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Requests describes the
                                                  minimum amount of compute resources
                                                  required. If Requests is omitted
                                                  for a container, it defaults to
                                                  Limits if that is explicitly specified,
                                                  otherwise to an implementation-defined
                                                  value. Requests cannot exceed Limits.
                                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                            type: object
                                          selector:
                                            description: selector is a label query
                                              over volumes to consider for binding.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          storageClassName:
                                            description: 'storageClassName is the
                                              name of the StorageClass required by
                                              the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                            type: string
                                          volumeMode:
                                            description: volumeMode defines what type
                                              of volume is required by the claim.
                                              Value of Filesystem is implied when
                                              not included in claim spec.
                                            type: string
                                          volumeName:
                                            description: volumeName is the binding
                                              reference to the PersistentVolume backing
                                              this claim.
                                            type: string
                                        type: object
                                      status:
                                        description: 'status represents the current
                                          information/status of a persistent volume
                                          claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              actual access modes the volume backing
                                              the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          allocatedResources:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: allocatedResources is the
                                              storage resource within AllocatedResources
                                              tracks the capacity allocated to a PVC.
                                              It may be larger than the actual capacity
                                              when a volume expansion operation is
                                              requested. For storage quota, the larger
                                              value from allocatedResources and PVC.spec.resources
                                              is used. If allocatedResources is not
                                              set, PVC.spec.resources alone is used
                                              for quota calculation. If a volume expansion
                                              capacity request is lowered, allocatedResources
                                              is only lowered if there are no expansion
                                              operations in progress and if the actual
                                              volume capacity is equal or lower than
                                              the requested capacity. This is an alpha
                                              field and requires enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: object
                                          capacity:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: capacity represents the actual
                                              resources of the underlying volume.
                                            type: object
                                          conditions:
                                            description: conditions is the current
                                              Condition of persistent volume claim.
                                              If underlying persistent volume is being
                                              resized then the Condition will be set
                                              to 'ResizeStarted'.
                                            items:
                                              description: PersistentVolumeClaimCondition
                                                contains details about state of pvc
                                              properties:
                                                lastProbeTime:
                                                  description: lastProbeTime is the
                                                    time we probed the condition.
                                                  format: date-time
                                                  type: string
                                                lastTransitionTime:
                                                  description: lastTransitionTime
                                                    is the time the condition transitioned
                                                    from one status to another.
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: message is the human-readable
                                                    message indicating details about
                                                    last transition.
                                                  type: string
                                                reason:
                                                  description: reason is a unique,
                                                    this should be a short, machine
                                                    understandable string that gives
                                                    the reason for condition's last
                                                    transition. If it reports "ResizeStarted"
                                                    that means the underlying persistent
                                                    volume is being resized.
                                                  type: string
                                                status:
                                                  type: string
                                                type:
                                                  description: PersistentVolumeClaimConditionType
                                                    is a valid value of PersistentVolumeClaimCondition.Type
                                                  type: string
                                              required:
                                              - status
                                              - type
                                              type: object
                                            type: array
                                          phase:
                                            description: phase represents the current
                                              phase of PersistentVolumeClaim.
                                            type: string
                                          resizeStatus:
                                            description: resizeStatus stores status
                                              of resize operation. ResizeStatus is
                                              not set by default but when expansion
                                              is complete resizeStatus is set to empty
                                              string by resize controller or kubelet.
                                              This is an alpha field and requires
                                              enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: string
                                        type: object
                                    type: object
                                  waitTimeout:
                                    default: '90'
                                    description: "'wait_timeout'          : Timeout
                                      in seconds for reading from or writing to this\
                                      \                             storage provider."
                                    type: string
                                type: object
                              coldStorageGCS:
                                description: "ColdStorageGCS - Google Cloud Storage-specific
                                  *parameter* names: \n * BucketName =        'gcs_bucket_name'
                                  * ProjectID -         'gcs_project_id'         \
                                  \           (optional) * AccountID -         'gcs_service_account_id'\
                                  \            (optional) * AccountPrivateKey - 'gcs_service_account_private_key'\
                                  \   (optional) * AccountKeys -       'gcs_service_account_keys'\
                                  \          (optional) \n NOTE: If the 'gcs_service_account_id',
                                  'gcs_service_account_private_key' and/or 'gcs_service_account_keys'
                                  values are not specified, the Google Clould Client
                                  Libraries will attempt to find and use service account
                                  credentials from the GOOGLE_APPLICATION_CREDENTIALS
                                  environment variable."
                                properties:
                                  accountID:
                                    type: string
                                  accountKeys:
                                    type: string
                                  accountPrivateKey:
                                    type: string
                                  basePath:
                                    description: "'base_path'             : A base
                                      path based on the provider type for this tier."
                                    type: string
                                  bucketName:
                                    type: string
                                  connectionTimeout:
                                    default: '30'
                                    description: "'connection_timeout'    : Timeout
                                      in seconds for connecting to this storage provider."
                                    type: string
                                  highWatermark:
                                    default: 90
                                    description: "* 'high_watermark' : Percentage
                                      used eviction threshold.  Once             \
                                      \         usage exceeds this value, evictions
                                      from this tier will be                     \
                                      \ scheduled in the background and continue until
                                      the                      'low_watermark' percentage
                                      usage is reached.  Default is              \
                                      \        \"90\", signifying a 90% memory usage
                                      threshold."
                                    type: integer
                                  limit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 1Gi
                                    description: "* 'limit'          : The maximum
                                      (bytes) per rank that can be allocated     \
                                      \                 across all resource groups."
                                    pattern: 
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  lowWatermark:
                                    default: 80
                                    description: "* 'low_watermark'  : Percentage
                                      used recovery threshold.  Once             \
                                      \         usage exceeds the 'high_watermark',
                                      evictions will                      continue
                                      until usage falls below this recovery      \
                                      \                threshold. Default is \"80\"\
                                      , signifying an 80% usage                  \
                                      \    threshold."
                                    type: integer
                                  name:
                                    type: string
                                  path:
                                    default: default
                                    description: A base directory to use as a space
                                      for this tier.
                                    type: string
                                  projectID:
                                    type: string
                                  provisioner:
                                    default: docker.io/hostpath
                                    type: string
                                  useHttps:
                                    default: true
                                    type: boolean
                                  useManagedCredentials:
                                    default: true
                                    type: boolean
                                  volumeClaim:
                                    description: Kubernetes Persistent Volume Claim
                                      for this disk tier.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      metadata:
                                        description: "Standard object's metadata.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                        type: object
                                      spec:
                                        description: 'spec defines the desired characteristics
                                          of a volume requested by a pod author. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              desired access modes the volume should
                                              have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          dataSource:
                                            description: 'dataSource field can be
                                              used to specify either: * An existing
                                              VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                              * An existing PVC (PersistentVolumeClaim)
                                              If the provisioner or an external controller
                                              can support the specified data source,
                                              it will create a new volume based on
                                              the contents of the specified data source.
                                              When the AnyVolumeDataSource feature
                                              gate is enabled, dataSource contents
                                              will be copied to dataSourceRef, and
                                              dataSourceRef contents will be copied
                                              to dataSource when dataSourceRef.namespace
                                              is not specified. If the namespace is
                                              specified, then dataSourceRef will not
                                              be copied to dataSource.'
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          dataSourceRef:
                                            description: "dataSourceRef specifies
                                              the object from which to populate the
                                              volume with data, if a non-empty volume
                                              is desired. This may be any object from
                                              a non-empty API group (non core object)
                                              or a PersistentVolumeClaim object. When
                                              this field is specified, volume binding
                                              will only succeed if the type of the
                                              specified object matches some installed
                                              volume populator or dynamic provisioner.
                                              This field will replace the functionality
                                              of the dataSource field and as such
                                              if both fields are non-empty, they must
                                              have the same value. For backwards compatibility,
                                              when namespace isn't specified in dataSourceRef,
                                              both fields (dataSource and dataSourceRef)
                                              will be set to the same value automatically
                                              if one of them is empty and the other
                                              is non-empty. When namespace is specified
                                              in dataSourceRef, dataSource isn't set
                                              to the same value and must be empty.
                                              There are three important differences
                                              between dataSource and dataSourceRef:
                                              * While dataSource only allows two specific
                                              types of objects, dataSourceRef   allows
                                              any non-core object, as well as PersistentVolumeClaim
                                              objects. * While dataSource ignores
                                              disallowed values (dropping them), dataSourceRef\
                                              \   preserves all values, and generates
                                              an error if a disallowed value is  \
                                              \ specified. * While dataSource only
                                              allows local objects, dataSourceRef
                                              allows objects   in any namespaces.
                                              (Beta) Using this field requires the
                                              AnyVolumeDataSource feature gate to
                                              be enabled. (Alpha) Using the namespace
                                              field of dataSourceRef requires the
                                              CrossNamespaceVolumeDataSource feature
                                              gate to be enabled."
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                              namespace:
                                                description: Namespace is the namespace
                                                  of resource being referenced Note
                                                  that when a namespace is specified,
                                                  a gateway.networking.k8s.io/ReferenceGrant
                                                  object is required in the referent
                                                  namespace to allow that namespace's
                                                  owner to accept the reference. See
                                                  the ReferenceGrant documentation
                                                  for details. (Alpha) This field
                                                  requires the CrossNamespaceVolumeDataSource
                                                  feature gate to be enabled.
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          resources:
                                            description: 'resources represents the
                                              minimum resources the volume should
                                              have. If RecoverVolumeExpansionFailure
                                              feature is enabled users are allowed
                                              to specify resource requirements that
                                              are lower than previous value but must
                                              still be higher than capacity recorded
                                              in the status field of the claim. More
                                              info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                            properties:
                                              claims:
                                                description: "Claims lists the names
                                                  of resources, defined in spec.resourceClaims,
                                                  that are used by this container.
                                                  \n This is an alpha field and requires
                                                  enabling the DynamicResourceAllocation
                                                  feature gate. \n This field is immutable.
                                                  It can only be set for containers."
                                                items:
                                                  description: ResourceClaim references
                                                    one entry in PodSpec.ResourceClaims.
                                                  properties:
                                                    name:
                                                      description: Name must match
                                                        the name of one entry in pod.spec.resourceClaims
                                                        of the Pod where this field
                                                        is used. It makes that resource
                                                        available inside a container.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                                type: array
                                                x-kubernetes-list-map-keys:
                                                - name
                                                x-kubernetes-list-type: map
                                              limits:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Limits describes the
                                                  maximum amount of compute resources
                                                  allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                              requests:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Requests describes the
                                                  minimum amount of compute resources
                                                  required. If Requests is omitted
                                                  for a container, it defaults to
                                                  Limits if that is explicitly specified,
                                                  otherwise to an implementation-defined
                                                  value. Requests cannot exceed Limits.
                                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                            type: object
                                          selector:
                                            description: selector is a label query
                                              over volumes to consider for binding.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          storageClassName:
                                            description: 'storageClassName is the
                                              name of the StorageClass required by
                                              the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                            type: string
                                          volumeMode:
                                            description: volumeMode defines what type
                                              of volume is required by the claim.
                                              Value of Filesystem is implied when
                                              not included in claim spec.
                                            type: string
                                          volumeName:
                                            description: volumeName is the binding
                                              reference to the PersistentVolume backing
                                              this claim.
                                            type: string
                                        type: object
                                      status:
                                        description: 'status represents the current
                                          information/status of a persistent volume
                                          claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              actual access modes the volume backing
                                              the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          allocatedResources:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: allocatedResources is the
                                              storage resource within AllocatedResources
                                              tracks the capacity allocated to a PVC.
                                              It may be larger than the actual capacity
                                              when a volume expansion operation is
                                              requested. For storage quota, the larger
                                              value from allocatedResources and PVC.spec.resources
                                              is used. If allocatedResources is not
                                              set, PVC.spec.resources alone is used
                                              for quota calculation. If a volume expansion
                                              capacity request is lowered, allocatedResources
                                              is only lowered if there are no expansion
                                              operations in progress and if the actual
                                              volume capacity is equal or lower than
                                              the requested capacity. This is an alpha
                                              field and requires enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: object
                                          capacity:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: capacity represents the actual
                                              resources of the underlying volume.
                                            type: object
                                          conditions:
                                            description: conditions is the current
                                              Condition of persistent volume claim.
                                              If underlying persistent volume is being
                                              resized then the Condition will be set
                                              to 'ResizeStarted'.
                                            items:
                                              description: PersistentVolumeClaimCondition
                                                contains details about state of pvc
                                              properties:
                                                lastProbeTime:
                                                  description: lastProbeTime is the
                                                    time we probed the condition.
                                                  format: date-time
                                                  type: string
                                                lastTransitionTime:
                                                  description: lastTransitionTime
                                                    is the time the condition transitioned
                                                    from one status to another.
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: message is the human-readable
                                                    message indicating details about
                                                    last transition.
                                                  type: string
                                                reason:
                                                  description: reason is a unique,
                                                    this should be a short, machine
                                                    understandable string that gives
                                                    the reason for condition's last
                                                    transition. If it reports "ResizeStarted"
                                                    that means the underlying persistent
                                                    volume is being resized.
                                                  type: string
                                                status:
                                                  type: string
                                                type:
                                                  description: PersistentVolumeClaimConditionType
                                                    is a valid value of PersistentVolumeClaimCondition.Type
                                                  type: string
                                              required:
                                              - status
                                              - type
                                              type: object
                                            type: array
                                          phase:
                                            description: phase represents the current
                                              phase of PersistentVolumeClaim.
                                            type: string
                                          resizeStatus:
                                            description: resizeStatus stores status
                                              of resize operation. ResizeStatus is
                                              not set by default but when expansion
                                              is complete resizeStatus is set to empty
                                              string by resize controller or kubelet.
                                              This is an alpha field and requires
                                              enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: string
                                        type: object
                                    type: object
                                  waitTimeout:
                                    default: '90'
                                    description: "'wait_timeout'          : Timeout
                                      in seconds for reading from or writing to this\
                                      \                             storage provider."
                                    type: string
                                type: object
                              coldStorageHDFS:
                                description: ColdStorageHDFS
                                properties:
                                  default:
                                    description: ColdStorageDisk
                                    properties:
                                      basePath:
                                        description: "'base_path'             : A
                                          base path based on the provider type for
                                          this tier."
                                        type: string
                                      connectionTimeout:
                                        default: '30'
                                        description: "'connection_timeout'    : Timeout
                                          in seconds for connecting to this storage
                                          provider."
                                        type: string
                                      highWatermark:
                                        default: 90
                                        description: "* 'high_watermark' : Percentage
                                          used eviction threshold.  Once         \
                                          \             usage exceeds this value,
                                          evictions from this tier will be       \
                                          \               scheduled in the background
                                          and continue until the                 \
                                          \     'low_watermark' percentage usage is
                                          reached.  Default is                   \
                                          \   \"90\", signifying a 90% memory usage
                                          threshold."
                                        type: integer
                                      limit:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        default: 1Gi
                                        description: "* 'limit'          : The maximum
                                          (bytes) per rank that can be allocated \
                                          \                     across all resource
                                          groups."
                                        pattern: 
                                          ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      lowWatermark:
                                        default: 80
                                        description: "* 'low_watermark'  : Percentage
                                          used recovery threshold.  Once         \
                                          \             usage exceeds the 'high_watermark',
                                          evictions will                      continue
                                          until usage falls below this recovery  \
                                          \                    threshold. Default
                                          is \"80\", signifying an 80% usage     \
                                          \                 threshold."
                                        type: integer
                                      name:
                                        type: string
                                      path:
                                        default: default
                                        description: A base directory to use as a
                                          space for this tier.
                                        type: string
                                      provisioner:
                                        default: docker.io/hostpath
                                        type: string
                                      useHttps:
                                        default: true
                                        type: boolean
                                      useManagedCredentials:
                                        default: true
                                        type: boolean
                                      volumeClaim:
                                        description: Kubernetes Persistent Volume
                                          Claim for this disk tier.
                                        properties:
                                          apiVersion:
                                            description: 'APIVersion defines the versioned
                                              schema of this representation of an
                                              object. Servers should convert recognized
                                              schemas to the latest internal value,
                                              and may reject unrecognized values.
                                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                            type: string
                                          kind:
                                            description: 'Kind is a string value representing
                                              the REST resource this object represents.
                                              Servers may infer this from the endpoint
                                              the client submits requests to. Cannot
                                              be updated. In CamelCase. More info:
                                              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                            type: string
                                          metadata:
                                            description: "Standard object's metadata.
                                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                            type: object
                                          spec:
                                            description: 'spec defines the desired
                                              characteristics of a volume requested
                                              by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                            properties:
                                              accessModes:
                                                description: 'accessModes contains
                                                  the desired access modes the volume
                                                  should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                items:
                                                  type: string
                                                type: array
                                              dataSource:
                                                description: 'dataSource field can
                                                  be used to specify either: * An
                                                  existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                  * An existing PVC (PersistentVolumeClaim)
                                                  If the provisioner or an external
                                                  controller can support the specified
                                                  data source, it will create a new
                                                  volume based on the contents of
                                                  the specified data source. When
                                                  the AnyVolumeDataSource feature
                                                  gate is enabled, dataSource contents
                                                  will be copied to dataSourceRef,
                                                  and dataSourceRef contents will
                                                  be copied to dataSource when dataSourceRef.namespace
                                                  is not specified. If the namespace
                                                  is specified, then dataSourceRef
                                                  will not be copied to dataSource.'
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              dataSourceRef:
                                                description: "dataSourceRef specifies
                                                  the object from which to populate
                                                  the volume with data, if a non-empty
                                                  volume is desired. This may be any
                                                  object from a non-empty API group
                                                  (non core object) or a PersistentVolumeClaim
                                                  object. When this field is specified,
                                                  volume binding will only succeed
                                                  if the type of the specified object
                                                  matches some installed volume populator
                                                  or dynamic provisioner. This field
                                                  will replace the functionality of
                                                  the dataSource field and as such
                                                  if both fields are non-empty, they
                                                  must have the same value. For backwards
                                                  compatibility, when namespace isn't
                                                  specified in dataSourceRef, both
                                                  fields (dataSource and dataSourceRef)
                                                  will be set to the same value automatically
                                                  if one of them is empty and the
                                                  other is non-empty. When namespace
                                                  is specified in dataSourceRef, dataSource
                                                  isn't set to the same value and
                                                  must be empty. There are three important
                                                  differences between dataSource and
                                                  dataSourceRef: * While dataSource
                                                  only allows two specific types of
                                                  objects, dataSourceRef   allows
                                                  any non-core object, as well as
                                                  PersistentVolumeClaim objects. *
                                                  While dataSource ignores disallowed
                                                  values (dropping them), dataSourceRef\
                                                  \   preserves all values, and generates
                                                  an error if a disallowed value is\
                                                  \   specified. * While dataSource
                                                  only allows local objects, dataSourceRef
                                                  allows objects   in any namespaces.
                                                  (Beta) Using this field requires
                                                  the AnyVolumeDataSource feature
                                                  gate to be enabled. (Alpha) Using
                                                  the namespace field of dataSourceRef
                                                  requires the CrossNamespaceVolumeDataSource
                                                  feature gate to be enabled."
                                                properties:
                                                  apiGroup:
                                                    description: APIGroup is the group
                                                      for the resource being referenced.
                                                      If APIGroup is not specified,
                                                      the specified Kind must be in
                                                      the core API group. For any
                                                      other third-party types, APIGroup
                                                      is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type
                                                      of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name
                                                      of resource being referenced
                                                    type: string
                                                  namespace:
                                                    description: Namespace is the
                                                      namespace of resource being
                                                      referenced Note that when a
                                                      namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                                      object is required in the referent
                                                      namespace to allow that namespace's
                                                      owner to accept the reference.
                                                      See the ReferenceGrant documentation
                                                      for details. (Alpha) This field
                                                      requires the CrossNamespaceVolumeDataSource
                                                      feature gate to be enabled.
                                                    type: string
                                                required:
                                                - kind
                                                - name
                                                type: object
                                              resources:
                                                description: 'resources represents
                                                  the minimum resources the volume
                                                  should have. If RecoverVolumeExpansionFailure
                                                  feature is enabled users are allowed
                                                  to specify resource requirements
                                                  that are lower than previous value
                                                  but must still be higher than capacity
                                                  recorded in the status field of
                                                  the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                properties:
                                                  claims:
                                                    description: "Claims lists the
                                                      names of resources, defined
                                                      in spec.resourceClaims, that
                                                      are used by this container.
                                                      \n This is an alpha field and
                                                      requires enabling the DynamicResourceAllocation
                                                      feature gate. \n This field
                                                      is immutable. It can only be
                                                      set for containers."
                                                    items:
                                                      description: ResourceClaim references
                                                        one entry in PodSpec.ResourceClaims.
                                                      properties:
                                                        name:
                                                          description: Name must match
                                                            the name of one entry
                                                            in pod.spec.resourceClaims
                                                            of the Pod where this
                                                            field is used. It makes
                                                            that resource available
                                                            inside a container.
                                                          type: string
                                                      required:
                                                      - name
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-map-keys:
                                                    - name
                                                    x-kubernetes-list-type: map
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: 
                                                        ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      pattern: 
                                                        ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. Requests cannot exceed
                                                      Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                type: object
                                              selector:
                                                description: selector is a label query
                                                  over volumes to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              storageClassName:
                                                description: 'storageClassName is
                                                  the name of the StorageClass required
                                                  by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                type: string
                                              volumeMode:
                                                description: volumeMode defines what
                                                  type of volume is required by the
                                                  claim. Value of Filesystem is implied
                                                  when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: volumeName is the binding
                                                  reference to the PersistentVolume
                                                  backing this claim.
                                                type: string
                                            type: object
                                          status:
                                            description: 'status represents the current
                                              information/status of a persistent volume
                                              claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                            properties:
                                              accessModes:
                                                description: 'accessModes contains
                                                  the actual access modes the volume
                                                  backing the PVC has. More info:
                                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                items:
                                                  type: string
                                                type: array
                                              allocatedResources:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: allocatedResources is
                                                  the storage resource within AllocatedResources
                                                  tracks the capacity allocated to
                                                  a PVC. It may be larger than the
                                                  actual capacity when a volume expansion
                                                  operation is requested. For storage
                                                  quota, the larger value from allocatedResources
                                                  and PVC.spec.resources is used.
                                                  If allocatedResources is not set,
                                                  PVC.spec.resources alone is used
                                                  for quota calculation. If a volume
                                                  expansion capacity request is lowered,
                                                  allocatedResources is only lowered
                                                  if there are no expansion operations
                                                  in progress and if the actual volume
                                                  capacity is equal or lower than
                                                  the requested capacity. This is
                                                  an alpha field and requires enabling
                                                  RecoverVolumeExpansionFailure feature.
                                                type: object
                                              capacity:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: capacity represents the
                                                  actual resources of the underlying
                                                  volume.
                                                type: object
                                              conditions:
                                                description: conditions is the current
                                                  Condition of persistent volume claim.
                                                  If underlying persistent volume
                                                  is being resized then the Condition
                                                  will be set to 'ResizeStarted'.
                                                items:
                                                  description: PersistentVolumeClaimCondition
                                                    contains details about state of
                                                    pvc
                                                  properties:
                                                    lastProbeTime:
                                                      description: lastProbeTime is
                                                        the time we probed the condition.
                                                      format: date-time
                                                      type: string
                                                    lastTransitionTime:
                                                      description: lastTransitionTime
                                                        is the time the condition
                                                        transitioned from one status
                                                        to another.
                                                      format: date-time
                                                      type: string
                                                    message:
                                                      description: message is the
                                                        human-readable message indicating
                                                        details about last transition.
                                                      type: string
                                                    reason:
                                                      description: reason is a unique,
                                                        this should be a short, machine
                                                        understandable string that
                                                        gives the reason for condition's
                                                        last transition. If it reports
                                                        "ResizeStarted" that means
                                                        the underlying persistent
                                                        volume is being resized.
                                                      type: string
                                                    status:
                                                      type: string
                                                    type:
                                                      description: PersistentVolumeClaimConditionType
                                                        is a valid value of PersistentVolumeClaimCondition.Type
                                                      type: string
                                                  required:
                                                  - status
                                                  - type
                                                  type: object
                                                type: array
                                              phase:
                                                description: phase represents the
                                                  current phase of PersistentVolumeClaim.
                                                type: string
                                              resizeStatus:
                                                description: resizeStatus stores status
                                                  of resize operation. ResizeStatus
                                                  is not set by default but when expansion
                                                  is complete resizeStatus is set
                                                  to empty string by resize controller
                                                  or kubelet. This is an alpha field
                                                  and requires enabling RecoverVolumeExpansionFailure
                                                  feature.
                                                type: string
                                            type: object
                                        type: object
                                      waitTimeout:
                                        default: '90'
                                        description: "'wait_timeout'          : Timeout
                                          in seconds for reading from or writing to
                                          this                             storage
                                          provider."
                                        type: string
                                    type: object
                                  kerberosKeytab:
                                    description: "'hdfs_kerberos_keytab'  : The Kerberos
                                      keytab file used to authenticate the \"gpudb\"\
                                      \ Kerberos"
                                    type: string
                                  principal:
                                    description: "'hdfs_principal'        : The effective
                                      principal name to use when connecting to the
                                      hadoop                             cluster."
                                    type: string
                                  uri:
                                    description: "'hdfs_uri'              : The host
                                      IP address & port for the hadoop distributed
                                      file system.                             For
                                      example:  hdfs://localhost:8020"
                                    type: string
                                  useKerberos:
                                    description: "'hdfs_use_kerberos'     : Set to
                                      \"true\" to enable Kerberos authentication to
                                      an HDFS storage                            \
                                      \ server. The credentials of the principal are
                                      in the file specified                      \
                                      \       by the 'hdfs_kerberos_keytab' parameter.
                                      Note that Kerberos's *kinit*               \
                                      \              command will be run when the
                                      database is started."
                                    type: boolean
                                type: object
                              coldStorageS3:
                                description: ColdStorageS3
                                properties:
                                  awsAccessKeyId:
                                    type: string
                                  awsRoleARN:
                                    type: string
                                  awsSecretAccessKey:
                                    type: string
                                  basePath:
                                    description: "'base_path'             : A base
                                      path based on the provider type for this tier."
                                    type: string
                                  bucketName:
                                    type: string
                                  connectionTimeout:
                                    default: '30'
                                    description: "'connection_timeout'    : Timeout
                                      in seconds for connecting to this storage provider."
                                    type: string
                                  encryptionCustomerAlgorithm:
                                    type: string
                                  encryptionCustomerKey:
                                    type: string
                                  encryptionType:
                                    description: EncryptionType - This is optional
                                      and valid values are sse-s3 (Encryption key
                                      is managed by Amazon S3) and sse-kms (Encryption
                                      key is managed by AWS Key Management Service
                                      (kms)).
                                    enum:
                                    - sse-s3
                                    - sse-kms
                                    - sse-c
                                    type: string
                                  endpoint:
                                    description: Endpoint - s3_endpoint
                                    type: string
                                  highWatermark:
                                    default: 90
                                    description: "* 'high_watermark' : Percentage
                                      used eviction threshold.  Once             \
                                      \         usage exceeds this value, evictions
                                      from this tier will be                     \
                                      \ scheduled in the background and continue until
                                      the                      'low_watermark' percentage
                                      usage is reached.  Default is              \
                                      \        \"90\", signifying a 90% memory usage
                                      threshold."
                                    type: integer
                                  kmsKeyID:
                                    description: KMSKeyID - This is optional and must
                                      be specified when encryption type is sse-kms.
                                    type: string
                                  limit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 1Gi
                                    description: "* 'limit'          : The maximum
                                      (bytes) per rank that can be allocated     \
                                      \                 across all resource groups."
                                    pattern: 
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  lowWatermark:
                                    default: 80
                                    description: "* 'low_watermark'  : Percentage
                                      used recovery threshold.  Once             \
                                      \         usage exceeds the 'high_watermark',
                                      evictions will                      continue
                                      until usage falls below this recovery      \
                                      \                threshold. Default is \"80\"\
                                      , signifying an 80% usage                  \
                                      \    threshold."
                                    type: integer
                                  name:
                                    type: string
                                  path:
                                    default: default
                                    description: A base directory to use as a space
                                      for this tier.
                                    type: string
                                  provisioner:
                                    default: docker.io/hostpath
                                    type: string
                                  region:
                                    type: string
                                  useHttps:
                                    default: true
                                    type: boolean
                                  useManagedCredentials:
                                    default: true
                                    type: boolean
                                  useVirtualAddressing:
                                    default: true
                                    description: "UseVirtualAddressing - 's3_use_virtual_addressing'\
                                      \  :  If true (default), S3 endpoints will be
                                      constructed using the 'virtual' style which\
                                      \  includes the bucket name as part of the hostname.
                                      Set to false to use the 'path'  style which
                                      treats the bucket name as if it is a path in
                                      the URI."
                                    type: boolean
                                  volumeClaim:
                                    description: Kubernetes Persistent Volume Claim
                                      for this disk tier.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      metadata:
                                        description: "Standard object's metadata.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                        type: object
                                      spec:
                                        description: 'spec defines the desired characteristics
                                          of a volume requested by a pod author. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              desired access modes the volume should
                                              have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          dataSource:
                                            description: 'dataSource field can be
                                              used to specify either: * An existing
                                              VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                              * An existing PVC (PersistentVolumeClaim)
                                              If the provisioner or an external controller
                                              can support the specified data source,
                                              it will create a new volume based on
                                              the contents of the specified data source.
                                              When the AnyVolumeDataSource feature
                                              gate is enabled, dataSource contents
                                              will be copied to dataSourceRef, and
                                              dataSourceRef contents will be copied
                                              to dataSource when dataSourceRef.namespace
                                              is not specified. If the namespace is
                                              specified, then dataSourceRef will not
                                              be copied to dataSource.'
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          dataSourceRef:
                                            description: "dataSourceRef specifies
                                              the object from which to populate the
                                              volume with data, if a non-empty volume
                                              is desired. This may be any object from
                                              a non-empty API group (non core object)
                                              or a PersistentVolumeClaim object. When
                                              this field is specified, volume binding
                                              will only succeed if the type of the
                                              specified object matches some installed
                                              volume populator or dynamic provisioner.
                                              This field will replace the functionality
                                              of the dataSource field and as such
                                              if both fields are non-empty, they must
                                              have the same value. For backwards compatibility,
                                              when namespace isn't specified in dataSourceRef,
                                              both fields (dataSource and dataSourceRef)
                                              will be set to the same value automatically
                                              if one of them is empty and the other
                                              is non-empty. When namespace is specified
                                              in dataSourceRef, dataSource isn't set
                                              to the same value and must be empty.
                                              There are three important differences
                                              between dataSource and dataSourceRef:
                                              * While dataSource only allows two specific
                                              types of objects, dataSourceRef   allows
                                              any non-core object, as well as PersistentVolumeClaim
                                              objects. * While dataSource ignores
                                              disallowed values (dropping them), dataSourceRef\
                                              \   preserves all values, and generates
                                              an error if a disallowed value is  \
                                              \ specified. * While dataSource only
                                              allows local objects, dataSourceRef
                                              allows objects   in any namespaces.
                                              (Beta) Using this field requires the
                                              AnyVolumeDataSource feature gate to
                                              be enabled. (Alpha) Using the namespace
                                              field of dataSourceRef requires the
                                              CrossNamespaceVolumeDataSource feature
                                              gate to be enabled."
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                              namespace:
                                                description: Namespace is the namespace
                                                  of resource being referenced Note
                                                  that when a namespace is specified,
                                                  a gateway.networking.k8s.io/ReferenceGrant
                                                  object is required in the referent
                                                  namespace to allow that namespace's
                                                  owner to accept the reference. See
                                                  the ReferenceGrant documentation
                                                  for details. (Alpha) This field
                                                  requires the CrossNamespaceVolumeDataSource
                                                  feature gate to be enabled.
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          resources:
                                            description: 'resources represents the
                                              minimum resources the volume should
                                              have. If RecoverVolumeExpansionFailure
                                              feature is enabled users are allowed
                                              to specify resource requirements that
                                              are lower than previous value but must
                                              still be higher than capacity recorded
                                              in the status field of the claim. More
                                              info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                            properties:
                                              claims:
                                                description: "Claims lists the names
                                                  of resources, defined in spec.resourceClaims,
                                                  that are used by this container.
                                                  \n This is an alpha field and requires
                                                  enabling the DynamicResourceAllocation
                                                  feature gate. \n This field is immutable.
                                                  It can only be set for containers."
                                                items:
                                                  description: ResourceClaim references
                                                    one entry in PodSpec.ResourceClaims.
                                                  properties:
                                                    name:
                                                      description: Name must match
                                                        the name of one entry in pod.spec.resourceClaims
                                                        of the Pod where this field
                                                        is used. It makes that resource
                                                        available inside a container.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                                type: array
                                                x-kubernetes-list-map-keys:
                                                - name
                                                x-kubernetes-list-type: map
                                              limits:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Limits describes the
                                                  maximum amount of compute resources
                                                  allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                              requests:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Requests describes the
                                                  minimum amount of compute resources
                                                  required. If Requests is omitted
                                                  for a container, it defaults to
                                                  Limits if that is explicitly specified,
                                                  otherwise to an implementation-defined
                                                  value. Requests cannot exceed Limits.
                                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                            type: object
                                          selector:
                                            description: selector is a label query
                                              over volumes to consider for binding.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          storageClassName:
                                            description: 'storageClassName is the
                                              name of the StorageClass required by
                                              the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                            type: string
                                          volumeMode:
                                            description: volumeMode defines what type
                                              of volume is required by the claim.
                                              Value of Filesystem is implied when
                                              not included in claim spec.
                                            type: string
                                          volumeName:
                                            description: volumeName is the binding
                                              reference to the PersistentVolume backing
                                              this claim.
                                            type: string
                                        type: object
                                      status:
                                        description: 'status represents the current
                                          information/status of a persistent volume
                                          claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              actual access modes the volume backing
                                              the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          allocatedResources:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: allocatedResources is the
                                              storage resource within AllocatedResources
                                              tracks the capacity allocated to a PVC.
                                              It may be larger than the actual capacity
                                              when a volume expansion operation is
                                              requested. For storage quota, the larger
                                              value from allocatedResources and PVC.spec.resources
                                              is used. If allocatedResources is not
                                              set, PVC.spec.resources alone is used
                                              for quota calculation. If a volume expansion
                                              capacity request is lowered, allocatedResources
                                              is only lowered if there are no expansion
                                              operations in progress and if the actual
                                              volume capacity is equal or lower than
                                              the requested capacity. This is an alpha
                                              field and requires enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: object
                                          capacity:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: capacity represents the actual
                                              resources of the underlying volume.
                                            type: object
                                          conditions:
                                            description: conditions is the current
                                              Condition of persistent volume claim.
                                              If underlying persistent volume is being
                                              resized then the Condition will be set
                                              to 'ResizeStarted'.
                                            items:
                                              description: PersistentVolumeClaimCondition
                                                contains details about state of pvc
                                              properties:
                                                lastProbeTime:
                                                  description: lastProbeTime is the
                                                    time we probed the condition.
                                                  format: date-time
                                                  type: string
                                                lastTransitionTime:
                                                  description: lastTransitionTime
                                                    is the time the condition transitioned
                                                    from one status to another.
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: message is the human-readable
                                                    message indicating details about
                                                    last transition.
                                                  type: string
                                                reason:
                                                  description: reason is a unique,
                                                    this should be a short, machine
                                                    understandable string that gives
                                                    the reason for condition's last
                                                    transition. If it reports "ResizeStarted"
                                                    that means the underlying persistent
                                                    volume is being resized.
                                                  type: string
                                                status:
                                                  type: string
                                                type:
                                                  description: PersistentVolumeClaimConditionType
                                                    is a valid value of PersistentVolumeClaimCondition.Type
                                                  type: string
                                              required:
                                              - status
                                              - type
                                              type: object
                                            type: array
                                          phase:
                                            description: phase represents the current
                                              phase of PersistentVolumeClaim.
                                            type: string
                                          resizeStatus:
                                            description: resizeStatus stores status
                                              of resize operation. ResizeStatus is
                                              not set by default but when expansion
                                              is complete resizeStatus is set to empty
                                              string by resize controller or kubelet.
                                              This is an alpha field and requires
                                              enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: string
                                        type: object
                                    type: object
                                  waitTimeout:
                                    default: '90'
                                    description: "'wait_timeout'          : Timeout
                                      in seconds for reading from or writing to this\
                                      \                             storage provider."
                                    type: string
                                type: object
                              coldStorageType:
                                default: none
                                description: "ColdStorageType The storage provider
                                  type. Currently, supports \"none\", \"disk\" \n
                                  \t(local/network storage), \"hdfs\" (Hadoop distributed
                                  filesystem), \t\"s3\" (Amazon S3 bucket), \"azure_blob\"\
                                  \ (Microsoft Azure Blob Storage) and \"gcs\" (Google
                                  GCS Bucket)."
                                enum:
                                - none
                                - disk
                                - hdfs
                                - s3
                                - azure_blob
                                - gcs
                                type: string
                              name:
                                type: string
                            required:
                            - coldStorageType
                            type: object
                          diskCacheTier:
                            description: The DiskCacheTier are used as temporary swap
                              space for data that doesn't fit in RAM or VRAM. The
                              disk should be as fast or faster than the Persist Tier
                              storage since this tier is used as an intermediary cache
                              between the RAM and Persist Tiers.
                            properties:
                              default:
                                description: DiskTierStorageLimit
                                properties:
                                  highWatermark:
                                    default: 90
                                    description: "* 'high_watermark' : Percentage
                                      used eviction threshold.  Once             \
                                      \         usage exceeds this value, evictions
                                      from this tier will be                     \
                                      \ scheduled in the background and continue until
                                      the                      'low_watermark' percentage
                                      usage is reached.  Default is              \
                                      \        \"90\", signifying a 90% memory usage
                                      threshold."
                                    type: integer
                                  limit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 1Gi
                                    description: "* 'limit'          : The maximum
                                      (bytes) per rank that can be allocated     \
                                      \                 across all resource groups."
                                    pattern: 
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  lowWatermark:
                                    default: 80
                                    description: "* 'low_watermark'  : Percentage
                                      used recovery threshold.  Once             \
                                      \         usage exceeds the 'high_watermark',
                                      evictions will                      continue
                                      until usage falls below this recovery      \
                                      \                threshold. Default is \"80\"\
                                      , signifying an 80% usage                  \
                                      \    threshold."
                                    type: integer
                                  name:
                                    type: string
                                  path:
                                    default: default
                                    description: A base directory to use as a space
                                      for this tier.
                                    type: string
                                  provisioner:
                                    default: docker.io/hostpath
                                    type: string
                                  volumeClaim:
                                    description: Kubernetes Persistent Volume Claim
                                      for this disk tier.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      metadata:
                                        description: "Standard object's metadata.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                        type: object
                                      spec:
                                        description: 'spec defines the desired characteristics
                                          of a volume requested by a pod author. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              desired access modes the volume should
                                              have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          dataSource:
                                            description: 'dataSource field can be
                                              used to specify either: * An existing
                                              VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                              * An existing PVC (PersistentVolumeClaim)
                                              If the provisioner or an external controller
                                              can support the specified data source,
                                              it will create a new volume based on
                                              the contents of the specified data source.
                                              When the AnyVolumeDataSource feature
                                              gate is enabled, dataSource contents
                                              will be copied to dataSourceRef, and
                                              dataSourceRef contents will be copied
                                              to dataSource when dataSourceRef.namespace
                                              is not specified. If the namespace is
                                              specified, then dataSourceRef will not
                                              be copied to dataSource.'
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          dataSourceRef:
                                            description: "dataSourceRef specifies
                                              the object from which to populate the
                                              volume with data, if a non-empty volume
                                              is desired. This may be any object from
                                              a non-empty API group (non core object)
                                              or a PersistentVolumeClaim object. When
                                              this field is specified, volume binding
                                              will only succeed if the type of the
                                              specified object matches some installed
                                              volume populator or dynamic provisioner.
                                              This field will replace the functionality
                                              of the dataSource field and as such
                                              if both fields are non-empty, they must
                                              have the same value. For backwards compatibility,
                                              when namespace isn't specified in dataSourceRef,
                                              both fields (dataSource and dataSourceRef)
                                              will be set to the same value automatically
                                              if one of them is empty and the other
                                              is non-empty. When namespace is specified
                                              in dataSourceRef, dataSource isn't set
                                              to the same value and must be empty.
                                              There are three important differences
                                              between dataSource and dataSourceRef:
                                              * While dataSource only allows two specific
                                              types of objects, dataSourceRef   allows
                                              any non-core object, as well as PersistentVolumeClaim
                                              objects. * While dataSource ignores
                                              disallowed values (dropping them), dataSourceRef\
                                              \   preserves all values, and generates
                                              an error if a disallowed value is  \
                                              \ specified. * While dataSource only
                                              allows local objects, dataSourceRef
                                              allows objects   in any namespaces.
                                              (Beta) Using this field requires the
                                              AnyVolumeDataSource feature gate to
                                              be enabled. (Alpha) Using the namespace
                                              field of dataSourceRef requires the
                                              CrossNamespaceVolumeDataSource feature
                                              gate to be enabled."
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                              namespace:
                                                description: Namespace is the namespace
                                                  of resource being referenced Note
                                                  that when a namespace is specified,
                                                  a gateway.networking.k8s.io/ReferenceGrant
                                                  object is required in the referent
                                                  namespace to allow that namespace's
                                                  owner to accept the reference. See
                                                  the ReferenceGrant documentation
                                                  for details. (Alpha) This field
                                                  requires the CrossNamespaceVolumeDataSource
                                                  feature gate to be enabled.
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          resources:
                                            description: 'resources represents the
                                              minimum resources the volume should
                                              have. If RecoverVolumeExpansionFailure
                                              feature is enabled users are allowed
                                              to specify resource requirements that
                                              are lower than previous value but must
                                              still be higher than capacity recorded
                                              in the status field of the claim. More
                                              info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                            properties:
                                              claims:
                                                description: "Claims lists the names
                                                  of resources, defined in spec.resourceClaims,
                                                  that are used by this container.
                                                  \n This is an alpha field and requires
                                                  enabling the DynamicResourceAllocation
                                                  feature gate. \n This field is immutable.
                                                  It can only be set for containers."
                                                items:
                                                  description: ResourceClaim references
                                                    one entry in PodSpec.ResourceClaims.
                                                  properties:
                                                    name:
                                                      description: Name must match
                                                        the name of one entry in pod.spec.resourceClaims
                                                        of the Pod where this field
                                                        is used. It makes that resource
                                                        available inside a container.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                                type: array
                                                x-kubernetes-list-map-keys:
                                                - name
                                                x-kubernetes-list-type: map
                                              limits:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Limits describes the
                                                  maximum amount of compute resources
                                                  allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                              requests:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Requests describes the
                                                  minimum amount of compute resources
                                                  required. If Requests is omitted
                                                  for a container, it defaults to
                                                  Limits if that is explicitly specified,
                                                  otherwise to an implementation-defined
                                                  value. Requests cannot exceed Limits.
                                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                            type: object
                                          selector:
                                            description: selector is a label query
                                              over volumes to consider for binding.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          storageClassName:
                                            description: 'storageClassName is the
                                              name of the StorageClass required by
                                              the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                            type: string
                                          volumeMode:
                                            description: volumeMode defines what type
                                              of volume is required by the claim.
                                              Value of Filesystem is implied when
                                              not included in claim spec.
                                            type: string
                                          volumeName:
                                            description: volumeName is the binding
                                              reference to the PersistentVolume backing
                                              this claim.
                                            type: string
                                        type: object
                                      status:
                                        description: 'status represents the current
                                          information/status of a persistent volume
                                          claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              actual access modes the volume backing
                                              the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          allocatedResources:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: allocatedResources is the
                                              storage resource within AllocatedResources
                                              tracks the capacity allocated to a PVC.
                                              It may be larger than the actual capacity
                                              when a volume expansion operation is
                                              requested. For storage quota, the larger
                                              value from allocatedResources and PVC.spec.resources
                                              is used. If allocatedResources is not
                                              set, PVC.spec.resources alone is used
                                              for quota calculation. If a volume expansion
                                              capacity request is lowered, allocatedResources
                                              is only lowered if there are no expansion
                                              operations in progress and if the actual
                                              volume capacity is equal or lower than
                                              the requested capacity. This is an alpha
                                              field and requires enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: object
                                          capacity:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: capacity represents the actual
                                              resources of the underlying volume.
                                            type: object
                                          conditions:
                                            description: conditions is the current
                                              Condition of persistent volume claim.
                                              If underlying persistent volume is being
                                              resized then the Condition will be set
                                              to 'ResizeStarted'.
                                            items:
                                              description: PersistentVolumeClaimCondition
                                                contains details about state of pvc
                                              properties:
                                                lastProbeTime:
                                                  description: lastProbeTime is the
                                                    time we probed the condition.
                                                  format: date-time
                                                  type: string
                                                lastTransitionTime:
                                                  description: lastTransitionTime
                                                    is the time the condition transitioned
                                                    from one status to another.
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: message is the human-readable
                                                    message indicating details about
                                                    last transition.
                                                  type: string
                                                reason:
                                                  description: reason is a unique,
                                                    this should be a short, machine
                                                    understandable string that gives
                                                    the reason for condition's last
                                                    transition. If it reports "ResizeStarted"
                                                    that means the underlying persistent
                                                    volume is being resized.
                                                  type: string
                                                status:
                                                  type: string
                                                type:
                                                  description: PersistentVolumeClaimConditionType
                                                    is a valid value of PersistentVolumeClaimCondition.Type
                                                  type: string
                                              required:
                                              - status
                                              - type
                                              type: object
                                            type: array
                                          phase:
                                            description: phase represents the current
                                              phase of PersistentVolumeClaim.
                                            type: string
                                          resizeStatus:
                                            description: resizeStatus stores status
                                              of resize operation. ResizeStatus is
                                              not set by default but when expansion
                                              is complete resizeStatus is set to empty
                                              string by resize controller or kubelet.
                                              This is an alpha field and requires
                                              enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              defaultStorePersistentObjects:
                                type: boolean
                              ranks:
                                items:
                                  description: DiskTierStorageLimit
                                  properties:
                                    highWatermark:
                                      default: 90
                                      description: "* 'high_watermark' : Percentage
                                        used eviction threshold.  Once           \
                                        \           usage exceeds this value, evictions
                                        from this tier will be                   \
                                        \   scheduled in the background and continue
                                        until the                      'low_watermark'
                                        percentage usage is reached.  Default is \
                                        \                     \"90\", signifying a
                                        90% memory usage threshold."
                                      type: integer
                                    limit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 1Gi
                                      description: "* 'limit'          : The maximum
                                        (bytes) per rank that can be allocated   \
                                        \                   across all resource groups."
                                      pattern: 
                                        ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    lowWatermark:
                                      default: 80
                                      description: "* 'low_watermark'  : Percentage
                                        used recovery threshold.  Once           \
                                        \           usage exceeds the 'high_watermark',
                                        evictions will                      continue
                                        until usage falls below this recovery    \
                                        \                  threshold. Default is \"\
                                        80\", signifying an 80% usage            \
                                        \          threshold."
                                      type: integer
                                    name:
                                      type: string
                                    path:
                                      default: default
                                      description: A base directory to use as a space
                                        for this tier.
                                      type: string
                                    provisioner:
                                      default: docker.io/hostpath
                                      type: string
                                    volumeClaim:
                                      description: Kubernetes Persistent Volume Claim
                                        for this disk tier.
                                      properties:
                                        apiVersion:
                                          description: 'APIVersion defines the versioned
                                            schema of this representation of an object.
                                            Servers should convert recognized schemas
                                            to the latest internal value, and may
                                            reject unrecognized values. More info:
                                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                          type: string
                                        kind:
                                          description: 'Kind is a string value representing
                                            the REST resource this object represents.
                                            Servers may infer this from the endpoint
                                            the client submits requests to. Cannot
                                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                          type: string
                                        metadata:
                                          description: "Standard object's metadata.
                                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                          type: object
                                        spec:
                                          description: 'spec defines the desired characteristics
                                            of a volume requested by a pod author.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          properties:
                                            accessModes:
                                              description: 'accessModes contains the
                                                desired access modes the volume should
                                                have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                              items:
                                                type: string
                                              type: array
                                            dataSource:
                                              description: 'dataSource field can be
                                                used to specify either: * An existing
                                                VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                * An existing PVC (PersistentVolumeClaim)
                                                If the provisioner or an external
                                                controller can support the specified
                                                data source, it will create a new
                                                volume based on the contents of the
                                                specified data source. When the AnyVolumeDataSource
                                                feature gate is enabled, dataSource
                                                contents will be copied to dataSourceRef,
                                                and dataSourceRef contents will be
                                                copied to dataSource when dataSourceRef.namespace
                                                is not specified. If the namespace
                                                is specified, then dataSourceRef will
                                                not be copied to dataSource.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            dataSourceRef:
                                              description: "dataSourceRef specifies
                                                the object from which to populate
                                                the volume with data, if a non-empty
                                                volume is desired. This may be any
                                                object from a non-empty API group
                                                (non core object) or a PersistentVolumeClaim
                                                object. When this field is specified,
                                                volume binding will only succeed if
                                                the type of the specified object matches
                                                some installed volume populator or
                                                dynamic provisioner. This field will
                                                replace the functionality of the dataSource
                                                field and as such if both fields are
                                                non-empty, they must have the same
                                                value. For backwards compatibility,
                                                when namespace isn't specified in
                                                dataSourceRef, both fields (dataSource
                                                and dataSourceRef) will be set to
                                                the same value automatically if one
                                                of them is empty and the other is
                                                non-empty. When namespace is specified
                                                in dataSourceRef, dataSource isn't
                                                set to the same value and must be
                                                empty. There are three important differences
                                                between dataSource and dataSourceRef:
                                                * While dataSource only allows two
                                                specific types of objects, dataSourceRef\
                                                \   allows any non-core object, as
                                                well as PersistentVolumeClaim objects.
                                                * While dataSource ignores disallowed
                                                values (dropping them), dataSourceRef\
                                                \   preserves all values, and generates
                                                an error if a disallowed value is\
                                                \   specified. * While dataSource
                                                only allows local objects, dataSourceRef
                                                allows objects   in any namespaces.
                                                (Beta) Using this field requires the
                                                AnyVolumeDataSource feature gate to
                                                be enabled. (Alpha) Using the namespace
                                                field of dataSourceRef requires the
                                                CrossNamespaceVolumeDataSource feature
                                                gate to be enabled."
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                                namespace:
                                                  description: Namespace is the namespace
                                                    of resource being referenced Note
                                                    that when a namespace is specified,
                                                    a gateway.networking.k8s.io/ReferenceGrant
                                                    object is required in the referent
                                                    namespace to allow that namespace's
                                                    owner to accept the reference.
                                                    See the ReferenceGrant documentation
                                                    for details. (Alpha) This field
                                                    requires the CrossNamespaceVolumeDataSource
                                                    feature gate to be enabled.
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            resources:
                                              description: 'resources represents the
                                                minimum resources the volume should
                                                have. If RecoverVolumeExpansionFailure
                                                feature is enabled users are allowed
                                                to specify resource requirements that
                                                are lower than previous value but
                                                must still be higher than capacity
                                                recorded in the status field of the
                                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                              properties:
                                                claims:
                                                  description: "Claims lists the names
                                                    of resources, defined in spec.resourceClaims,
                                                    that are used by this container.
                                                    \n This is an alpha field and
                                                    requires enabling the DynamicResourceAllocation
                                                    feature gate. \n This field is
                                                    immutable. It can only be set
                                                    for containers."
                                                  items:
                                                    description: ResourceClaim references
                                                      one entry in PodSpec.ResourceClaims.
                                                    properties:
                                                      name:
                                                        description: Name must match
                                                          the name of one entry in
                                                          pod.spec.resourceClaims
                                                          of the Pod where this field
                                                          is used. It makes that resource
                                                          available inside a container.
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-map-keys:
                                                  - name
                                                  x-kubernetes-list-type: map
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: 
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: 
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Requests describes
                                                    the minimum amount of compute
                                                    resources required. If Requests
                                                    is omitted for a container, it
                                                    defaults to Limits if that is
                                                    explicitly specified, otherwise
                                                    to an implementation-defined value.
                                                    Requests cannot exceed Limits.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                              type: object
                                            selector:
                                              description: selector is a label query
                                                over volumes to consider for binding.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            storageClassName:
                                              description: 'storageClassName is the
                                                name of the StorageClass required
                                                by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                              type: string
                                            volumeMode:
                                              description: volumeMode defines what
                                                type of volume is required by the
                                                claim. Value of Filesystem is implied
                                                when not included in claim spec.
                                              type: string
                                            volumeName:
                                              description: volumeName is the binding
                                                reference to the PersistentVolume
                                                backing this claim.
                                              type: string
                                          type: object
                                        status:
                                          description: 'status represents the current
                                            information/status of a persistent volume
                                            claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          properties:
                                            accessModes:
                                              description: 'accessModes contains the
                                                actual access modes the volume backing
                                                the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                              items:
                                                type: string
                                              type: array
                                            allocatedResources:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: 
                                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: allocatedResources is the
                                                storage resource within AllocatedResources
                                                tracks the capacity allocated to a
                                                PVC. It may be larger than the actual
                                                capacity when a volume expansion operation
                                                is requested. For storage quota, the
                                                larger value from allocatedResources
                                                and PVC.spec.resources is used. If
                                                allocatedResources is not set, PVC.spec.resources
                                                alone is used for quota calculation.
                                                If a volume expansion capacity request
                                                is lowered, allocatedResources is
                                                only lowered if there are no expansion
                                                operations in progress and if the
                                                actual volume capacity is equal or
                                                lower than the requested capacity.
                                                This is an alpha field and requires
                                                enabling RecoverVolumeExpansionFailure
                                                feature.
                                              type: object
                                            capacity:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: 
                                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: capacity represents the
                                                actual resources of the underlying
                                                volume.
                                              type: object
                                            conditions:
                                              description: conditions is the current
                                                Condition of persistent volume claim.
                                                If underlying persistent volume is
                                                being resized then the Condition will
                                                be set to 'ResizeStarted'.
                                              items:
                                                description: PersistentVolumeClaimCondition
                                                  contains details about state of
                                                  pvc
                                                properties:
                                                  lastProbeTime:
                                                    description: lastProbeTime is
                                                      the time we probed the condition.
                                                    format: date-time
                                                    type: string
                                                  lastTransitionTime:
                                                    description: lastTransitionTime
                                                      is the time the condition transitioned
                                                      from one status to another.
                                                    format: date-time
                                                    type: string
                                                  message:
                                                    description: message is the human-readable
                                                      message indicating details about
                                                      last transition.
                                                    type: string
                                                  reason:
                                                    description: reason is a unique,
                                                      this should be a short, machine
                                                      understandable string that gives
                                                      the reason for condition's last
                                                      transition. If it reports "ResizeStarted"
                                                      that means the underlying persistent
                                                      volume is being resized.
                                                    type: string
                                                  status:
                                                    type: string
                                                  type:
                                                    description: PersistentVolumeClaimConditionType
                                                      is a valid value of PersistentVolumeClaimCondition.Type
                                                    type: string
                                                required:
                                                - status
                                                - type
                                                type: object
                                              type: array
                                            phase:
                                              description: phase represents the current
                                                phase of PersistentVolumeClaim.
                                              type: string
                                            resizeStatus:
                                              description: resizeStatus stores status
                                                of resize operation. ResizeStatus
                                                is not set by default but when expansion
                                                is complete resizeStatus is set to
                                                empty string by resize controller
                                                or kubelet. This is an alpha field
                                                and requires enabling RecoverVolumeExpansionFailure
                                                feature.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                          globalTier:
                            description: GlobalTier Parameters
                            properties:
                              colocateDisks:
                                default: true
                                description: Co-locates all disks to a single disk
                                  i.e. persist, cache, UDF will be on a single PVC.
                                type: boolean
                              concurrentWaitTimeout:
                                default: 120
                                description: Timeout in seconds for subsequent requests
                                  to wait on a locked resource
                                type: integer
                              encryptDataAtRest:
                                default: true
                                description: EncryptDataAtRest - Enable disk encryption
                                  of data at rest
                                type: boolean
                            type: object
                          persistTier:
                            description: The PersistTier are used as temporary swap
                              space for data that doesn't fit in RAM or VRAM. The
                              disk should be as fast or faster than the Persist Tier
                              storage since this tier is used as an intermediary cache
                              between the RAM and Persist Tiers.
                            properties:
                              default:
                                description: DiskTierStorageLimit
                                properties:
                                  highWatermark:
                                    default: 90
                                    description: "* 'high_watermark' : Percentage
                                      used eviction threshold.  Once             \
                                      \         usage exceeds this value, evictions
                                      from this tier will be                     \
                                      \ scheduled in the background and continue until
                                      the                      'low_watermark' percentage
                                      usage is reached.  Default is              \
                                      \        \"90\", signifying a 90% memory usage
                                      threshold."
                                    type: integer
                                  limit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 1Gi
                                    description: "* 'limit'          : The maximum
                                      (bytes) per rank that can be allocated     \
                                      \                 across all resource groups."
                                    pattern: 
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  lowWatermark:
                                    default: 80
                                    description: "* 'low_watermark'  : Percentage
                                      used recovery threshold.  Once             \
                                      \         usage exceeds the 'high_watermark',
                                      evictions will                      continue
                                      until usage falls below this recovery      \
                                      \                threshold. Default is \"80\"\
                                      , signifying an 80% usage                  \
                                      \    threshold."
                                    type: integer
                                  name:
                                    type: string
                                  path:
                                    default: default
                                    description: A base directory to use as a space
                                      for this tier.
                                    type: string
                                  provisioner:
                                    default: docker.io/hostpath
                                    type: string
                                  volumeClaim:
                                    description: Kubernetes Persistent Volume Claim
                                      for this disk tier.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned
                                          schema of this representation of an object.
                                          Servers should convert recognized schemas
                                          to the latest internal value, and may reject
                                          unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                        type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents.
                                          Servers may infer this from the endpoint
                                          the client submits requests to. Cannot be
                                          updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                        type: string
                                      metadata:
                                        description: "Standard object's metadata.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                        type: object
                                      spec:
                                        description: 'spec defines the desired characteristics
                                          of a volume requested by a pod author. More
                                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              desired access modes the volume should
                                              have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          dataSource:
                                            description: 'dataSource field can be
                                              used to specify either: * An existing
                                              VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                              * An existing PVC (PersistentVolumeClaim)
                                              If the provisioner or an external controller
                                              can support the specified data source,
                                              it will create a new volume based on
                                              the contents of the specified data source.
                                              When the AnyVolumeDataSource feature
                                              gate is enabled, dataSource contents
                                              will be copied to dataSourceRef, and
                                              dataSourceRef contents will be copied
                                              to dataSource when dataSourceRef.namespace
                                              is not specified. If the namespace is
                                              specified, then dataSourceRef will not
                                              be copied to dataSource.'
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          dataSourceRef:
                                            description: "dataSourceRef specifies
                                              the object from which to populate the
                                              volume with data, if a non-empty volume
                                              is desired. This may be any object from
                                              a non-empty API group (non core object)
                                              or a PersistentVolumeClaim object. When
                                              this field is specified, volume binding
                                              will only succeed if the type of the
                                              specified object matches some installed
                                              volume populator or dynamic provisioner.
                                              This field will replace the functionality
                                              of the dataSource field and as such
                                              if both fields are non-empty, they must
                                              have the same value. For backwards compatibility,
                                              when namespace isn't specified in dataSourceRef,
                                              both fields (dataSource and dataSourceRef)
                                              will be set to the same value automatically
                                              if one of them is empty and the other
                                              is non-empty. When namespace is specified
                                              in dataSourceRef, dataSource isn't set
                                              to the same value and must be empty.
                                              There are three important differences
                                              between dataSource and dataSourceRef:
                                              * While dataSource only allows two specific
                                              types of objects, dataSourceRef   allows
                                              any non-core object, as well as PersistentVolumeClaim
                                              objects. * While dataSource ignores
                                              disallowed values (dropping them), dataSourceRef\
                                              \   preserves all values, and generates
                                              an error if a disallowed value is  \
                                              \ specified. * While dataSource only
                                              allows local objects, dataSourceRef
                                              allows objects   in any namespaces.
                                              (Beta) Using this field requires the
                                              AnyVolumeDataSource feature gate to
                                              be enabled. (Alpha) Using the namespace
                                              field of dataSourceRef requires the
                                              CrossNamespaceVolumeDataSource feature
                                              gate to be enabled."
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group
                                                  for the resource being referenced.
                                                  If APIGroup is not specified, the
                                                  specified Kind must be in the core
                                                  API group. For any other third-party
                                                  types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource
                                                  being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource
                                                  being referenced
                                                type: string
                                              namespace:
                                                description: Namespace is the namespace
                                                  of resource being referenced Note
                                                  that when a namespace is specified,
                                                  a gateway.networking.k8s.io/ReferenceGrant
                                                  object is required in the referent
                                                  namespace to allow that namespace's
                                                  owner to accept the reference. See
                                                  the ReferenceGrant documentation
                                                  for details. (Alpha) This field
                                                  requires the CrossNamespaceVolumeDataSource
                                                  feature gate to be enabled.
                                                type: string
                                            required:
                                            - kind
                                            - name
                                            type: object
                                          resources:
                                            description: 'resources represents the
                                              minimum resources the volume should
                                              have. If RecoverVolumeExpansionFailure
                                              feature is enabled users are allowed
                                              to specify resource requirements that
                                              are lower than previous value but must
                                              still be higher than capacity recorded
                                              in the status field of the claim. More
                                              info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                            properties:
                                              claims:
                                                description: "Claims lists the names
                                                  of resources, defined in spec.resourceClaims,
                                                  that are used by this container.
                                                  \n This is an alpha field and requires
                                                  enabling the DynamicResourceAllocation
                                                  feature gate. \n This field is immutable.
                                                  It can only be set for containers."
                                                items:
                                                  description: ResourceClaim references
                                                    one entry in PodSpec.ResourceClaims.
                                                  properties:
                                                    name:
                                                      description: Name must match
                                                        the name of one entry in pod.spec.resourceClaims
                                                        of the Pod where this field
                                                        is used. It makes that resource
                                                        available inside a container.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                                type: array
                                                x-kubernetes-list-map-keys:
                                                - name
                                                x-kubernetes-list-type: map
                                              limits:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Limits describes the
                                                  maximum amount of compute resources
                                                  allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                              requests:
                                                additionalProperties:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  pattern: 
                                                    ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                description: 'Requests describes the
                                                  minimum amount of compute resources
                                                  required. If Requests is omitted
                                                  for a container, it defaults to
                                                  Limits if that is explicitly specified,
                                                  otherwise to an implementation-defined
                                                  value. Requests cannot exceed Limits.
                                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                            type: object
                                          selector:
                                            description: selector is a label query
                                              over volumes to consider for binding.
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a
                                                  list of label selector requirements.
                                                  The requirements are ANDed.
                                                items:
                                                  description: A label selector requirement
                                                    is a selector that contains values,
                                                    a key, and an operator that relates
                                                    the key and values.
                                                  properties:
                                                    key:
                                                      description: key is the label
                                                        key that the selector applies
                                                        to.
                                                      type: string
                                                    operator:
                                                      description: operator represents
                                                        a key's relationship to a
                                                        set of values. Valid operators
                                                        are In, NotIn, Exists and
                                                        DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array
                                                        of string values. If the operator
                                                        is In or NotIn, the values
                                                        array must be non-empty. If
                                                        the operator is Exists or
                                                        DoesNotExist, the values array
                                                        must be empty. This array
                                                        is replaced during a strategic
                                                        merge patch.
                                                      items:
                                                        type: string
                                                      type: array
                                                  required:
                                                  - key
                                                  - operator
                                                  type: object
                                                type: array
                                              matchLabels:
                                                additionalProperties:
                                                  type: string
                                                description: matchLabels is a map
                                                  of {key,value} pairs. A single {key,value}
                                                  in the matchLabels map is equivalent
                                                  to an element of matchExpressions,
                                                  whose key field is "key", the operator
                                                  is "In", and the values array contains
                                                  only "value". The requirements are
                                                  ANDed.
                                                type: object
                                            type: object
                                          storageClassName:
                                            description: 'storageClassName is the
                                              name of the StorageClass required by
                                              the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                            type: string
                                          volumeMode:
                                            description: volumeMode defines what type
                                              of volume is required by the claim.
                                              Value of Filesystem is implied when
                                              not included in claim spec.
                                            type: string
                                          volumeName:
                                            description: volumeName is the binding
                                              reference to the PersistentVolume backing
                                              this claim.
                                            type: string
                                        type: object
                                      status:
                                        description: 'status represents the current
                                          information/status of a persistent volume
                                          claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                        properties:
                                          accessModes:
                                            description: 'accessModes contains the
                                              actual access modes the volume backing
                                              the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            items:
                                              type: string
                                            type: array
                                          allocatedResources:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: allocatedResources is the
                                              storage resource within AllocatedResources
                                              tracks the capacity allocated to a PVC.
                                              It may be larger than the actual capacity
                                              when a volume expansion operation is
                                              requested. For storage quota, the larger
                                              value from allocatedResources and PVC.spec.resources
                                              is used. If allocatedResources is not
                                              set, PVC.spec.resources alone is used
                                              for quota calculation. If a volume expansion
                                              capacity request is lowered, allocatedResources
                                              is only lowered if there are no expansion
                                              operations in progress and if the actual
                                              volume capacity is equal or lower than
                                              the requested capacity. This is an alpha
                                              field and requires enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: object
                                          capacity:
                                            additionalProperties:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              pattern: 
                                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: capacity represents the actual
                                              resources of the underlying volume.
                                            type: object
                                          conditions:
                                            description: conditions is the current
                                              Condition of persistent volume claim.
                                              If underlying persistent volume is being
                                              resized then the Condition will be set
                                              to 'ResizeStarted'.
                                            items:
                                              description: PersistentVolumeClaimCondition
                                                contains details about state of pvc
                                              properties:
                                                lastProbeTime:
                                                  description: lastProbeTime is the
                                                    time we probed the condition.
                                                  format: date-time
                                                  type: string
                                                lastTransitionTime:
                                                  description: lastTransitionTime
                                                    is the time the condition transitioned
                                                    from one status to another.
                                                  format: date-time
                                                  type: string
                                                message:
                                                  description: message is the human-readable
                                                    message indicating details about
                                                    last transition.
                                                  type: string
                                                reason:
                                                  description: reason is a unique,
                                                    this should be a short, machine
                                                    understandable string that gives
                                                    the reason for condition's last
                                                    transition. If it reports "ResizeStarted"
                                                    that means the underlying persistent
                                                    volume is being resized.
                                                  type: string
                                                status:
                                                  type: string
                                                type:
                                                  description: PersistentVolumeClaimConditionType
                                                    is a valid value of PersistentVolumeClaimCondition.Type
                                                  type: string
                                              required:
                                              - status
                                              - type
                                              type: object
                                            type: array
                                          phase:
                                            description: phase represents the current
                                              phase of PersistentVolumeClaim.
                                            type: string
                                          resizeStatus:
                                            description: resizeStatus stores status
                                              of resize operation. ResizeStatus is
                                              not set by default but when expansion
                                              is complete resizeStatus is set to empty
                                              string by resize controller or kubelet.
                                              This is an alpha field and requires
                                              enabling RecoverVolumeExpansionFailure
                                              feature.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              defaultStorePersistentObjects:
                                type: boolean
                              ranks:
                                items:
                                  description: DiskTierStorageLimit
                                  properties:
                                    highWatermark:
                                      default: 90
                                      description: "* 'high_watermark' : Percentage
                                        used eviction threshold.  Once           \
                                        \           usage exceeds this value, evictions
                                        from this tier will be                   \
                                        \   scheduled in the background and continue
                                        until the                      'low_watermark'
                                        percentage usage is reached.  Default is \
                                        \                     \"90\", signifying a
                                        90% memory usage threshold."
                                      type: integer
                                    limit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 1Gi
                                      description: "* 'limit'          : The maximum
                                        (bytes) per rank that can be allocated   \
                                        \                   across all resource groups."
                                      pattern: 
                                        ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    lowWatermark:
                                      default: 80
                                      description: "* 'low_watermark'  : Percentage
                                        used recovery threshold.  Once           \
                                        \           usage exceeds the 'high_watermark',
                                        evictions will                      continue
                                        until usage falls below this recovery    \
                                        \                  threshold. Default is \"\
                                        80\", signifying an 80% usage            \
                                        \          threshold."
                                      type: integer
                                    name:
                                      type: string
                                    path:
                                      default: default
                                      description: A base directory to use as a space
                                        for this tier.
                                      type: string
                                    provisioner:
                                      default: docker.io/hostpath
                                      type: string
                                    volumeClaim:
                                      description: Kubernetes Persistent Volume Claim
                                        for this disk tier.
                                      properties:
                                        apiVersion:
                                          description: 'APIVersion defines the versioned
                                            schema of this representation of an object.
                                            Servers should convert recognized schemas
                                            to the latest internal value, and may
                                            reject unrecognized values. More info:
                                            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                                          type: string
                                        kind:
                                          description: 'Kind is a string value representing
                                            the REST resource this object represents.
                                            Servers may infer this from the endpoint
                                            the client submits requests to. Cannot
                                            be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                          type: string
                                        metadata:
                                          description: "Standard object's metadata.
                                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                          type: object
                                        spec:
                                          description: 'spec defines the desired characteristics
                                            of a volume requested by a pod author.
                                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          properties:
                                            accessModes:
                                              description: 'accessModes contains the
                                                desired access modes the volume should
                                                have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                              items:
                                                type: string
                                              type: array
                                            dataSource:
                                              description: 'dataSource field can be
                                                used to specify either: * An existing
                                                VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                * An existing PVC (PersistentVolumeClaim)
                                                If the provisioner or an external
                                                controller can support the specified
                                                data source, it will create a new
                                                volume based on the contents of the
                                                specified data source. When the AnyVolumeDataSource
                                                feature gate is enabled, dataSource
                                                contents will be copied to dataSourceRef,
                                                and dataSourceRef contents will be
                                                copied to dataSource when dataSourceRef.namespace
                                                is not specified. If the namespace
                                                is specified, then dataSourceRef will
                                                not be copied to dataSource.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            dataSourceRef:
                                              description: "dataSourceRef specifies
                                                the object from which to populate
                                                the volume with data, if a non-empty
                                                volume is desired. This may be any
                                                object from a non-empty API group
                                                (non core object) or a PersistentVolumeClaim
                                                object. When this field is specified,
                                                volume binding will only succeed if
                                                the type of the specified object matches
                                                some installed volume populator or
                                                dynamic provisioner. This field will
                                                replace the functionality of the dataSource
                                                field and as such if both fields are
                                                non-empty, they must have the same
                                                value. For backwards compatibility,
                                                when namespace isn't specified in
                                                dataSourceRef, both fields (dataSource
                                                and dataSourceRef) will be set to
                                                the same value automatically if one
                                                of them is empty and the other is
                                                non-empty. When namespace is specified
                                                in dataSourceRef, dataSource isn't
                                                set to the same value and must be
                                                empty. There are three important differences
                                                between dataSource and dataSourceRef:
                                                * While dataSource only allows two
                                                specific types of objects, dataSourceRef\
                                                \   allows any non-core object, as
                                                well as PersistentVolumeClaim objects.
                                                * While dataSource ignores disallowed
                                                values (dropping them), dataSourceRef\
                                                \   preserves all values, and generates
                                                an error if a disallowed value is\
                                                \   specified. * While dataSource
                                                only allows local objects, dataSourceRef
                                                allows objects   in any namespaces.
                                                (Beta) Using this field requires the
                                                AnyVolumeDataSource feature gate to
                                                be enabled. (Alpha) Using the namespace
                                                field of dataSourceRef requires the
                                                CrossNamespaceVolumeDataSource feature
                                                gate to be enabled."
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                                namespace:
                                                  description: Namespace is the namespace
                                                    of resource being referenced Note
                                                    that when a namespace is specified,
                                                    a gateway.networking.k8s.io/ReferenceGrant
                                                    object is required in the referent
                                                    namespace to allow that namespace's
                                                    owner to accept the reference.
                                                    See the ReferenceGrant documentation
                                                    for details. (Alpha) This field
                                                    requires the CrossNamespaceVolumeDataSource
                                                    feature gate to be enabled.
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            resources:
                                              description: 'resources represents the
                                                minimum resources the volume should
                                                have. If RecoverVolumeExpansionFailure
                                                feature is enabled users are allowed
                                                to specify resource requirements that
                                                are lower than previous value but
                                                must still be higher than capacity
                                                recorded in the status field of the
                                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                              properties:
                                                claims:
                                                  description: "Claims lists the names
                                                    of resources, defined in spec.resourceClaims,
                                                    that are used by this container.
                                                    \n This is an alpha field and
                                                    requires enabling the DynamicResourceAllocation
                                                    feature gate. \n This field is
                                                    immutable. It can only be set
                                                    for containers."
                                                  items:
                                                    description: ResourceClaim references
                                                      one entry in PodSpec.ResourceClaims.
                                                    properties:
                                                      name:
                                                        description: Name must match
                                                          the name of one entry in
                                                          pod.spec.resourceClaims
                                                          of the Pod where this field
                                                          is used. It makes that resource
                                                          available inside a container.
                                                        type: string
                                                    required:
                                                    - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-map-keys:
                                                  - name
                                                  x-kubernetes-list-type: map
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: 
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: 
                                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Requests describes
                                                    the minimum amount of compute
                                                    resources required. If Requests
                                                    is omitted for a container, it
                                                    defaults to Limits if that is
                                                    explicitly specified, otherwise
                                                    to an implementation-defined value.
                                                    Requests cannot exceed Limits.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                              type: object
                                            selector:
                                              description: selector is a label query
                                                over volumes to consider for binding.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            storageClassName:
                                              description: 'storageClassName is the
                                                name of the StorageClass required
                                                by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                              type: string
                                            volumeMode:
                                              description: volumeMode defines what
                                                type of volume is required by the
                                                claim. Value of Filesystem is implied
                                                when not included in claim spec.
                                              type: string
                                            volumeName:
                                              description: volumeName is the binding
                                                reference to the PersistentVolume
                                                backing this claim.
                                              type: string
                                          type: object
                                        status:
                                          description: 'status represents the current
                                            information/status of a persistent volume
                                            claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                          properties:
                                            accessModes:
                                              description: 'accessModes contains the
                                                actual access modes the volume backing
                                                the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                              items:
                                                type: string
                                              type: array
                                            allocatedResources:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: 
                                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: allocatedResources is the
                                                storage resource within AllocatedResources
                                                tracks the capacity allocated to a
                                                PVC. It may be larger than the actual
                                                capacity when a volume expansion operation
                                                is requested. For storage quota, the
                                                larger value from allocatedResources
                                                and PVC.spec.resources is used. If
                                                allocatedResources is not set, PVC.spec.resources
                                                alone is used for quota calculation.
                                                If a volume expansion capacity request
                                                is lowered, allocatedResources is
                                                only lowered if there are no expansion
                                                operations in progress and if the
                                                actual volume capacity is equal or
                                                lower than the requested capacity.
                                                This is an alpha field and requires
                                                enabling RecoverVolumeExpansionFailure
                                                feature.
                                              type: object
                                            capacity:
                                              additionalProperties:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                pattern: 
                                                  ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              description: capacity represents the
                                                actual resources of the underlying
                                                volume.
                                              type: object
                                            conditions:
                                              description: conditions is the current
                                                Condition of persistent volume claim.
                                                If underlying persistent volume is
                                                being resized then the Condition will
                                                be set to 'ResizeStarted'.
                                              items:
                                                description: PersistentVolumeClaimCondition
                                                  contains details about state of
                                                  pvc
                                                properties:
                                                  lastProbeTime:
                                                    description: lastProbeTime is
                                                      the time we probed the condition.
                                                    format: date-time
                                                    type: string
                                                  lastTransitionTime:
                                                    description: lastTransitionTime
                                                      is the time the condition transitioned
                                                      from one status to another.
                                                    format: date-time
                                                    type: string
                                                  message:
                                                    description: message is the human-readable
                                                      message indicating details about
                                                      last transition.
                                                    type: string
                                                  reason:
                                                    description: reason is a unique,
                                                      this should be a short, machine
                                                      understandable string that gives
                                                      the reason for condition's last
                                                      transition. If it reports "ResizeStarted"
                                                      that means the underlying persistent
                                                      volume is being resized.
                                                    type: string
                                                  status:
                                                    type: string
                                                  type:
                                                    description: PersistentVolumeClaimConditionType
                                                      is a valid value of PersistentVolumeClaimCondition.Type
                                                    type: string
                                                required:
                                                - status
                                                - type
                                                type: object
                                              type: array
                                            phase:
                                              description: phase represents the current
                                                phase of PersistentVolumeClaim.
                                              type: string
                                            resizeStatus:
                                              description: resizeStatus stores status
                                                of resize operation. ResizeStatus
                                                is not set by default but when expansion
                                                is complete resizeStatus is set to
                                                empty string by resize controller
                                                or kubelet. This is an alpha field
                                                and requires enabling RecoverVolumeExpansionFailure
                                                feature.
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                          ramTier:
                            description: "The RAMTier represents the RAM available
                              for data storage per rank. \n The RAM Tier is NOT used
                              for small, non-data objects or variables that are allocated
                              and deallocated for program flow control or used to
                              store metadata or other similar information; these continue
                              to use either the stack or the regular runtime memory
                              allocator. This tier should be sized on each machine
                              such that there is sufficient RAM left over to handle
                              this overhead, as well as the needs of other processes
                              running on the same machine."
                            properties:
                              default:
                                description: "The RAM Tier represents the RAM available
                                  for data storage per rank. \n The RAM Tier is NOT
                                  used for small, non-data objects or variables that
                                  are allocated and deallocated for program flow control
                                  or used to store metadata or other similar information;
                                  these continue to use either the stack or the regular
                                  runtime memory allocator. This tier should be sized
                                  on each machine such that there is sufficient RAM
                                  left over to handle this overhead, as well as the
                                  needs of other processes running on the same machine.
                                  \n A default memory limit and eviction thresholds
                                  can be set across all ranks, while one or more ranks
                                  may be configured to override those defaults. \n
                                  The general format for RAM settings: \n # tier.ram.[default|rank<#>].<parameter>
                                  Valid *parameter* names include: \n * 'limit'  \
                                  \        : The maximum RAM (bytes) per rank that
                                  can be allocated                      across all
                                  resource groups.  Default is -1, signifying    \
                                  \                  no limit and ignore watermark
                                  settings. * 'high_watermark' : RAM percentage used
                                  eviction threshold.  Once memory               \
                                  \       usage exceeds this value, evictions from
                                  this tier will be                      scheduled
                                  in the background and continue until the       \
                                  \               'low_watermark' percentage usage
                                  is reached.  Default is                      \"\
                                  90\", signifying a 90% memory usage threshold. *
                                  'low_watermark'  : RAM percentage used recovery
                                  threshold.  Once memory                      usage
                                  exceeds the 'high_watermark', evictions will   \
                                  \                   continue until memory usage
                                  falls below this recovery                      threshold.
                                  Default is \"50\", signifying a 50% memory usage\
                                  \                      threshold."
                                properties:
                                  highWatermark:
                                    default: 90
                                    description: "* 'high_watermark' : Percentage
                                      used eviction threshold.  Once             \
                                      \         usage exceeds this value, evictions
                                      from this tier will be                     \
                                      \ scheduled in the background and continue until
                                      the                      'low_watermark' percentage
                                      usage is reached.  Default is              \
                                      \        \"90\", signifying a 90% memory usage
                                      threshold."
                                    type: integer
                                  limit:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    default: 1Gi
                                    description: "* 'limit'          : The maximum
                                      (bytes) per rank that can be allocated     \
                                      \                 across all resource groups."
                                    pattern: 
                                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  lowWatermark:
                                    default: 80
                                    description: "* 'low_watermark'  : Percentage
                                      used recovery threshold.  Once             \
                                      \         usage exceeds the 'high_watermark',
                                      evictions will                      continue
                                      until usage falls below this recovery      \
                                      \                threshold. Default is \"80\"\
                                      , signifying an 80% usage                  \
                                      \    threshold."
                                    type: integer
                                  name:
                                    type: string
                                type: object
                              ranks:
                                description: 'The maximum RAM (bytes) for processing
                                  data at rank 0. Overrides the overall default RAM
                                  tier limit. #tier.ram.rank0.limit = -1'
                                items:
                                  description: TierStorageLimit
                                  properties:
                                    highWatermark:
                                      default: 90
                                      description: "* 'high_watermark' : Percentage
                                        used eviction threshold.  Once           \
                                        \           usage exceeds this value, evictions
                                        from this tier will be                   \
                                        \   scheduled in the background and continue
                                        until the                      'low_watermark'
                                        percentage usage is reached.  Default is \
                                        \                     \"90\", signifying a
                                        90% memory usage threshold."
                                      type: integer
                                    limit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 1Gi
                                      description: "* 'limit'          : The maximum
                                        (bytes) per rank that can be allocated   \
                                        \                   across all resource groups."
                                      pattern: 
                                        ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    lowWatermark:
                                      default: 80
                                      description: "* 'low_watermark'  : Percentage
                                        used recovery threshold.  Once           \
                                        \           usage exceeds the 'high_watermark',
                                        evictions will                      continue
                                        until usage falls below this recovery    \
                                        \                  threshold. Default is \"\
                                        80\", signifying an 80% usage            \
                                        \          threshold."
                                      type: integer
                                    name:
                                      type: string
                                  type: object
                                type: array
                            type: object
                        type: object
                      tieredStrategy:
                        default:
                          default: VRAM 1, RAM 5, PERSIST 5
                          predicateEvaluationInterval: 60
                        properties:
                          default:
                            default: VRAM 1, RAM 5, PERSIST 5
                            description: "Default strategy to apply to tables or columns
                              when one was not provided during table creation. This
                              strategy is also applied to a resource group that does
                              not specify one at time of creation. \n The strategy
                              is formed by chaining together the tier types and their
                              respective eviction priorities. Any given tier may appear
                              no more than once in the chain and the priority must
                              be in range \"1\" - \"10\", where \"1\" is the lowest
                              priority (first to be evicted) and \"9\" is the highest
                              priority (last to be evicted).  A priority of \"10\"\
                              \ indicates that an object is unevictable. \n Each tier's
                              priority is in relation to the priority of other objects
                              in the same tier; e.g., \"RAM 9, DISK2 1\" indicates
                              that an object will be the highest evictable priority
                              among objects in the RAM Tier (last evicted), but that
                              it will be the lowest priority among objects in the
                              Disk Tier named 'disk2' (first evicted).  Note that
                              since an object can only have one Disk Tier instance
                              in its strategy, the corresponding priority will only
                              apply in relation to other objects in Disk Tier instance
                              'disk2'. \n See the Tiered Storage section for more
                              information about tier type names. \n Format: \n <tier1>
                              <priority>, <tier2> <priority>, <tier3> <priority>,
                              ... \n Examples using a Disk Tier named 'disk2' and
                              a Cold Storage Tier 'cold0': \n vram 3, ram 5, disk2
                              3, persist 10 vram 3, ram 5, disk2 3, persist 6, cold0
                              10 \n tier_strategy.default = VRAM 1, RAM 5, PERSIST
                              5"
                            type: string
                          predicateEvaluationInterval:
                            default: 60
                            description: Predicate evaluation interval (in minutes)
                              -  indicates the interval at which the tier strategy
                              predicates are evaluated
                            type: integer
                        type: object
                      video:
                        default:
                          defaultTTL: '-1'
                          maxCount: '-1'
                          tmpDir: ${gaia.temp_directory}/gpudb-temp-videos
                        properties:
                          defaultTTL:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '-1'
                            description: System default TTL for videos. Time-to-live
                              (TTL) is the number of minutes before a video will expire
                              and be removed, or -1 to disable. video_default_ttl
                              = -1
                            x-kubernetes-int-or-string: true
                          maxCount:
                            anyOf:
                            - type: integer
                            - type: string
                            default: '-1'
                            description: The maximum number of videos to allow on
                              the system. Set to 0 to disable video rendering.  Set
                              to -1 to allow an unlimited number of videos. video_max_count
                              = -1
                            x-kubernetes-int-or-string: true
                          tmpDir:
                            default: ${gaia.temp_directory}/gpudb-temp-videos
                            description: Directory where video files should be temporarily
                              stored while rendering. Only accessed by rank 0. video_temp_directory
                              = ${gaia.temp_directory}/gpudb-temp-videos
                            type: string
                        type: object
                      visualization:
                        default:
                          enableLODRendering: true
                          enableOpenGLRenderer: true
                          enableVectorTileService: false
                          lodDataExtent:
                          - -180
                          - -90
                          - 180
                          - 90
                          lodPreProcessingLevel: 5
                          lodSubRegionNum:
                          - 12
                          - 6
                          lodSubRegionResolution:
                          - 512
                          - 512
                          maxFeaturesPerTile: 200000
                          maxHeatmapSize: 3072
                          maxLODLevel: 8
                          maxVectorTileZoomLevel: 8
                          maxVerticesPerChunk: 20000000
                          minVectorTileZoomLevel: 1
                          openGLAntialiasingLevel: 0
                          pointRenderThreshold: 100000
                          renderingPrecisionThreshold: 30
                          symbolResolution: 100
                          symbolTextureSize: 4000
                          symbologyRenderThreshold: 10000
                          vectorTileMapTiler: google
                        description: VisualizationConfig
                        properties:
                          enableLODRendering:
                            default: true
                            description: Enable level-of-details rendering for fast
                              interaction with large WKT polygon data.  Only available
                              for the OpenGL renderer (when 'enable_opengl_renderer'
                              is "true").
                            type: boolean
                          enableOpenGLRenderer:
                            default: true
                            description: If "true", enable hardware-accelerated OpenGL
                              renderer; if "false", use the software-based Cairo renderer.
                            type: boolean
                          enableVectorTileService:
                            default: false
                            description: If "true", enable Vector Tile Service (VTS)
                              to support client-side visualization of geospatial data.
                              Enabling this option increases memory usage on ingestion.
                            type: boolean
                          lodDataExtent:
                            description: "Longitude and latitude ranges of geospatial
                              data for which level-of-details representations are
                              being generated. The parameter order is: \n <min_longitude>
                              <min_latitude> <max_longitude> <max_latitude> \n The
                              default values span over the world, but the level-of-details
                              rendering becomes more efficient when the precise extent
                              of geospatial data is specified. kubebuilder:default:={
                              -180, -90, 180, 90 }"
                            items:
                              type: integer
                            type: array
                          lodPreProcessingLevel:
                            default: 5
                            description: "The extent to which shape data are pre-processed
                              for level-of-details rendering during data insert/load
                              or processed on-the-fly in rendering time. This is a
                              trade-off between speed and memory. The higher the value,
                              the faster level-of-details rendering is, but the more
                              memory is used for storing processed shape data. \n
                              The maximum level is \"10\" (most shape data are pre-processed)
                              and the minimum level is \"0\"."
                            maximum: 10
                            minimum: 0
                            type: integer
                          lodSubRegionNum:
                            default:
                            - 12
                            - 6
                            description: The number of subregions in horizontal and
                              vertical geospatial data extent. The default values
                              of "12 6" divide the world into subregions of 30 degree
                              (lon.) x 30 degree (lat.)
                            items:
                              type: integer
                            type: array
                          lodSubRegionResolution:
                            default:
                            - 512
                            - 512
                            description: A base image resolution (width and height
                              in pixels) at which a subregion would be rendered in
                              a global view spanning over the whole dataset. Based
                              on this resolution level-of-details representations
                              are generated for the polygons located in the subregion.
                            items:
                              type: integer
                            type: array
                          maxFeaturesPerTile:
                            default: 200000
                            description: Control the maximum number of features returned
                              per tile (per chunk); features beyond this count will
                              be skipped.
                            type: integer
                          maxHeatmapSize:
                            default: 3072
                            description: Maximum heatmap size (in pixels) that can
                              be generated. This reserves 'max_heatmap_size' ^ 2 *
                              8 bytes of GPU memory at **rank0**
                            type: integer
                          maxLODLevel:
                            default: 8
                            description: The maximum number of levels in the level-of-details
                              rendering. As the number increases, level-of-details
                              rendering becomes effective at higher zoom levels, but
                              it may increase memory usage for storing level-of-details
                              representations.
                            type: integer
                          maxVectorTileZoomLevel:
                            default: 8
                            description: Input geometries are pre-processed upon ingestion
                              for faster vector tile generation. This parameter determines
                              the zoomlevel at which the vector tile pre-processing
                              stops. A vector tile request for a higher zoomlevel
                              than this parameter takes additional time because the
                              vector tile needs to be generated on the fly.
                            type: integer
                          maxVerticesPerChunk:
                            default: 20000000
                            description: Avoid trying to generate vector tiles on
                              huge amounts of geometry.
                            type: integer
                          minVectorTileZoomLevel:
                            default: 1
                            description: Input geometries are pre-processed upon ingestion
                              for faster vector tile generation. This parameter determines
                              the zoomlevel from which the vector tile pre-processing
                              starts. A vector tile request for a lower zoomlevel
                              than this parameter takes additional time because the
                              vector tile needs to be generated on the fly.
                            type: integer
                          openGLAntialiasingLevel:
                            description: "The number of samples to use for antialiasing.
                              Higher numbers will improve image quality but require
                              more GPU memory to store the samples on worker ranks.\
                              \  This affects only the OpenGL renderer. \n Value may
                              be \"0\", \"4\", \"8\" or \"16\".  When \"0\" antialiasing
                              is disabled. The default value is \"0\"."
                            maximum: 16
                            minimum: 0
                            type: integer
                          pointRenderThreshold:
                            default: 100000
                            description: Threshold number of points (per-TOM) at which
                              point rendering switches to fast mode.
                            type: integer
                          renderingPrecisionThreshold:
                            default: 30
                            description: Single-precision coordinates are used for
                              usual rendering processes, but depending on the precision
                              of geometry data and use case, double precision processing
                              may be required at a high zoomlevel. Double precision
                              rendering processes are used from the zoomlevel specified
                              by this parameter, which is corresponding to a zoomlevel
                              of TMS or Google map service.
                            type: integer
                          symbolResolution:
                            default: 100
                            description: The image width/height (in pixels) of svg
                              symbols cached in the OpenGL symbol cache.
                            type: integer
                          symbolTextureSize:
                            default: 4000
                            description: The width/height (in pixels) of an OpenGL
                              texture which caches symbol images for OpenGL rendering.
                            type: integer
                          symbologyRenderThreshold:
                            default: 10000
                            description: Threshold for the number of points (per-TOM)
                              after which symbology rendering falls back to regular
                              rendering
                            type: integer
                          vectorTileMapTiler:
                            default: google
                            description: The name of map tiler used for Vector Tile
                              Service. "google" and "tms" map tilers are supported
                              currently. This parameter should be matched with the
                              map tiler of clients' vector tile renderer.
                            type: string
                        type: object
                      workbench:
                        default:
                          enable: false
                          port:
                            containerPort: 8000
                            name: workbench
                            protocol: TCP
                        properties:
                          enable:
                            default: false
                            description: Start the Workbench app on the head host
                              when host manager is started. enable_workbench = false
                            type: boolean
                          port:
                            default:
                              containerPort: 8000
                              name: workbench
                              protocol: TCP
                            description: '# HTTP server port for Workbench if enabled.
                              workbench_port = 8000'
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's
                                  IP address. This must be a valid port number, 0
                                  < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host.
                                  If specified, this must be a valid port number,
                                  0 < x < 65536. If HostNetwork is specified, this
                                  must match ContainerPort. Most containers do not
                                  need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a
                                  pod must have a unique name. Name for the port that
                                  can be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP,
                                  or SCTP. Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                        required:
                        - enable
                        - port
                        type: object
                    type: object
                  fqdn:
                    default: ''
                    description: The fully qualified URL used on the Ingress records
                      for any exposed services. Completed buy yth Operator. DO NOT
                      POPULATE MANUALLY.
                    type: string
                  haRingName:
                    default: default
                    description: The name of the parent HA Ring this cluster belongs
                      to.
                    minLength: 5
                    type: string
                  hasPools:
                    default: true
                    description: "Whether to enable the separate node 'pools' for
                      \"infra\", \"compute\" pod scheduling.   Default: false"
                    type: boolean
                  hostManagerPort:
                    default:
                      containerPort: 9300
                      name: hostmanager
                      protocol: TCP
                    description: 'The port the HostManager will be running in each
                      pod in the cluster.   Default: 9300, TCP'
                    properties:
                      containerPort:
                        description: Number of port to expose on the pod's IP address.
                          This must be a valid port number, 0 < x < 65536.
                        format: int32
                        type: integer
                      hostIP:
                        description: What host IP to bind the external port to.
                        type: string
                      hostPort:
                        description: Number of port to expose on the host. If specified,
                          this must be a valid port number, 0 < x < 65536. If HostNetwork
                          is specified, this must match ContainerPort. Most containers
                          do not need this.
                        format: int32
                        type: integer
                      name:
                        description: If specified, this must be an IANA_SVC_NAME and
                          unique within the pod. Each named port in a pod must have
                          a unique name. Name for the port that can be referred to
                          by services.
                        type: string
                      protocol:
                        default: TCP
                        description: Protocol for port. Must be UDP, TCP, or SCTP.
                          Defaults to "TCP".
                        type: string
                    required:
                    - containerPort
                    type: object
                  image:
                    default: kinetica/kinetica-k8s-intel:v7.1.6.0
                    description: Set the name of the container image to use.
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: Set the policy for pulling container images.
                    type: string
                  imagePullSecrets:
                    description: "ImagePullSecrets is an optional list of references
                      to secrets in the same gpudb-namespace to use for pulling any
                      of the images used by this PodSpec. If specified, these secrets
                      will be passed to individual puller implementations for them
                      to use. \n For example, in the case of docker, only DockerConfig
                      type secrets are honored."
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels - Pod labels to be applied to the Statefulset
                      DB pods.
                    type: object
                  letsEncrypt:
                    default:
                      enabled: false
                      environment: staging
                    description: The Ingress Endpoint that GAdmin will be running
                      on.
                    properties:
                      enabled:
                        default: false
                        description: Enable LetsEncrypt for Certificate generation.
                        type: boolean
                      environment:
                        default: staging
                        description: LetsEncryptEnvironment
                        enum:
                        - staging
                        - production
                        type: string
                    type: object
                  license:
                    description: Set the Kinetica DB License.
                    type: string
                  livenessProbe:
                    default:
                      failureThreshold: 30
                      initialDelaySeconds: 30
                      periodSeconds: 30
                    description: 'Periodic probe of container liveness. Container
                      will be restarted if the probe fails. Cannot be updated. More
                      info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    properties:
                      failureThreshold:
                        default: 3
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      initialDelaySeconds:
                        default: 10
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        default: 10
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                  loggerConfig:
                    description: LoggerConfig Kinetica DB Logger Configuration Object
                      Configure the LOG4CPLUS logger for the DB. Field takes a string
                      containing the full configuration. If not specified a template
                      file is used during DB configuration generation.
                    properties:
                      configString:
                        type: string
                    type: object
                  metricsRegistryRepositoryTag:
                    default:
                      registry: docker.io
                      repository: kineticadevcloud/fluent-bit
                      tag: v7.1.5.2
                    description: Metrics - DB Metrics scrape & forward configuration
                      for `fluent-bit`.
                    properties:
                      imagePullPolicy:
                        default: IfNotPresent
                        description: Set the policy for pulling container images.
                        type: string
                      imagePullSecrets:
                        description: "ImagePullSecrets is an optional list of references
                          to secrets in the same gpudb-namespace to use for pulling
                          any of the images used by this PodSpec. If specified, these
                          secrets will be passed to individual puller implementations
                          for them to use. \n For example, in the case of docker,
                          only DockerConfig type secrets are honored."
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        type: array
                      registry:
                        default: docker.io
                        description: The image registry & optional port containing
                          the repository.
                        type: string
                      repository:
                        default: kineticadevcloud/
                        description: The image repository path.
                        type: string
                      semVer:
                        description: SemVer = Semantic Version for the Tag SemVer
                          semver.Version
                        type: string
                      sha:
                        default: ''
                        description: The image sha.
                        type: string
                      tag:
                        default: v7.1.5.2
                        description: The image tag.
                        type: string
                    type: object
                  metricsResources:
                    description: Metrics - `fluent-bit` container requests/limits.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    default:
                      app.kinetica.com/pool: compute
                    description: NodeSelector - NodeSelector to be applied to the
                      DB Pods
                    type: object
                  originalReplicas:
                    description: Do not use internal Operator field only.
                    type: integer
                  podManagementPolicy:
                    default: Parallel
                    description: podManagementPolicy controls how pods are created
                      during initial scale up, when replacing pods on nodes, or when
                      scaling down. The default policy is `OrderedReady`, where pods
                      are created in increasing order (pod-0, then pod-1, etc) and
                      the controller will wait until each pod is ready before continuing.
                      When scaling down, the pods are removed in the opposite order.
                      The alternative policy is `Parallel` which will create pods
                      in parallel to match the desired scale without waiting, and
                      on scale down will delete all pods at once.
                    type: string
                  ranksPerNode:
                    default: 1
                    description: 'Number of ranks per node as a uint16 i.e. 1-65535
                      ranks per node.   Default: 1'
                    type: integer
                  readinessProbe:
                    default:
                      failureThreshold: 10
                      initialDelaySeconds: 180
                      periodSeconds: 30
                    description: 'Periodic probe of container service readiness. Container
                      will be removed from service endpoints if the probe fails. Cannot
                      be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    properties:
                      failureThreshold:
                        default: 3
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      initialDelaySeconds:
                        default: 10
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        default: 10
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                  replicas:
                    default: 3
                    description: 'The number of DB ranks i.e. replicas that the cluster
                      will spin up.   Default: 3'
                    minimum: 0
                    type: integer
                  resources:
                    description: Limit the resources a DB Pod can consume.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  securityContext:
                    description: SecurityContext holds security configuration that
                      will be applied to a container. Some fields are present in both
                      SecurityContext and PodSecurityContext.  When both are set,
                      the values in SecurityContext take precedence.
                    properties:
                      allowPrivilegeEscalation:
                        description: 'AllowPrivilegeEscalation controls whether a
                          process can gain more privileges than its parent process.
                          This bool directly controls if the no_new_privs flag will
                          be set on the container process. AllowPrivilegeEscalation
                          is true always when the container is: 1) run as Privileged
                          2) has CAP_SYS_ADMIN Note that this field cannot be set
                          when spec.os.name is windows.'
                        type: boolean
                      capabilities:
                        description: The capabilities to add/drop when running containers.
                          Defaults to the default set of capabilities granted by the
                          container runtime. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          add:
                            description: Added capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                          drop:
                            description: Removed capabilities
                            items:
                              description: Capability represent POSIX capabilities
                                type
                              type: string
                            type: array
                        type: object
                      privileged:
                        description: Run container in privileged mode. Processes in
                          privileged containers are essentially equivalent to root
                          on the host. Defaults to false. Note that this field cannot
                          be set when spec.os.name is windows.
                        type: boolean
                      procMount:
                        description: procMount denotes the type of proc mount to use
                          for the containers. The default is DefaultProcMount which
                          uses the container runtime defaults for readonly paths and
                          masked paths. This requires the ProcMountType feature flag
                          to be enabled. Note that this field cannot be set when spec.os.name
                          is windows.
                        type: string
                      readOnlyRootFilesystem:
                        description: Whether this container has a read-only root filesystem.
                          Default is false. Note that this field cannot be set when
                          spec.os.name is windows.
                        type: boolean
                      runAsGroup:
                        description: The GID to run the entrypoint of the container
                          process. Uses runtime default if unset. May also be set
                          in PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail
                          to start the container if it does. If unset or false, no
                          such validation will be performed. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container
                          process. Defaults to user specified in image metadata if
                          unspecified. May also be set in PodSecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the
                          value specified in SecurityContext takes precedence. Note
                          that this field cannot be set when spec.os.name is windows.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: The SELinux context to be applied to the container.
                          If unspecified, the container runtime will allocate a random
                          SELinux context for each container.  May also be set in
                          PodSecurityContext.  If set in both SecurityContext and
                          PodSecurityContext, the value specified in SecurityContext
                          takes precedence. Note that this field cannot be set when
                          spec.os.name is windows.
                        properties:
                          level:
                            description: Level is SELinux level label that applies
                              to the container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies
                              to the container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies
                              to the container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies
                              to the container.
                            type: string
                        type: object
                      seccompProfile:
                        description: The seccomp options to use by this container.
                          If seccomp options are provided at both the pod & container
                          level, the container options override the pod options. Note
                          that this field cannot be set when spec.os.name is windows.
                        properties:
                          localhostProfile:
                            description: localhostProfile indicates a profile defined
                              in a file on the node should be used. The profile must
                              be preconfigured on the node to work. Must be a descending
                              path, relative to the kubelet's configured seccomp profile
                              location. Must only be set if type is "Localhost".
                            type: string
                          type:
                            description: "type indicates which kind of seccomp profile
                              will be applied. Valid options are: \n Localhost - a
                              profile defined in a file on the node should be used.
                              RuntimeDefault - the container runtime default profile
                              should be used. Unconfined - no profile should be applied."
                            type: string
                        required:
                        - type
                        type: object
                      windowsOptions:
                        description: The Windows specific settings applied to all
                          containers. If unspecified, the options from the PodSecurityContext
                          will be used. If set in both SecurityContext and PodSecurityContext,
                          the value specified in SecurityContext takes precedence.
                          Note that this field cannot be set when spec.os.name is
                          linux.
                        properties:
                          gmsaCredentialSpec:
                            description: GMSACredentialSpec is where the GMSA admission
                              webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                              inlines the contents of the GMSA credential spec named
                              by the GMSACredentialSpecName field.
                            type: string
                          gmsaCredentialSpecName:
                            description: GMSACredentialSpecName is the name of the
                              GMSA credential spec to use.
                            type: string
                          hostProcess:
                            description: HostProcess determines if a container should
                              be run as a 'Host Process' container. This field is
                              alpha-level and will only be honored by components that
                              enable the WindowsHostProcessContainers feature flag.
                              Setting this field without the feature flag will result
                              in errors when validating the Pod. All of a Pod's containers
                              must have the same effective HostProcess value (it is
                              not allowed to have a mix of HostProcess containers
                              and non-HostProcess containers).  In addition, if HostProcess
                              is true then HostNetwork must also be set to true.
                            type: boolean
                          runAsUserName:
                            description: The UserName in Windows to run the entrypoint
                              of the container process. Defaults to the user specified
                              in image metadata if unspecified. May also be set in
                              PodSecurityContext. If set in both SecurityContext and
                              PodSecurityContext, the value specified in SecurityContext
                              takes precedence.
                            type: string
                        type: object
                    type: object
                  startupProbe:
                    default:
                      failureThreshold: 10
                      initialDelaySeconds: 10
                      periodSeconds: 60
                    description: "StartupProbe indicates that the Pod has successfully
                      initialized. If specified, no other probes are executed until
                      this completes successfully. If this probe fails, the Pod will
                      be restarted, just as if the livenessProbe failed. This can
                      be used to provide different probe parameters at the beginning
                      of a Pod's lifecycle, when it might take a long time to load
                      data or warm a cache, than during steady-state operation. This
                      cannot be updated. This is an alpha feature enabled by the StartupProbe
                      feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                    properties:
                      failureThreshold:
                        default: 3
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      initialDelaySeconds:
                        default: 10
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        default: 10
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                required:
                - clusterName
                - license
                type: object
              hostManagerMonitor:
                default:
                  db_healthz_port:
                    containerPort: 8888
                    name: db-healthz
                    protocol: TCP
                  hm_healthz_port:
                    containerPort: 8889
                    name: hm-healthz
                    protocol: TCP
                  livenessProbe:
                    failureThreshold: 30
                    initialDelaySeconds: 5
                    periodSeconds: 10
                  readinessProbe:
                    failureThreshold: 20
                    initialDelaySeconds: 5
                    periodSeconds: 10
                  startupProbe:
                    failureThreshold: 20
                    initialDelaySeconds: 5
                    periodSeconds: 10
                description: HostManagerMonitor is used to monitor the Kinetica DB
                  Ranks. If a rank is unavailable for the specified   time (MaxRankFailureCount)
                  the cluster will be restarted.
                properties:
                  db_healthz_port:
                    default:
                      containerPort: 8888
                      name: db-healthz
                      protocol: TCP
                    description: 'The HostMonitor Port for the DB StartupProbe, ReadinessProbe
                      and Liveness probes. Default: 8888'
                    properties:
                      containerPort:
                        description: Number of port to expose on the pod's IP address.
                          This must be a valid port number, 0 < x < 65536.
                        format: int32
                        type: integer
                      hostIP:
                        description: What host IP to bind the external port to.
                        type: string
                      hostPort:
                        description: Number of port to expose on the host. If specified,
                          this must be a valid port number, 0 < x < 65536. If HostNetwork
                          is specified, this must match ContainerPort. Most containers
                          do not need this.
                        format: int32
                        type: integer
                      name:
                        description: If specified, this must be an IANA_SVC_NAME and
                          unique within the pod. Each named port in a pod must have
                          a unique name. Name for the port that can be referred to
                          by services.
                        type: string
                      protocol:
                        default: TCP
                        description: Protocol for port. Must be UDP, TCP, or SCTP.
                          Defaults to "TCP".
                        type: string
                    required:
                    - containerPort
                    type: object
                  hm_healthz_port:
                    default:
                      containerPort: 8889
                      name: hm-healthz
                      protocol: TCP
                    description: 'The HostMonitor Port for the DB StartupProbe, ReadinessProbe
                      and Liveness probes. Default: 8889'
                    properties:
                      containerPort:
                        description: Number of port to expose on the pod's IP address.
                          This must be a valid port number, 0 < x < 65536.
                        format: int32
                        type: integer
                      hostIP:
                        description: What host IP to bind the external port to.
                        type: string
                      hostPort:
                        description: Number of port to expose on the host. If specified,
                          this must be a valid port number, 0 < x < 65536. If HostNetwork
                          is specified, this must match ContainerPort. Most containers
                          do not need this.
                        format: int32
                        type: integer
                      name:
                        description: If specified, this must be an IANA_SVC_NAME and
                          unique within the pod. Each named port in a pod must have
                          a unique name. Name for the port that can be referred to
                          by services.
                        type: string
                      protocol:
                        default: TCP
                        description: Protocol for port. Must be UDP, TCP, or SCTP.
                          Defaults to "TCP".
                        type: string
                    required:
                    - containerPort
                    type: object
                  livenessProbe:
                    default:
                      failureThreshold: 30
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    description: 'Periodic probe of container liveness. Container
                      will be restarted if the probe fails. Cannot be updated. More
                      info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    properties:
                      failureThreshold:
                        default: 3
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      initialDelaySeconds:
                        default: 10
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        default: 10
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                  monitorRegistryRepositoryTag:
                    default:
                      registry: docker.io
                      repository: kineticadevcloud/kinetica-k8s-monitor
                      tag: v7.1.5.2
                    description: Set the name of the container image to use.
                    properties:
                      imagePullPolicy:
                        default: IfNotPresent
                        description: Set the policy for pulling container images.
                        type: string
                      imagePullSecrets:
                        description: "ImagePullSecrets is an optional list of references
                          to secrets in the same gpudb-namespace to use for pulling
                          any of the images used by this PodSpec. If specified, these
                          secrets will be passed to individual puller implementations
                          for them to use. \n For example, in the case of docker,
                          only DockerConfig type secrets are honored."
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        type: array
                      registry:
                        default: docker.io
                        description: The image registry & optional port containing
                          the repository.
                        type: string
                      repository:
                        default: kineticadevcloud/
                        description: The image repository path.
                        type: string
                      semVer:
                        description: SemVer = Semantic Version for the Tag SemVer
                          semver.Version
                        type: string
                      sha:
                        default: ''
                        description: The image sha.
                        type: string
                      tag:
                        default: v7.1.5.2
                        description: The image tag.
                        type: string
                    type: object
                  readinessProbe:
                    default:
                      failureThreshold: 20
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    description: 'Periodic probe of container service readiness. Container
                      will be removed from service endpoints if the probe fails. Cannot
                      be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                    properties:
                      failureThreshold:
                        default: 3
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      initialDelaySeconds:
                        default: 10
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        default: 10
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                  resources:
                    description: Allow for overriding resource requests/limits.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  startupProbe:
                    default:
                      failureThreshold: 20
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    description: "StartupProbe indicates that the Pod has successfully
                      initialized. If specified, no other probes are executed until
                      this completes successfully. If this probe fails, the Pod will
                      be restarted, just as if the livenessProbe failed. This can
                      be used to provide different probe parameters at the beginning
                      of a Pod's lifecycle, when it might take a long time to load
                      data or warm a cache, than during steady-state operation. This
                      cannot be updated. This is an alpha feature enabled by the StartupProbe
                      feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
                    properties:
                      failureThreshold:
                        default: 3
                        description: Minimum consecutive failures for the probe to
                          be considered failed after having succeeded. Defaults to
                          3. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      initialDelaySeconds:
                        default: 10
                        description: 'Number of seconds after the container has started
                          before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        format: int32
                        type: integer
                      periodSeconds:
                        default: 10
                        description: How often (in seconds) to perform the probe.
                          Default to 10 seconds. Minimum value is 1.
                        format: int32
                        minimum: 1
                        type: integer
                    type: object
                type: object
              infra:
                default: on-prem
                description: The platform infrastructure provider e.g. azure, aws,
                  gcp, on-prem etc.
                enum:
                - azure
                - aws
                - gcp
                - on-prem
                type: string
              ingressController:
                default: nginx
                description: The Kubernetes Ingress Controller will be running on
                  e.g. ingress-nginx, Traefik, Ambassador, Gloo, Kong etc.
                type: string
              ldap:
                default:
                  baseDN: dc=kinetica,dc=com
                  bindDN: cn=admin,dc=kinetica,dc=com
                  host: openldap
                  isInLocalK8S: true
                  isLDAPS: false
                  namespace: gpudb
                  port: 389
                description: The LDAP server to connect to.
                properties:
                  baseDN:
                    default: dc=kinetica,dc=com
                    description: BaseDN - The root base LDAP Distinguished Name to
                      use as the base for the LDAP usage
                    type: string
                  bindDN:
                    default: cn=admin,dc=kinetica,dc=com
                    description: BindDN - The LDAP Distinguished Name to use for the
                      LDAP connectivity/data connectivity/bind
                    type: string
                  host:
                    default: openldap
                    description: 'Host - The name of the host to connect to. If IsInLocalK8S=true
                      then supply only the name e.g. `openldap`   Default: openldap'
                    type: string
                  isInLocalK8S:
                    default: true
                    description: 'IsInLocalK8S - Is the LDAP server co-located in
                      the same K8s cluster the operator is running in.   Default:
                      true'
                    type: boolean
                  isLDAPS:
                    default: false
                    description: 'IsLDAPS - IUse LDAPS instead of LDAP   Default:
                      false'
                    type: boolean
                  namespace:
                    default: gpudb
                    description: 'Namespace - The namespace the   Default: openldap'
                    type: string
                  port:
                    default: 389
                    description: 'Port - Defaults to LDAP Port 389   Default: 389'
                    type: integer
                type: object
              payAsYouGo:
                default: false
                description: Tells the operator to use Cloud Provider Pay As You Go
                  functionality.
                type: boolean
              reveal:
                default:
                  containerPort:
                    containerPort: 8088
                    name: reveal
                    protocol: TCP
                  isEnabled: true
                description: The Reveal Dashboard Configuration for the Kinetica Cluster.
                properties:
                  containerPort:
                    default:
                      containerPort: 8088
                      name: reveal
                      protocol: TCP
                    description: 'The port that Reveal will be running on. It runs
                      only on the head node pod in the cluster.   Default: 8080'
                    properties:
                      containerPort:
                        description: Number of port to expose on the pod's IP address.
                          This must be a valid port number, 0 < x < 65536.
                        format: int32
                        type: integer
                      hostIP:
                        description: What host IP to bind the external port to.
                        type: string
                      hostPort:
                        description: Number of port to expose on the host. If specified,
                          this must be a valid port number, 0 < x < 65536. If HostNetwork
                          is specified, this must match ContainerPort. Most containers
                          do not need this.
                        format: int32
                        type: integer
                      name:
                        description: If specified, this must be an IANA_SVC_NAME and
                          unique within the pod. Each named port in a pod must have
                          a unique name. Name for the port that can be referred to
                          by services.
                        type: string
                      protocol:
                        default: TCP
                        description: Protocol for port. Must be UDP, TCP, or SCTP.
                          Defaults to "TCP".
                        type: string
                    required:
                    - containerPort
                    type: object
                  ingressPath:
                    description: The Ingress Endpoint that Reveal will be running
                      on.
                    properties:
                      backend:
                        description: backend defines the referenced service endpoint
                          to which the traffic will be forwarded to.
                        properties:
                          resource:
                            description: resource is an ObjectRef to another Kubernetes
                              resource in the namespace of the Ingress object. If
                              resource is specified, serviceName and servicePort must
                              not be specified.
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          serviceName:
                            description: serviceName specifies the name of the referenced
                              service.
                            type: string
                          servicePort:
                            anyOf:
                            - type: integer
                            - type: string
                            description: servicePort Specifies the port of the referenced
                              service.
                            x-kubernetes-int-or-string: true
                        type: object
                      path:
                        description: path is matched against the path of an incoming
                          request. Currently it can contain characters disallowed
                          from the conventional "path" part of a URL as defined by
                          RFC 3986. Paths must begin with a '/' and must be present
                          when using PathType with value "Exact" or "Prefix".
                        type: string
                      pathType:
                        description: "pathType determines the interpretation of the
                          path matching. PathType can be one of the following values:
                          * Exact: Matches the URL path exactly. * Prefix: Matches
                          based on a URL path prefix split by '/'. Matching is   done
                          on a path element by element basis. A path element refers
                          is the   list of labels in the path split by the '/' separator.
                          A request is a   match for path p if every p is an element-wise
                          prefix of p of the   request path. Note that if the last
                          element of the path is a substring   of the last element
                          in request path, it is not a match (e.g. /foo/bar   matches
                          /foo/bar/baz, but does not match /foo/barbaz). * ImplementationSpecific:
                          Interpretation of the Path matching is up to   the IngressClass.
                          Implementations can treat this as a separate PathType  \
                          \ or treat it identically to Prefix or Exact path types.
                          Implementations are required to support all path types.
                          Defaults to ImplementationSpecific."
                        type: string
                    required:
                    - backend
                    type: object
                  isEnabled:
                    default: true
                    description: 'Whether to enable the Reveal Dashboard on the Cluster.   Default:
                      true'
                    type: boolean
                type: object
              stats:
                default:
                  alertManager:
                    args:
                    - -c
                    - /opt/gpudb/kagent/stats/alertmanager/alertmanager --config.file=/opt/gpudb/kagent/stats/alertmanager/alertmanager.yml
                      --web.listen-address=0.0.0.0:9089 --cluster.listen-address=
                      --storage.path=/opt/gpudb/kagent/stats/storage/alertmanager/dbcluster-data
                    command:
                    - /bin/sh
                    configFile: /opt/gpudb/kagent/stats/alertmanager/alertmanager.yml
                    configFileAsConfigMap: false
                    containerPort:
                      containerPort: 9089
                      name: alertmanager
                      protocol: TCP
                    image:
                      registry: docker.io
                      repository: kinetica/kagent
                      tag: 7.1.9.15.20230823123615.ga
                    isEnabled: true
                    livenessProbe:
                      failureThreshold: 5
                      initialDelaySeconds: 30
                      periodSeconds: 10
                      successThreshold: 1
                      tcpSocket:
                        port: alertmanager
                      timeoutSeconds: 1
                    logs: /opt/gpudb/kagent/stats/logs
                    name: stats-alertmanager
                    readinessProbe:
                      failureThreshold: 3
                      initialDelaySeconds: 10
                      periodSeconds: 30
                      successThreshold: 1
                      tcpSocket:
                        port: alertmanager
                      timeoutSeconds: 1
                    resources:
                      limits:
                        cpu: 250m
                        memory: 1Gi
                      requests:
                        cpu: 250m
                        memory: 1Gi
                    storagePath: /opt/gpudb/kagent/stats/storage/alertmanager/
                    webConfigFile: /opt/gpudb/kagent/stats/alertmanager/alertmanager-web-config.yml
                  grafana:
                    args:
                    - -c
                    - /opt/gpudb/kagent/stats/grafana/bin/grafana-server -config=/opt/gpudb/kagent/stats/grafana/conf/defaults.ini
                      -homepath=/opt/gpudb/kagent/stats/grafana
                    command:
                    - /bin/sh
                    configFile: /opt/gpudb/kagent/stats/grafana/conf/grafana.ini
                    configFileAsConfigMap: false
                    containerPort:
                      containerPort: 9091
                      name: grafana
                      protocol: TCP
                    homePath: /opt/gpudb/kagent/stats/grafana
                    host: 0.0.0.0
                    image:
                      registry: docker.io
                      repository: kinetica/kagent
                      tag: 7.1.9.15.20230823123615.ga
                    isEnabled: true
                    livenessProbe:
                      failureThreshold: 5
                      initialDelaySeconds: 30
                      periodSeconds: 10
                      successThreshold: 1
                      tcpSocket:
                        port: grafana
                      timeoutSeconds: 1
                    logs: /opt/gpudb/kagent/stats/logs
                    name: stats-grafana
                    readinessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /robots.txt
                        port: grafana
                        scheme: HTTP
                      initialDelaySeconds: 10
                      periodSeconds: 30
                      successThreshold: 1
                      timeoutSeconds: 1
                    resources:
                      limits:
                        cpu: 250m
                        memory: 1Gi
                      requests:
                        cpu: 250m
                        memory: 1Gi
                  isEnabled: true
                  loki:
                    args:
                    - -c
                    - /opt/gpudb/kagent/stats/loki/loki -config.expand-env=true -config.file=/opt/gpudb/kagent/stats/loki/loki.yml
                    command:
                    - /bin/sh
                    configFile: /opt/gpudb/kagent/stats/loki/loki.yml
                    configFileAsConfigMap: true
                    containerPort:
                      containerPort: 9080
                      name: loki
                      protocol: TCP
                    env:
                    - name: LOKI_HTTP_PORT
                      value: '9080'
                    - name: LOKI_STORAGE
                      value: /opt/gpudb/kagent/stats/storage/loki-storage
                    expandEnv: true
                    image:
                      registry: docker.io
                      repository: kinetica/kagent
                      tag: 7.1.9.15.20230823123615.ga
                    isEnabled: true
                    livenessProbe:
                      failureThreshold: 5
                      httpGet:
                        path: /ready
                        port: loki
                        scheme: HTTP
                      initialDelaySeconds: 30
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                    logs: /opt/gpudb/kagent/stats/logs
                    name: stats-loki
                    readinessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /ready
                        port: loki
                        scheme: HTTP
                      initialDelaySeconds: 10
                      periodSeconds: 30
                      successThreshold: 1
                      timeoutSeconds: 1
                    resources:
                      limits:
                        cpu: 250m
                        memory: 1Gi
                      requests:
                        cpu: 250m
                        memory: 1Gi
                    storage: /opt/gpudb/kagent/stats/storage/loki-storage
                  pool: compute
                  prometheus:
                    args:
                    - -c
                    - /opt/gpudb/kagent/stats/prometheus/prometheus --log.level=debug
                      --config.file=/opt/gpudb/kagent/stats/prometheus/prometheus.yml
                      --web.listen-address=0.0.0.0:9090 --storage.tsdb.path=/opt/gpudb/kagent/stats/storage/prometheus-storage
                      --storage.tsdb.retention.time=7d  --web.enable-lifecycle
                    command:
                    - /bin/sh
                    configFile: /opt/gpudb/kagent/stats/prometheus/prometheus.yml
                    configFileAsConfigMap: true
                    containerPort:
                      containerPort: 9090
                      name: prometheus
                      protocol: TCP
                    image:
                      registry: docker.io
                      repository: kinetica/kagent
                      tag: 7.1.9.15.20230823123615.ga
                    isEnabled: true
                    livenessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /
                        port: prometheus
                        scheme: HTTP
                      initialDelaySeconds: 30
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                    logLevel: debug
                    logs: /opt/gpudb/kagent/stats/logs
                    name: stats-prometheus
                    readinessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /
                        port: prometheus
                        scheme: HTTP
                      initialDelaySeconds: 10
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                    resources:
                      limits:
                        cpu: 250m
                        memory: 2Gi
                      requests:
                        cpu: 250m
                        memory: 2Gi
                    storageTSDBPath: /opt/gpudb/kagent/stats/storage/prometheus-storage
                    storageTSDBRetentionTime: 7d
                    timings:
                      evaluationInterval: 30s
                      scrapeInterval: 30s
                      scrapeTimeout: 10s
                  sharedPV: true
                  sharedPVResources:
                    limits:
                      storage: 100Gi
                    requests:
                      storage: 10Gi
                description: The Stats server to deploy & connect to if required.
                properties:
                  alertManager:
                    default:
                      args:
                      - -c
                      - ''
                      command:
                      - /bin/sh
                      configFile: /opt/gpudb/kagent/stats/alertmanager/alertmanager.yml
                      configFileAsConfigMap: false
                      containerPort:
                        containerPort: 9089
                        name: alertmanager
                        protocol: TCP
                      image:
                        registry: docker.io
                        repository: kinetica/kagent
                        tag: 7.1.9.15.20230823123615.ga
                      isEnabled: true
                      livenessProbe:
                        failureThreshold: 5
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        tcpSocket:
                          port: alertmanager
                        timeoutSeconds: 1
                      logs: /opt/gpudb/kagent/stats/logs
                      name: stats-alertmanager
                      readinessProbe:
                        failureThreshold: 3
                        initialDelaySeconds: 10
                        periodSeconds: 30
                        successThreshold: 1
                        tcpSocket:
                          port: alertmanager
                        timeoutSeconds: 1
                      resources:
                        limits:
                          cpu: 250m
                          memory: 1Gi
                        requests:
                          cpu: 250m
                          memory: 1Gi
                      storagePath: /opt/gpudb/kagent/stats/storage/alertmanager/
                      webConfigFile: /opt/gpudb/kagent/stats/alertmanager/alertmanager-web-config.yml
                    description: AlertManager - AlertManager specific configuration.
                    properties:
                      args:
                        default:
                        - -c
                        - /opt/gpudb/kagent/stats/prometheus/prometheus --log.level=debug
                          --config.file=/opt/gpudb/kagent/stats/prometheus/prometheus.yml
                          --web.listen-address=0.0.0.0:9090 --storage.tsdb.path=/opt/gpudb/kagent/stats/storage/prometheus-storage
                          --storage.tsdb.retention.time=7d  --web.enable-lifecycle
                        description: Set the arguments for the command within the
                          container to run.
                        items:
                          type: string
                        type: array
                      command:
                        default:
                        - /bin/sh
                        description: Set the command within the container to run.
                        items:
                          type: string
                        type: array
                      configFile:
                        default: /opt/gpudb/kagent/stats/loki/loki.yml
                        description: ConfigFile - Set the location of the Loki configuration
                          file.
                        type: string
                      configFileAsConfigMap:
                        default: true
                        description: ConfigFileAsConfigMap - If true the ConfigFile
                          is mounted from a ConfigMap
                        type: boolean
                      containerPort:
                        default:
                          containerPort: 9091
                          name: stats
                          protocol: TCP
                        description: 'The port that Stats will be running on. It runs
                          only on the head node pod in the cluster.   Default: 9091'
                        properties:
                          containerPort:
                            description: Number of port to expose on the pod's IP
                              address. This must be a valid port number, 0 < x < 65536.
                            format: int32
                            type: integer
                          hostIP:
                            description: What host IP to bind the external port to.
                            type: string
                          hostPort:
                            description: Number of port to expose on the host. If
                              specified, this must be a valid port number, 0 < x <
                              65536. If HostNetwork is specified, this must match
                              ContainerPort. Most containers do not need this.
                            format: int32
                            type: integer
                          name:
                            description: If specified, this must be an IANA_SVC_NAME
                              and unique within the pod. Each named port in a pod
                              must have a unique name. Name for the port that can
                              be referred to by services.
                            type: string
                          protocol:
                            default: TCP
                            description: Protocol for port. Must be UDP, TCP, or SCTP.
                              Defaults to "TCP".
                            type: string
                        required:
                        - containerPort
                        type: object
                      env:
                        description: List of environment variables to set in the container.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables
                                in the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. Double $$ are
                                reduced to a single $, which allows for escaping the
                                $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                the string literal "$(VAR_NAME)". Escaped references
                                will never be expanded, regardless of whether the
                                variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: "Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels['<KEY>']`,
                                    `metadata.annotations['<KEY>']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs."
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: 
                                        ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        default:
                          registry: docker.io
                          repository: kinetica/kagent
                          tag: 7.1.9.15.20230823123615.ga
                        description: Set the name of the container image to use.
                        properties:
                          imagePullPolicy:
                            default: IfNotPresent
                            description: Set the policy for pulling container images.
                            type: string
                          imagePullSecrets:
                            description: "ImagePullSecrets is an optional list of
                              references to secrets in the same gpudb-namespace to
                              use for pulling any of the images used by this PodSpec.
                              If specified, these secrets will be passed to individual
                              puller implementations for them to use. \n For example,
                              in the case of docker, only DockerConfig type secrets
                              are honored."
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          registry:
                            default: docker.io
                            description: The image registry & optional port containing
                              the repository.
                            type: string
                          repository:
                            default: kineticadevcloud/
                            description: The image repository path.
                            type: string
                          semVer:
                            description: SemVer = Semantic Version for the Tag SemVer
                              semver.Version
                            type: string
                          sha:
                            default: ''
                            description: The image sha.
                            type: string
                          tag:
                            default: v7.1.5.2
                            description: The image tag.
                            type: string
                        type: object
                      isEnabled:
                        default: true
                        description: 'Whether to enable the Stats Server on the Cluster.   Default:
                          true'
                        type: boolean
                      livenessProbe:
                        default:
                          failureThreshold: 5
                          httpGet:
                            path: /
                            port: port_name
                            scheme: HTTP
                          initialDelaySeconds: 30
                          periodSeconds: 10
                          successThreshold: 1
                          timeoutSeconds: 1
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                description: "Service is the name of the service to
                                  place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                  \n If this is not specified, the default behavior
                                  is defined by gRPC."
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is a beta field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                              is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      logs:
                        default: /opt/gpudb/kagent/stats/logs
                        description: Logs - Set the location of the Loki configuration
                          file.
                        type: string
                      name:
                        default: stats
                        type: string
                      readinessProbe:
                        default:
                          failureThreshold: 3
                          httpGet:
                            path: /
                            port: port_name
                            scheme: HTTP
                          initialDelaySeconds: 10
                          periodSeconds: 30
                          successThreshold: 1
                          timeoutSeconds: 1
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                description: "Service is the name of the service to
                                  place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                  \n If this is not specified, the default behavior
                                  is defined by gRPC."
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is a beta field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                              is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        default:
                          limits:
                            cpu: 250m
                            memory: 1Gi
                          requests:
                            cpu: 250m
                            ephemeral-storage: 10Gi
                            memory: 1Gi
                        description: Resource Requests & Limits for the Stats Pod.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: 
                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: 
                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      storagePath:
                        default: /opt/gpudb/kagent/stats/storage/alertmanager/alertmanager
                        description: StoragePath - Set the location of the AlertManager
                          file storage.
                        type: string
                      webConfigFile:
                        default: /opt/gpudb/kagent/stats/alertmanager/alertmanager-web-config.yml
                        description: WebConfigFile - Set the location of the AlertManager
                          alertmanager-web-config.yml.
                        type: string
                      webListenAddress:
                        default: 0.0.0.0:9089
                        description: WebListenAddress - Set the location of the AlertManager
                          alertmanager-web-config.yml.
                        type: string
                    required:
                    - name
                    type: object
                  grafana:
                    default:
                      args:
                      - -c
                      - /opt/gpudb/kagent/stats/grafana/bin/grafana-server -config=/opt/gpudb/kagent/stats/grafana/conf/grafana.ini
                        -homepath=/opt/gpudb/kagent/stats/grafana
                      command:
                      - /bin/sh
                      configFile: /opt/gpudb/kagent/stats/grafana/conf/grafana.ini
                      configFileAsConfigMap: false
                      containerPort:
                        containerPort: 9091
                        name: grafana
                        protocol: TCP
                      homePath: /opt/gpudb/kagent/stats/grafana
                      host: 0.0.0.0
                      image:
                        registry: docker.io
                        repository: kinetica/kagent
                        tag: 7.1.9.15.20230823123615.ga
                      isEnabled: true
                      livenessProbe:
                        failureThreshold: 5
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        tcpSocket:
                          port: grafana
                        timeoutSeconds: 1
                      logs: /opt/gpudb/kagent/stats/logs
                      name: stats-grafana
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /robots.txt
                          port: grafana
                          scheme: HTTP
                        initialDelaySeconds: 10
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          cpu: 250m
                          memory: 1Gi
                        requests:
                          cpu: 250m
                          memory: 1Gi
                    description: Grafana - Grafana specific configuration.
                    properties:
                      args:
                        default:
                        - -c
                        - /opt/gpudb/kagent/stats/prometheus/prometheus --log.level=debug
                          --config.file=/opt/gpudb/kagent/stats/prometheus/prometheus.yml
                          --web.listen-address=0.0.0.0:9090 --storage.tsdb.path=/opt/gpudb/kagent/stats/storage/prometheus-storage
                          --storage.tsdb.retention.time=7d  --web.enable-lifecycle
                        description: Set the arguments for the command within the
                          container to run.
                        items:
                          type: string
                        type: array
                      command:
                        default:
                        - /bin/sh
                        description: Set the command within the container to run.
                        items:
                          type: string
                        type: array
                      configFile:
                        default: /opt/gpudb/kagent/stats/loki/loki.yml
                        description: ConfigFile - Set the location of the Loki configuration
                          file.
                        type: string
                      configFileAsConfigMap:
                        default: true
                        description: ConfigFileAsConfigMap - If true the ConfigFile
                          is mounted from a ConfigMap
                        type: boolean
                      containerPort:
                        default:
                          containerPort: 9091
                          name: stats
                          protocol: TCP
                        description: 'The port that Stats will be running on. It runs
                          only on the head node pod in the cluster.   Default: 9091'
                        properties:
                          containerPort:
                            description: Number of port to expose on the pod's IP
                              address. This must be a valid port number, 0 < x < 65536.
                            format: int32
                            type: integer
                          hostIP:
                            description: What host IP to bind the external port to.
                            type: string
                          hostPort:
                            description: Number of port to expose on the host. If
                              specified, this must be a valid port number, 0 < x <
                              65536. If HostNetwork is specified, this must match
                              ContainerPort. Most containers do not need this.
                            format: int32
                            type: integer
                          name:
                            description: If specified, this must be an IANA_SVC_NAME
                              and unique within the pod. Each named port in a pod
                              must have a unique name. Name for the port that can
                              be referred to by services.
                            type: string
                          protocol:
                            default: TCP
                            description: Protocol for port. Must be UDP, TCP, or SCTP.
                              Defaults to "TCP".
                            type: string
                        required:
                        - containerPort
                        type: object
                      env:
                        description: List of environment variables to set in the container.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables
                                in the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. Double $$ are
                                reduced to a single $, which allows for escaping the
                                $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                the string literal "$(VAR_NAME)". Escaped references
                                will never be expanded, regardless of whether the
                                variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: "Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels['<KEY>']`,
                                    `metadata.annotations['<KEY>']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs."
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: 
                                        ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      homePath:
                        default: /opt/gpudb/kagent/stats/grafana
                        description: HomePath - Set the location of the Grafana home
                          directory.
                        type: string
                      host:
                        default: 0.0.0.0
                        description: GraphiteHost - Host Address
                        type: string
                      image:
                        default:
                          registry: docker.io
                          repository: kinetica/kagent
                          tag: 7.1.9.15.20230823123615.ga
                        description: Set the name of the container image to use.
                        properties:
                          imagePullPolicy:
                            default: IfNotPresent
                            description: Set the policy for pulling container images.
                            type: string
                          imagePullSecrets:
                            description: "ImagePullSecrets is an optional list of
                              references to secrets in the same gpudb-namespace to
                              use for pulling any of the images used by this PodSpec.
                              If specified, these secrets will be passed to individual
                              puller implementations for them to use. \n For example,
                              in the case of docker, only DockerConfig type secrets
                              are honored."
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          registry:
                            default: docker.io
                            description: The image registry & optional port containing
                              the repository.
                            type: string
                          repository:
                            default: kineticadevcloud/
                            description: The image repository path.
                            type: string
                          semVer:
                            description: SemVer = Semantic Version for the Tag SemVer
                              semver.Version
                            type: string
                          sha:
                            default: ''
                            description: The image sha.
                            type: string
                          tag:
                            default: v7.1.5.2
                            description: The image tag.
                            type: string
                        type: object
                      isEnabled:
                        default: true
                        description: 'Whether to enable the Stats Server on the Cluster.   Default:
                          true'
                        type: boolean
                      livenessProbe:
                        default:
                          failureThreshold: 5
                          httpGet:
                            path: /
                            port: port_name
                            scheme: HTTP
                          initialDelaySeconds: 30
                          periodSeconds: 10
                          successThreshold: 1
                          timeoutSeconds: 1
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                description: "Service is the name of the service to
                                  place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                  \n If this is not specified, the default behavior
                                  is defined by gRPC."
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is a beta field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                              is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      logs:
                        default: /opt/gpudb/kagent/stats/logs
                        description: Logs - Set the location of the Loki configuration
                          file.
                        type: string
                      name:
                        default: stats
                        type: string
                      readinessProbe:
                        default:
                          failureThreshold: 3
                          httpGet:
                            path: /
                            port: port_name
                            scheme: HTTP
                          initialDelaySeconds: 10
                          periodSeconds: 30
                          successThreshold: 1
                          timeoutSeconds: 1
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                description: "Service is the name of the service to
                                  place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                  \n If this is not specified, the default behavior
                                  is defined by gRPC."
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is a beta field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                              is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        default:
                          limits:
                            cpu: 250m
                            memory: 1Gi
                          requests:
                            cpu: 250m
                            ephemeral-storage: 10Gi
                            memory: 1Gi
                        description: Resource Requests & Limits for the Stats Pod.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: 
                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: 
                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  isEnabled:
                    default: true
                    description: 'Whether to enable the Stats Server on the Cluster.   Default:
                      true'
                    type: boolean
                  loki:
                    default:
                      args:
                      - -c
                      - /opt/gpudb/kagent/stats/loki/loki -config.expand-env=true
                        -config.file=/opt/gpudb/kagent/stats/loki/loki.yml
                      command:
                      - /bin/sh
                      configFile: /opt/gpudb/kagent/stats/loki/loki.yml
                      configFileAsConfigMap: true
                      containerPort:
                        containerPort: 9080
                        name: loki
                        protocol: TCP
                      env:
                      - name: LOKI_HTTP_PORT
                        value: '9080'
                      - name: LOKI_STORAGE
                        value: /opt/gpudb/kagent/stats/storage/loki-storage
                      expandEnv: true
                      image:
                        registry: docker.io
                        repository: kinetica/kagent
                        tag: 7.1.9.15.20230823123615.ga
                      isEnabled: true
                      livenessProbe:
                        failureThreshold: 5
                        httpGet:
                          path: /ready
                          port: loki
                          scheme: HTTP
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      logs: /opt/gpudb/kagent/stats/logs
                      name: stats-loki
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /ready
                          port: loki
                          scheme: HTTP
                        initialDelaySeconds: 10
                        periodSeconds: 30
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          cpu: 250m
                          memory: 1Gi
                        requests:
                          cpu: 250m
                          memory: 1Gi
                      storage: /opt/gpudb/kagent/stats/storage/loki-storage
                    description: Loki - Loki specific configuration.
                    properties:
                      args:
                        default:
                        - -c
                        - /opt/gpudb/kagent/stats/prometheus/prometheus --log.level=debug
                          --config.file=/opt/gpudb/kagent/stats/prometheus/prometheus.yml
                          --web.listen-address=0.0.0.0:9090 --storage.tsdb.path=/opt/gpudb/kagent/stats/storage/prometheus-storage
                          --storage.tsdb.retention.time=7d  --web.enable-lifecycle
                        description: Set the arguments for the command within the
                          container to run.
                        items:
                          type: string
                        type: array
                      command:
                        default:
                        - /bin/sh
                        description: Set the command within the container to run.
                        items:
                          type: string
                        type: array
                      configFile:
                        default: /opt/gpudb/kagent/stats/loki/loki.yml
                        description: ConfigFile - Set the location of the Loki configuration
                          file.
                        type: string
                      configFileAsConfigMap:
                        default: true
                        description: ConfigFileAsConfigMap - If true the ConfigFile
                          is mounted from a ConfigMap
                        type: boolean
                      containerPort:
                        default:
                          containerPort: 9091
                          name: stats
                          protocol: TCP
                        description: 'The port that Stats will be running on. It runs
                          only on the head node pod in the cluster.   Default: 9091'
                        properties:
                          containerPort:
                            description: Number of port to expose on the pod's IP
                              address. This must be a valid port number, 0 < x < 65536.
                            format: int32
                            type: integer
                          hostIP:
                            description: What host IP to bind the external port to.
                            type: string
                          hostPort:
                            description: Number of port to expose on the host. If
                              specified, this must be a valid port number, 0 < x <
                              65536. If HostNetwork is specified, this must match
                              ContainerPort. Most containers do not need this.
                            format: int32
                            type: integer
                          name:
                            description: If specified, this must be an IANA_SVC_NAME
                              and unique within the pod. Each named port in a pod
                              must have a unique name. Name for the port that can
                              be referred to by services.
                            type: string
                          protocol:
                            default: TCP
                            description: Protocol for port. Must be UDP, TCP, or SCTP.
                              Defaults to "TCP".
                            type: string
                        required:
                        - containerPort
                        type: object
                      env:
                        description: List of environment variables to set in the container.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables
                                in the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. Double $$ are
                                reduced to a single $, which allows for escaping the
                                $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                the string literal "$(VAR_NAME)". Escaped references
                                will never be expanded, regardless of whether the
                                variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: "Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels['<KEY>']`,
                                    `metadata.annotations['<KEY>']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs."
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: 
                                        ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      expandEnv:
                        default: true
                        description: ExpandEnv
                        type: boolean
                      image:
                        default:
                          registry: docker.io
                          repository: kinetica/kagent
                          tag: 7.1.9.15.20230823123615.ga
                        description: Set the name of the container image to use.
                        properties:
                          imagePullPolicy:
                            default: IfNotPresent
                            description: Set the policy for pulling container images.
                            type: string
                          imagePullSecrets:
                            description: "ImagePullSecrets is an optional list of
                              references to secrets in the same gpudb-namespace to
                              use for pulling any of the images used by this PodSpec.
                              If specified, these secrets will be passed to individual
                              puller implementations for them to use. \n For example,
                              in the case of docker, only DockerConfig type secrets
                              are honored."
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          registry:
                            default: docker.io
                            description: The image registry & optional port containing
                              the repository.
                            type: string
                          repository:
                            default: kineticadevcloud/
                            description: The image repository path.
                            type: string
                          semVer:
                            description: SemVer = Semantic Version for the Tag SemVer
                              semver.Version
                            type: string
                          sha:
                            default: ''
                            description: The image sha.
                            type: string
                          tag:
                            default: v7.1.5.2
                            description: The image tag.
                            type: string
                        type: object
                      isEnabled:
                        default: true
                        description: 'Whether to enable the Stats Server on the Cluster.   Default:
                          true'
                        type: boolean
                      livenessProbe:
                        default:
                          failureThreshold: 5
                          httpGet:
                            path: /
                            port: port_name
                            scheme: HTTP
                          initialDelaySeconds: 30
                          periodSeconds: 10
                          successThreshold: 1
                          timeoutSeconds: 1
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                description: "Service is the name of the service to
                                  place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                  \n If this is not specified, the default behavior
                                  is defined by gRPC."
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is a beta field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                              is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      logs:
                        default: /opt/gpudb/kagent/stats/logs
                        description: Logs - Set the location of the Loki configuration
                          file.
                        type: string
                      name:
                        default: stats
                        type: string
                      readinessProbe:
                        default:
                          failureThreshold: 3
                          httpGet:
                            path: /
                            port: port_name
                            scheme: HTTP
                          initialDelaySeconds: 10
                          periodSeconds: 30
                          successThreshold: 1
                          timeoutSeconds: 1
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                description: "Service is the name of the service to
                                  place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                  \n If this is not specified, the default behavior
                                  is defined by gRPC."
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is a beta field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                              is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        default:
                          limits:
                            cpu: 250m
                            memory: 1Gi
                          requests:
                            cpu: 250m
                            ephemeral-storage: 10Gi
                            memory: 1Gi
                        description: Resource Requests & Limits for the Stats Pod.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: 
                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: 
                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      storage:
                        default: /opt/gpudb/kagent/stats/storage/loki-storage
                        description: Storage - Set the path of the Loki storage.
                        type: string
                    required:
                    - name
                    type: object
                  pool:
                    default: compute
                    description: Which vmss/node group etc. to use as the NodeSelector
                    enum:
                    - none
                    - compute
                    - compute-gpu
                    - compute-llm
                    - infra
                    - public
                    type: string
                  prometheus:
                    default:
                      args:
                      - -c
                      - /opt/gpudb/kagent/stats/prometheus/prometheus --log.level=debug
                        --config.file=/opt/gpudb/kagent/stats/prometheus/prometheus.yml
                        --web.listen-address=0.0.0.0:9090 --storage.tsdb.path=/opt/gpudb/kagent/stats/storage/prometheus-storage
                        --storage.tsdb.retention.time=7d  --web.enable-lifecycle
                      command:
                      - /bin/sh
                      configFile: /opt/gpudb/kagent/stats/prometheus/prometheus.yml
                      configFileAsConfigMap: true
                      containerPort:
                        containerPort: 9090
                        name: prometheus
                        protocol: TCP
                      image:
                        registry: docker.io
                        repository: kinetica/kagent
                        tag: 7.1.9.15.20230823123615.ga
                      isEnabled: true
                      livenessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /
                          port: prometheus
                          scheme: HTTP
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      logLevel: debug
                      logs: /opt/gpudb/kagent/stats/logs
                      name: stats-prometheus
                      readinessProbe:
                        failureThreshold: 3
                        httpGet:
                          path: /
                          port: prometheus
                          scheme: HTTP
                        initialDelaySeconds: 10
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 1
                      resources:
                        limits:
                          cpu: 250m
                          memory: 2Gi
                        requests:
                          cpu: 250m
                          memory: 2Gi
                      storageTSDBPath: /opt/gpudb/kagent/stats/storage/prometheus-storage
                      storageTSDBRetentionTime: 7d
                      timings:
                        evaluationInterval: 30s
                        scrapeInterval: 30s
                        scrapeTimeout: 10s
                    description: Prometheus - Prometheus specific configuration.
                    properties:
                      args:
                        default:
                        - -c
                        - /opt/gpudb/kagent/stats/prometheus/prometheus --log.level=debug
                          --config.file=/opt/gpudb/kagent/stats/prometheus/prometheus.yml
                          --web.listen-address=0.0.0.0:9090 --storage.tsdb.path=/opt/gpudb/kagent/stats/storage/prometheus-storage
                          --storage.tsdb.retention.time=7d  --web.enable-lifecycle
                        description: Set the arguments for the command within the
                          container to run.
                        items:
                          type: string
                        type: array
                      command:
                        default:
                        - /bin/sh
                        description: Set the command within the container to run.
                        items:
                          type: string
                        type: array
                      configFile:
                        default: /opt/gpudb/kagent/stats/loki/loki.yml
                        description: ConfigFile - Set the location of the Loki configuration
                          file.
                        type: string
                      configFileAsConfigMap:
                        default: true
                        description: ConfigFileAsConfigMap - If true the ConfigFile
                          is mounted from a ConfigMap
                        type: boolean
                      containerPort:
                        default:
                          containerPort: 9091
                          name: stats
                          protocol: TCP
                        description: 'The port that Stats will be running on. It runs
                          only on the head node pod in the cluster.   Default: 9091'
                        properties:
                          containerPort:
                            description: Number of port to expose on the pod's IP
                              address. This must be a valid port number, 0 < x < 65536.
                            format: int32
                            type: integer
                          hostIP:
                            description: What host IP to bind the external port to.
                            type: string
                          hostPort:
                            description: Number of port to expose on the host. If
                              specified, this must be a valid port number, 0 < x <
                              65536. If HostNetwork is specified, this must match
                              ContainerPort. Most containers do not need this.
                            format: int32
                            type: integer
                          name:
                            description: If specified, this must be an IANA_SVC_NAME
                              and unique within the pod. Each named port in a pod
                              must have a unique name. Name for the port that can
                              be referred to by services.
                            type: string
                          protocol:
                            default: TCP
                            description: Protocol for port. Must be UDP, TCP, or SCTP.
                              Defaults to "TCP".
                            type: string
                        required:
                        - containerPort
                        type: object
                      env:
                        description: List of environment variables to set in the container.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: 'Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables
                                in the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. Double $$ are
                                reduced to a single $, which allows for escaping the
                                $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce
                                the string literal "$(VAR_NAME)". Escaped references
                                will never be expanded, regardless of whether the
                                variable exists or not. Defaults to "".'
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                fieldRef:
                                  description: "Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels['<KEY>']`,
                                    `metadata.annotations['<KEY>']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs."
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                resourceFieldRef:
                                  description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: 
                                        ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        default:
                          registry: docker.io
                          repository: kinetica/kagent
                          tag: 7.1.9.15.20230823123615.ga
                        description: Set the name of the container image to use.
                        properties:
                          imagePullPolicy:
                            default: IfNotPresent
                            description: Set the policy for pulling container images.
                            type: string
                          imagePullSecrets:
                            description: "ImagePullSecrets is an optional list of
                              references to secrets in the same gpudb-namespace to
                              use for pulling any of the images used by this PodSpec.
                              If specified, these secrets will be passed to individual
                              puller implementations for them to use. \n For example,
                              in the case of docker, only DockerConfig type secrets
                              are honored."
                            items:
                              description: LocalObjectReference contains enough information
                                to let you locate the referenced object inside the
                                same namespace.
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                              type: object
                            type: array
                          registry:
                            default: docker.io
                            description: The image registry & optional port containing
                              the repository.
                            type: string
                          repository:
                            default: kineticadevcloud/
                            description: The image repository path.
                            type: string
                          semVer:
                            description: SemVer = Semantic Version for the Tag SemVer
                              semver.Version
                            type: string
                          sha:
                            default: ''
                            description: The image sha.
                            type: string
                          tag:
                            default: v7.1.5.2
                            description: The image tag.
                            type: string
                        type: object
                      isEnabled:
                        default: true
                        description: 'Whether to enable the Stats Server on the Cluster.   Default:
                          true'
                        type: boolean
                      livenessProbe:
                        default:
                          failureThreshold: 5
                          httpGet:
                            path: /
                            port: port_name
                            scheme: HTTP
                          initialDelaySeconds: 30
                          periodSeconds: 10
                          successThreshold: 1
                          timeoutSeconds: 1
                        description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                description: "Service is the name of the service to
                                  place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                  \n If this is not specified, the default behavior
                                  is defined by gRPC."
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is a beta field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                              is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      logLevel:
                        default: debug
                        description: Set the Prometheus logging level.
                        type: string
                      logs:
                        default: /opt/gpudb/kagent/stats/logs
                        description: Logs - Set the location of the Loki configuration
                          file.
                        type: string
                      name:
                        default: stats
                        type: string
                      readinessProbe:
                        default:
                          failureThreshold: 3
                          httpGet:
                            path: /
                            port: port_name
                            scheme: HTTP
                          initialDelaySeconds: 10
                          periodSeconds: 30
                          successThreshold: 1
                          timeoutSeconds: 1
                        description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                        properties:
                          exec:
                            description: Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          grpc:
                            description: GRPC specifies an action involving a GRPC
                              port.
                            properties:
                              port:
                                description: Port number of the gRPC service. Number
                                  must be in the range 1 to 65535.
                                format: int32
                                type: integer
                              service:
                                description: "Service is the name of the service to
                                  place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                  \n If this is not specified, the default behavior
                                  is defined by gRPC."
                                type: string
                            required:
                            - port
                            type: object
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name. This will
                                        be canonicalized upon output, so case-variant
                                        names will be understood as the same header.
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: TCPSocket specifies an action involving a
                              TCP port.
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is a beta field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                              is used if unset.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      resources:
                        default:
                          limits:
                            cpu: 250m
                            memory: 1Gi
                          requests:
                            cpu: 250m
                            ephemeral-storage: 10Gi
                            memory: 1Gi
                        description: Resource Requests & Limits for the Stats Pod.
                        properties:
                          claims:
                            description: "Claims lists the names of resources, defined
                              in spec.resourceClaims, that are used by this container.
                              \n This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate. \n This field
                              is immutable. It can only be set for containers."
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: Name must match the name of one entry
                                    in pod.spec.resourceClaims of the Pod where this
                                    field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: 
                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: 
                                ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      storageTSDBPath:
                        default: /opt/gpudb/kagent/stats/storage/prometheus-storage
                        description: Set the location of the TSDB database.
                        type: string
                      storageTSDBRetentionTime:
                        default: 7d
                        description: Set the time to hold data in the TSDB database.
                        type: string
                      timings:
                        default:
                          evaluationInterval: 30s
                          scrapeInterval: 30s
                          scrapeTimeout: 10s
                        description: Timings - Prometheus Intervals & Timeouts
                        properties:
                          evaluationInterval:
                            default: 30s
                            type: string
                          scrapeInterval:
                            default: 30s
                            type: string
                          scrapeTimeout:
                            default: 10s
                            type: string
                        required:
                        - evaluationInterval
                        - scrapeInterval
                        - scrapeTimeout
                        type: object
                    required:
                    - name
                    type: object
                  sharedPV:
                    default: true
                    description: 'Whether to share a single PV for Loki, Prometheus
                      & Grafana or have a separate PV for each.   Default: true'
                    type: boolean
                  sharedPVResources:
                    default:
                      limits:
                        storage: 100Gi
                      requests:
                        storage: 10Gi
                    description: Resource block specifically for use with SharedPV
                      = true to set storage `requests` & `limits`
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              supportingImages:
                default:
                  busybox:
                    registry: docker.io
                    repository: busybox
                    tag: 1.29.2
                  socat:
                    registry: docker.io
                    repository: alpine/socat
                    tag: 1.7.4.1-r2
                description: Supporting images like socat,busybox etc.
                properties:
                  busyBoxResources:
                    description: Set the resource requests/limits for the BusyBox
                      Pod(s).
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  busybox:
                    default:
                      registry: docker.io
                      repository: busybox
                      tag: 1.29.2
                    description: Set the name of the container image to use.
                    properties:
                      imagePullPolicy:
                        default: IfNotPresent
                        description: Set the policy for pulling container images.
                        type: string
                      imagePullSecrets:
                        description: "ImagePullSecrets is an optional list of references
                          to secrets in the same gpudb-namespace to use for pulling
                          any of the images used by this PodSpec. If specified, these
                          secrets will be passed to individual puller implementations
                          for them to use. \n For example, in the case of docker,
                          only DockerConfig type secrets are honored."
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        type: array
                      registry:
                        default: docker.io
                        description: The image registry & optional port containing
                          the repository.
                        type: string
                      repository:
                        default: kineticadevcloud/
                        description: The image repository path.
                        type: string
                      semVer:
                        description: SemVer = Semantic Version for the Tag SemVer
                          semver.Version
                        type: string
                      sha:
                        default: ''
                        description: The image sha.
                        type: string
                      tag:
                        default: v7.1.5.2
                        description: The image tag.
                        type: string
                    type: object
                  socat:
                    default:
                      registry: docker.io
                      repository: alpine/socat
                      tag: 1.7.4.1-r2
                    description: Set the name of the container image to use.
                    properties:
                      imagePullPolicy:
                        default: IfNotPresent
                        description: Set the policy for pulling container images.
                        type: string
                      imagePullSecrets:
                        description: "ImagePullSecrets is an optional list of references
                          to secrets in the same gpudb-namespace to use for pulling
                          any of the images used by this PodSpec. If specified, these
                          secrets will be passed to individual puller implementations
                          for them to use. \n For example, in the case of docker,
                          only DockerConfig type secrets are honored."
                        items:
                          description: LocalObjectReference contains enough information
                            to let you locate the referenced object inside the same
                            namespace.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        type: array
                      registry:
                        default: docker.io
                        description: The image registry & optional port containing
                          the repository.
                        type: string
                      repository:
                        default: kineticadevcloud/
                        description: The image repository path.
                        type: string
                      semVer:
                        description: SemVer = Semantic Version for the Tag SemVer
                          semver.Version
                        type: string
                      sha:
                        default: ''
                        description: The image sha.
                        type: string
                      tag:
                        default: v7.1.5.2
                        description: The image tag.
                        type: string
                    type: object
                  socatResources:
                    description: Set the resource requests/limits for the Socat Pod.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: 
                            ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
            required:
            - gaia
            - gpudbCluster
            - hostManagerMonitor
            type: object
          status:
            description: KineticaClusterStatus defines the observed state of KineticaCluster
            properties:
              cloudProvider:
                description: CloudProvider the DB is deployed on
                type: string
              cloudRegion:
                description: CloudRegion the DB is deployed on
                type: string
              clusterSize:
                description: ClusterSize the current number of ranks & type i.e. CPU
                  or GPU of the cluster
                properties:
                  tshirtSize:
                    description: "ClusterSizeEnum - T-Shirt size of the Kinetica DB
                      Cluster i.e. a representation of the number of nodes in a simple
                      to understand T-Short size scheme. This indicates the size of
                      the cluster i.e. the number of nodes. It does not identify the
                      size of the cloud provider nodes. For node size see ClusterTypeEnum.
                      \n Supported Values are: - \n \tXS \tS \tM \tL \tXL \tXXL \t\
                      XXXL"
                    enum:
                    - XS
                    - S
                    - M
                    - L
                    - XL
                    - XXL
                    - XXXL
                    type: string
                  tshirtType:
                    description: ClusterTypeEnum - An Enum of the node types of a
                      KineticaCluster e.g. CPU, GPU along with the Cloud Provider
                      node size e.g. size of the VM.
                    enum:
                    - SmallCPU
                    - LargeCPU
                    - SmallGPU
                    - LargeGPU
                    type: string
                required:
                - tshirtSize
                - tshirtType
                type: object
              currentReplicas:
                default: 0
                description: The number of ranks (replicas) that the cluster was last
                  run with
                format: int32
                type: integer
              firstStartComplete:
                default: false
                description: The first start of a new cluster has completed.
                type: boolean
              hmStatus:
                description: HostManagerStatusResponse - The contents of polling the
                  HostManager on port 9300n are added to the BR status field. This
                  allows clients to get the Host/Rank/Graph/ML status information.
                properties:
                  cluster_leader:
                    type: string
                  cluster_operation:
                    type: string
                  graph:
                    additionalProperties:
                      description: Graph - The Kinetica DB Graph server Status. Used
                        in HostManagerStatusResponse.
                      properties:
                        status:
                          type: string
                      required:
                      - status
                      type: object
                    type: object
                  graph_status:
                    type: string
                  host_httpd_status:
                    type: string
                  host_mode:
                    type: string
                  host_num_gpus:
                    type: string
                  host_pid:
                    type: integer
                  host_stats_status:
                    type: string
                  host_status:
                    type: string
                  hostname:
                    type: string
                  hosts:
                    additionalProperties:
                      description: Host - Represents a Host status for Kinetica DB.
                        The Host is a node on which DB Ranks are running. Used in
                        HostManagerStatusResponse.
                      properties:
                        graph_status:
                          type: string
                        host_httpd_status:
                          type: string
                        host_mode:
                          type: string
                        host_pid:
                          type: integer
                        host_stats_status:
                          type: string
                        host_status:
                          type: string
                        ml_status:
                          type: string
                        query_planner_status:
                          type: string
                        reveal_status:
                          type: string
                      required:
                      - graph_status
                      - host_httpd_status
                      - host_mode
                      - host_pid
                      - host_stats_status
                      - host_status
                      - ml_status
                      - query_planner_status
                      - reveal_status
                      type: object
                    type: object
                  license_expiration:
                    type: string
                  license_status:
                    type: string
                  license_type:
                    type: string
                  ml_status:
                    type: string
                  query_planner_status:
                    type: string
                  ranks:
                    additionalProperties:
                      description: Rank - Represents a Rank status for the Kinetica
                        DB. Used in HostManagerStatusResponse.
                      properties:
                        mode:
                          type: string
                        pid:
                          description: Pid - The OS Process Id for the Rank.
                          type: integer
                        status:
                          type: string
                      required:
                      - mode
                      - pid
                      - status
                      type: object
                    type: object
                  reveal_status:
                    type: string
                  system_idle_time:
                    type: string
                  system_mode:
                    type: string
                  system_rebalancing:
                    type: integer
                  system_status:
                    type: string
                  text:
                    additionalProperties:
                      description: Text - The Kinetica DB Text server Status. Used
                        in HostManagerStatusResponse.
                      properties:
                        status:
                          type: string
                      required:
                      - status
                      type: object
                    type: object
                  version:
                    type: string
                required:
                - cluster_leader
                - cluster_operation
                - graph
                - graph_status
                - host_httpd_status
                - host_mode
                - host_num_gpus
                - host_pid
                - host_stats_status
                - host_status
                - hostname
                - hosts
                - license_expiration
                - license_status
                - license_type
                - ml_status
                - query_planner_status
                - ranks
                - reveal_status
                - system_idle_time
                - system_mode
                - system_rebalancing
                - system_status
                - text
                - version
                type: object
              ingressUrls:
                description: The fully qualified Ingress routes.
                properties:
                  aaw:
                    type: string
                  dbMonitor:
                    type: string
                  files:
                    type: string
                  gadmin:
                    type: string
                  postgresProxy:
                    type: string
                  ranks:
                    additionalProperties:
                      type: string
                    type: object
                  reveal:
                    type: string
                required:
                - aaw
                - files
                - gadmin
                - reveal
                type: object
              internalIngressUrls:
                description: The fully qualified in-cluster Ingress routes.
                properties:
                  aaw:
                    type: string
                  dbMonitor:
                    type: string
                  files:
                    type: string
                  gadmin:
                    type: string
                  postgresProxy:
                    type: string
                  ranks:
                    additionalProperties:
                      type: string
                    type: object
                  reveal:
                    type: string
                required:
                - aaw
                - files
                - gadmin
                - reveal
                type: object
              isFreeSaaS:
                default: false
                description: Identify FreeSaaS Cluster
                type: boolean
              options:
                description: HostOptions used during DB Cluster Scaling Functions
                properties:
                  ram_limit:
                    type: integer
                required:
                - ram_limit
                type: object
              outstandingBillableHour:
                description: OutstandingBilling - A list of hours not yet billed for.
                  Will only be present if the plan is Pay As You Go                      and
                  the operator was unable to send the billing information due to an
                  issue with the                      cloud providers billing APIs.
                items:
                  description: BillableHour - A one hour billing timeslot.
                  properties:
                    billable:
                      type: boolean
                    billed:
                      type: boolean
                    billedAt:
                      format: date-time
                      type: string
                    duration:
                      type: string
                    end:
                      format: date-time
                      type: string
                    start:
                      format: date-time
                      type: string
                  required:
                  - billable
                  - billed
                  - duration
                  - end
                  - start
                  type: object
                type: array
              phase:
                description: The state or phase of the current DB installation
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.gpudbCluster.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaclusterschedules.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaClusterSchedule
    listKind: KineticaClusterScheduleList
    plural: kineticaclusterschedules
    singular: kineticaclusterschedule
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: KineticaClusterSchedule is the Schema for the kineticaclusterschedules
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaClusterScheduleSpec defines the desired state of
              KineticaClusterSchedule
            properties:
              foo:
                description: Foo is an example field of KineticaClusterSchedule. Edit
                  KineticaClusterSchedule_types.go to remove/update
                type: string
            type: object
          status:
            description: KineticaClusterScheduleStatus defines the observed state
              of KineticaClusterSchedule
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaclusterschemas.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaClusterSchema
    listKind: KineticaClusterSchemaList
    plural: kineticaclusterschemas
    shortNames:
    - kcs
    singular: kineticaclusterschema
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.provisioned
      name: Provisioned
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaClusterSchema is the Schema for the kineticaclusterschemas
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaClusterSchemaSpec defines the desired state of KineticaClusterSchema
            properties:
              db_create_schema_request:
                properties:
                  name:
                    description: Name - the name of the resource group to create in
                      the DB
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: 'Optional parameters. The default value is an empty
                      map ( {} ). Supported Parameters:      "max_cpu_concurrency",      "max_data"'
                    type: object
                required:
                - name
                type: object
              ringName:
                description: RingName is the name of the kinetica ring that this user
                  belongs to.
                type: string
            required:
            - ringName
            type: object
          status:
            description: KineticaClusterSchemaStatus defines the observed state of
              KineticaClusterSchema
            properties:
              provisioned:
                type: string
            required:
            - provisioned
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaclusterupgrades.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaClusterUpgrade
    listKind: KineticaClusterUpgradeList
    plural: kineticaclusterupgrades
    shortNames:
    - kcu
    singular: kineticaclusterupgrade
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.kineticaClusterNamespace
      name: Namespace
      type: string
    - jsonPath: .spec.upgradeToVersion
      name: Target Version
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaClusterUpgradeSpec defines the desired state of KineticaClusterUpgrade
            properties:
              kineticaClusterName:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                  The KineticaClusterName field of KineticaClusterUpgrade contains
                  the Kinetica Cluster Object name that will be upgraded'
                type: string
              kineticaClusterNamespace:
                description: The KineticaClusterNamespace field of the KineticaClusterUpgrade
                  contains the namespace where the Kinetica Cluster object is located
                type: string
              upgradeToVersion:
                description: The UpgradeToVersion field of KineticaClusterUpgrade
                  contains the version of the image that components will be upgraded
                  to
                type: string
            required:
            - kineticaClusterName
            - upgradeToVersion
            type: object
          status:
            description: KineticaClusterUpgradeStatus defines the observed state of
              KineticaClusterUpgrade
            properties:
              phase:
                description: Phase - The current phase/state of the Upgrade request
                type: string
              processed:
                default: false
                description: Processed - Indicates if the upgrade request has already
                  been processed. Avoids the upgrade being rerun in the case the Operator
                  gets restarted.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticagrants.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaGrant
    listKind: KineticaGrantList
    plural: kineticagrants
    shortNames:
    - kg
    singular: kineticagrant
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.ringName
      name: Ring
      type: string
    - jsonPath: .spec.addGrantRoleRequest.role
      name: Role
      type: string
    - jsonPath: .spec.addGrantRoleRequest.member
      name: Member
      type: string
    - jsonPath: .status.ldap_response
      name: LDAP
      type: string
    - jsonPath: .status.db_response.status
      name: DB
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaGrant KineticaGrant is the Schema for the kineticagrants
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaGrantSpec defines the desired state of KineticaGrant
            properties:
              addGrantAllOnSchemaRequest:
                description: Grants system-level and/or table permissions to a user
                  or role.
                properties:
                  member:
                    description: Name of the user or role that will be granted membership
                      in input parameter role. Must be an existing user or role.
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: Optional parameters. The default value is an empty
                      map ( {} ).
                    type: object
                  schemaName:
                    description: SchemaName - name of the schema on which to perform
                      the Grant All
                    type: string
                required:
                - schemaName
                type: object
              addGrantPermissionRequest:
                description: Grants system-level and/or table permissions to a user
                  or role.
                properties:
                  options:
                    additionalProperties:
                      type: string
                    description: Optional parameters. The default value is an empty
                      map ( {} ).
                    type: object
                  systemPermission:
                    description: "Permission to grant to the user or role. \n Supported
                      Values\tDescription system_admin\tFull access to all data and
                      system functions. system_user_admin\tAccess to administer users
                      and roles that do not have system_admin permission. system_write\t
                      Read and write access to all tables. system_read\tRead-only
                      access to all tables."
                    properties:
                      name:
                        description: UID of the user or role to which the permission
                          will be granted. Must be an existing user or role.
                        type: string
                      options:
                        additionalProperties:
                          type: string
                        description: "Optional parameters. The default value is an
                          empty map ( {} ). Supported Parameters:   \tresource_group\t
                          Name of an existing resource group to associate with this
                          role."
                        type: object
                      permission:
                        description: "Permission to grant to the user or role. \n
                          Supported Values\tDescription table_admin\tFull read/write
                          and administrative access to the table. table_insert\tInsert
                          access to the table. table_update\tUpdate access to the
                          table. table_delete\tDelete access to the table. table_read\t
                          Read access to the table."
                        enum:
                        - system_admin
                        - system_user_admin
                        - system_write
                        - system_read
                        type: string
                    required:
                    - name
                    - permission
                    type: object
                  tablePermissions:
                    description: "Permission to grant to the user or role. \n Supported
                      Values\tDescription<br/> system_admin\tFull access to all data
                      and system functions.<br/> system_user_admin\tAccess to administer
                      users and roles that do not have system_admin permission.<br/>
                      system_write\tRead and write access to all tables.<br/> system_read\t
                      Read-only access to all tables.<br/>"
                    items:
                      description: TablePermission Grants a table-level permission
                        to a user or role.
                      properties:
                        filter_expression:
                          default: ''
                          description: Optional filter expression to apply to this
                            grant. Only rows that match the filter will be affected.
                            The default value is ''.
                          type: string
                        name:
                          description: UID of the user or role to which the permission
                            will be granted. Must be an existing user or role.
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: "Optional parameters. The default value is
                            an empty map ( {} ). Supported Parameters:   \tresource_group\t
                            Name of an existing resource group to associate with this
                            role."
                          type: object
                        permission:
                          description: "Permission to grant to the user or role. \n
                            Supported Values\tDescription table_admin\tFull read/write
                            and administrative access to the table. table_insert\t
                            Insert access to the table. table_update\tUpdate access
                            to the table. table_delete\tDelete access to the table.
                            table_read\tRead access to the table."
                          enum:
                          - table_admin
                          - table_insert
                          - table_update
                          - table_delete
                          - table_read
                          type: string
                        table_name:
                          description: Name of the table for which the Permission
                            is to be granted
                          type: string
                      required:
                      - name
                      - permission
                      - table_name
                      type: object
                    type: array
                type: object
              addGrantRoleRequest:
                description: Grants membership in a role to a user or role.
                properties:
                  member:
                    description: Name of the user or role that will be granted membership
                      in input parameter role. Must be an existing user or role.
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: Optional parameters. The default value is an empty
                      map ( {} ).
                    type: object
                  role:
                    description: Name of the role in which membership will be granted.
                      Must be an existing role.
                    type: string
                type: object
              debug:
                default: false
                description: Debug debug the call
                type: boolean
              ringName:
                description: RingName is the name of the kinetica ring that this user
                  belongs to.
                type: string
            required:
            - ringName
            type: object
          status:
            description: KineticaGrantStatus defines the observed state of KineticaGrant
            properties:
              db_response:
                description: DBStringResponse - The GPUdb server embeds the endpoint
                  response inside a standard response structure which contains status
                  information and the actual response to the query.
                properties:
                  data:
                    type: string
                  data_str:
                    description: This embedded JSON represents the result of the endpoint
                    type: string
                  data_type:
                    description: API Call Specific
                    type: string
                  message:
                    description: Empty if success or an error message
                    type: string
                  status:
                    description: "'OK' or 'ERROR'"
                    type: string
                required:
                - data
                - data_str
                - data_type
                - message
                - status
                type: object
              ldap_response:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaoperatorupgrades.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaOperatorUpgrade
    listKind: KineticaOperatorUpgradeList
    plural: kineticaoperatorupgrades
    shortNames:
    - kou
    singular: kineticaoperatorupgrade
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaOperatorUpgrade KineticaOperatorUpgrade is the Schema
          for the kineticaoperatorupgrades API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaOperatorUpgradeSpec defines the desired state of
              KineticaOperatorUpgrade
            properties:
              upgradeToVersion:
                description: The UpgradeToVersion field of KineticaClusterUpgrade
                  contains the version of the image that components will be upgraded
                  to
                type: string
            required:
            - upgradeToVersion
            type: object
          status:
            description: KineticaOperatorUpgradeStatus defines the observed state
              of KineticaOperatorUpgrade
            properties:
              phase:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Phase is the current state of the upgrade'
                type: string
              processed:
                default: false
                description: Processed - Indicates if the admin request has already
                  been processed. Avoids the request being rerun in the case the Operator
                  gets restarted.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticareleaseversions.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaReleaseVersion
    listKind: KineticaReleaseVersionList
    plural: kineticareleaseversions
    shortNames:
    - krv
    singular: kineticareleaseversion
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: KineticaReleaseVersion is the Schema for the kineticareleaseversions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaReleaseVersionSpec defines the desired state of KineticaReleaseVersion
            properties:
              action:
                type: string
              cluster:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - action
            - cluster
            type: object
          status:
            description: KineticaReleaseVersionStatus defines the observed state of
              KineticaReleaseVersion
            properties:
              registryRepositoryTag:
                items:
                  description: RegistryRepositoryTag - DatabaseMetrics configuraion
                    object.
                  properties:
                    imagePullPolicy:
                      default: IfNotPresent
                      description: Set the policy for pulling container images.
                      type: string
                    imagePullSecrets:
                      description: "ImagePullSecrets is an optional list of references
                        to secrets in the same gpudb-namespace to use for pulling
                        any of the images used by this PodSpec. If specified, these
                        secrets will be passed to individual puller implementations
                        for them to use. \n For example, in the case of docker, only
                        DockerConfig type secrets are honored."
                      items:
                        description: LocalObjectReference contains enough information
                          to let you locate the referenced object inside the same
                          namespace.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                      type: array
                    registry:
                      default: docker.io
                      description: The image registry & optional port containing the
                        repository.
                      type: string
                    repository:
                      default: kineticadevcloud/
                      description: The image repository path.
                      type: string
                    semVer:
                      description: SemVer = Semantic Version for the Tag SemVer semver.Version
                      type: string
                    sha:
                      default: ''
                      description: The image sha.
                      type: string
                    tag:
                      default: v7.1.5.2
                      description: The image tag.
                      type: string
                  type: object
                type: array
            required:
            - registryRepositoryTag
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticaroles.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaRole
    listKind: KineticaRoleList
    plural: kineticaroles
    shortNames:
    - kr
    singular: kineticarole
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.ringName
      name: Ring
      type: string
    - jsonPath: .spec.role.name
      name: Role
      type: string
    - jsonPath: .spec.role.resourceGroupName
      name: ResourceGroupName
      type: string
    - jsonPath: .status.ldap_response
      name: LDAP
      type: string
    - jsonPath: .status.db_response.status
      name: DB
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaRole is the Schema for the kineticarole API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaRoleSpec defines the desired state of KineticaRole
            properties:
              alter_role:
                description: AlterRoleRequest Kinetica DB REST API Request Format
                  Object.
                properties:
                  action:
                    description: Action - Modification operation to be applied to
                      the role.
                    enum:
                    - set_resource_group
                    type: string
                  name:
                    description: Role UID - Name of the role to be altered. Must be
                      an existing role.
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: Optional parameters. The default value is an empty
                      map ( {} ).
                    type: object
                  value:
                    description: Value - The value of the modification, depending
                      on input parameter action.
                    type: string
                required:
                - action
                - name
                - value
                type: object
              debug:
                default: false
                description: Debug debug the call
                type: boolean
              ringName:
                description: RingName is the name of the kinetica ring that this user
                  belongs to.
                type: string
              role:
                description: AddRoleRequest Kinetica DB REST API Request Format Object.
                properties:
                  name:
                    description: User UID
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: "Optional parameters. The default value is an empty
                      map ( {} ). Supported Parameters:   \tresource_group\tName of
                      an existing resource group to associate with this role."
                    type: object
                  resourceGroupName:
                    default: ''
                    description: ResourceGroupName of an existing resource group to
                      associate with this role
                    type: string
                required:
                - name
                type: object
            required:
            - ringName
            type: object
          status:
            description: KineticaRoleStatus defines the observed state of KineticaRole
            properties:
              db_response:
                description: DBStringResponse - The GPUdb server embeds the endpoint
                  response inside a standard response structure which contains status
                  information and the actual response to the query.
                properties:
                  data:
                    type: string
                  data_str:
                    description: This embedded JSON represents the result of the endpoint
                    type: string
                  data_type:
                    description: API Call Specific
                    type: string
                  message:
                    description: Empty if success or an error message
                    type: string
                  status:
                    description: "'OK' or 'ERROR'"
                    type: string
                required:
                - data
                - data_str
                - data_type
                - message
                - status
                type: object
              ldap_response:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp:
  name: kineticausers.app.kinetica.com
spec:
  group: app.kinetica.com
  names:
    kind: KineticaUser
    listKind: KineticaUserList
    plural: kineticausers
    shortNames:
    - ku
    singular: kineticauser
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.action
      name: Action
      type: string
    - jsonPath: .spec.ringName
      name: Ring Name
      type: string
    - jsonPath: .spec.uid
      name: UID
      type: string
    - jsonPath: .spec.upsert.lastName
      name: Last Name
      type: string
    - jsonPath: .spec.upsert.givenName
      name: Given Name
      type: string
    - jsonPath: .spec.upsert.displayName
      name: Display Name
      type: string
    - jsonPath: .status.ldap_response
      name: LDAP
      type: string
    - jsonPath: .status.db_response.status
      name: DB
      type: string
    - jsonPath: .status.reveal_admin
      name: Reveal
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KineticaUser KineticaUser is the Schema for the kineticausers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KineticaUserSpec defines the desired state of KineticaUser
            properties:
              action:
                description: Action field contains UserActionEnum field indicating
                  whether it is an Upsert or Change Password operation. For deletion
                  delete the KineticaUser CR and a finalizer will remove the user
                  from LDAP.
                enum:
                - upsert
                - change-password
                type: string
              changePassword:
                description: ChangePassword specific fields
                properties:
                  passwordSecret:
                    description: "PasswordSecret - Not the actual user password but
                      the name of a Kubernetes Secret containing a Data element  \
                      \ with a Password attribute. The secret is removed on user creation.
                      Must be in the same namespace as the   Kinetica Cluster. \n
                      Must contain the following fields: - \t\toldPassword \t\tnewPassword"
                    type: string
                type: object
              debug:
                default: false
                description: Debug debug the call
                type: boolean
              groupId:
                description: GroupID - Organisation or Team Id the user belongs to.
                type: string
              reveal:
                description: Create the user in Reveal
                type: boolean
              ringName:
                description: RingName is the name of the kinetica ring that this user
                  belongs to.
                type: string
              uid:
                description: UID is the username (not UUID UID).
                type: string
              upsert:
                description: Upsert specific fields
                properties:
                  createHomeDirectory:
                    default: true
                    description: 'CreateHomeDirectory - when true, a home directory
                      in KiFS is created for this user The default value is true.
                      The supported values are: true false'
                    type: boolean
                  dataLimit:
                    anyOf:
                    - type: integer
                    - type: string
                    default: 10Gi
                    description: DB Memory user data size limit
                    pattern: 
                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  displayName:
                    description: DisplayName
                    type: string
                  givenName:
                    description: GivenName is Firstname also called Christian name.
                      givenName in LDAP terms.
                    type: string
                  kifsDataLimit:
                    anyOf:
                    - type: integer
                    - type: string
                    default: 2Gi
                    description: KIFs user data size limit
                    pattern: 
                      ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  lastName:
                    description: LastName refers to last name or surname. sn in LDAP
                      terms.
                    type: string
                  options:
                    additionalProperties:
                      type: string
                    description: Options -
                    type: object
                  passwordSecret:
                    description: PasswordSecret - Not the actual user password but
                      the name of a Kubernetes Secret containing a Data element   with
                      a Password attribute. The secret is removed on user creation.
                      Must be in the same namespace as the   Kinetica Cluster.
                    type: string
                  userPrincipalName:
                    description: UPN or UserPrincipalName - e.g. guyt@cp.com  Looks
                      like an email address.
                    type: string
                type: object
              uuid:
                description: UUID is the user unique UUID from the Control Plane.
                type: string
            required:
            - ringName
            type: object
          status:
            description: KineticaUserStatus defines the observed state of KineticaUser
            properties:
              db_response:
                description: DBStringResponse - The GPUdb server embeds the endpoint
                  response inside a standard response structure which contains status
                  information and the actual response to the query.
                properties:
                  data:
                    type: string
                  data_str:
                    description: This embedded JSON represents the result of the endpoint
                    type: string
                  data_type:
                    description: API Call Specific
                    type: string
                  message:
                    description: Empty if success or an error message
                    type: string
                  status:
                    description: "'OK' or 'ERROR'"
                    type: string
                required:
                - data
                - data_str
                - data_type
                - message
                - status
                type: object
              ldap_response:
                type: string
              reveal_admin:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []